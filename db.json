{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/img/7.gif","path":"img/7.gif","modified":1,"renderable":1},{"_id":"themes/next/source/img/log1.png","path":"img/log1.png","modified":1,"renderable":1},{"_id":"themes/next/source/img/sousuo1.jpg","path":"img/sousuo1.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/img/vue1.png","path":"img/vue1.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/alipay.png","path":"uploads/alipay.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/wechat.png","path":"uploads/wechat.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/img/log2.jpg","path":"img/log2.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1500382865372},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1500382865372},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1500382865372},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1500382865372},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1500382865372},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1500382865387},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1500382865387},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1500382865387},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1500382865387},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1500382865387},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1500382865387},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1500382865387},{"_id":"themes/next/_config.yml","hash":"9876063d2392db277a8669459f63b5da6c568203","modified":1500382865387},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1500382865387},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1500382865387},{"_id":"themes/next/package.json","hash":"55305ae40690c059cb9140900eb20f9e7f3a7707","modified":1500382865465},{"_id":"source/_posts/1hello-world.md","hash":"8081cec4a376c611d88693011d9e39cc8097ef03","modified":1500195510950},{"_id":"source/_posts/2hexo使用方法.md","hash":"7cf65c6c2cf7f2000374a56eaa61e42d8fa1c85c","modified":1500195510950},{"_id":"source/_posts/3手机号每4位显示空格.md","hash":"282b8888e4abd40b91398cdd09e1215275d441ee","modified":1500195510966},{"_id":"source/_posts/4处理json数据的空数据为任意字符.md","hash":"e45aebdd49c6bb333545c640960ad22e74899c0d","modified":1500195510966},{"_id":"source/_posts/5ajax多次请求，只执行最后一次的方法.md","hash":"976c3718f0d9ee9cf23b453d455e1d3905e8ff50","modified":1500195510966},{"_id":"source/_posts/ajax发送JSON数据.md","hash":"e68c70b5d138e449f9d320f23662963ab2850487","modified":1506158594317},{"_id":"source/_posts/axios发送数据放在formdata里.md","hash":"cd05043be585398aa342e5279f88cb35804d8645","modified":1506158594317},{"_id":"source/_posts/cooking构建工具报错MSBUILD error MSB4132解决办法.md","hash":"2e19f348166f5920ba802510fb3bc081ae91a6e1","modified":1500382865372},{"_id":"source/_posts/git提交异常解决方案.md","hash":"d208faeb503acfe566d21a262c2f5bd22c8d779d","modified":1500382865372},{"_id":"source/_posts/gulp自动刷新+反向代理.md","hash":"f7d3ed6d5eabcafb998ec8e6aa021db8554ee5dc","modified":1500195510966},{"_id":"source/_posts/tab栏切换，内容为不断实时刷新数据的vue实现方法.md","hash":"85307bdccee9276eaa42e0a916b159f18afbe396","modified":1500195510966},{"_id":"source/_posts/vscode插件推荐.md","hash":"f752c9923833dd1cf689f6b5b588c80faa12b4c2","modified":1500382865372},{"_id":"source/_posts/vue上拉加载更多的一些性能优化.md","hash":"db92b88a24d3e89e2aea4442819b0eba0e129e75","modified":1500382865372},{"_id":"source/_posts/vue使用webpack打包cdn资源优化.md","hash":"cec224475aa19027889299b7fb1e5994dbac09b8","modified":1500382865372},{"_id":"source/_posts/vue使用反向代理实现本地跨域调试.md","hash":"e859cf46f4cc184dfcaccea4e2a9e0e144a5cbe9","modified":1500195510966},{"_id":"source/_posts/vue动态路由页面刷新问题.md","hash":"3cb92e655f930cedf286216a03ccd0d97005854d","modified":1506157904441},{"_id":"source/_posts/vue同级组件传递参数的几种实现.md","hash":"cd512a2bda7508ddc68922f7abb83a2d0c125bff","modified":1506158594317},{"_id":"source/_posts/vue发现element里几个好用的方法.md","hash":"574004353bb8421de0609724f47a8dc97631b386","modified":1500382865372},{"_id":"source/_posts/vue手机端input获得焦点 输入法显示搜索.md","hash":"38bf3c9d31846388299a0d1f22f134a070195a8b","modified":1500195510966},{"_id":"source/_posts/vue根据后台返回01显示男女.md","hash":"d2aab5929d1b46fd8839784f9b1701f2d388eb93","modified":1500382865372},{"_id":"source/_posts/vue手机项目在手机端调试.md","hash":"887dcf4006b71680d04c8a06cce3ec6fd5304396","modified":1500195510966},{"_id":"source/_posts/vue验证本地token判断是否允许访问.md","hash":"bb8a7f0f65927954b205675768dcf930fc089b0d","modified":1500382865372},{"_id":"source/_posts/动态创建link标签.md","hash":"89d8c22d7217ccd35c6aebd0772a48e9e8c380fa","modified":1500382865372},{"_id":"source/_posts/多层数组是否被包含方法.md","hash":"cd171ccff5c8d0459e51683c85ad06cbef4ff1e6","modified":1506158594317},{"_id":"source/_posts/文字超出显示省略号.md","hash":"e23f5aa7a432462b207875323539c27e7a3d25f2","modified":1500382865372},{"_id":"source/tags/index-1.md","hash":"3d1937f31d29c42c48e7de758e4edd4da82952b7","modified":1500195510966},{"_id":"source/tags/index.md","hash":"a7e34e3bac725506ae1ec1b866f5eac4948999dc","modified":1500195510966},{"_id":"source/pageName/index.md","hash":"24786f30df0f782fe0176065801bdbd8cea6c9e9","modified":1500195510966},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1500382865372},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1500382865372},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1500382865387},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1500382865387},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1500382865387},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1500382865387},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1500382865387},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1500382865387},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1500382865387},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1500382865387},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1500382865403},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1500382865403},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1500382865403},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1500382865403},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1500382865403},{"_id":"themes/next/layout/_layout.swig","hash":"0f547afe52721ffcbbc32bbf18d1041f1b546685","modified":1500382865403},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1500382865450},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1500382865450},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1500382865450},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1500382865465},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1500382865465},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1500382865465},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1500382865465},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1500382865465},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1500382865465},{"_id":"themes/next/source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1500382865481},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1500382865715},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1500382865715},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1500382865715},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865575},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1500382865403},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1500382865403},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1500382865403},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1500382865403},{"_id":"themes/next/layout/_macro/post.swig","hash":"dc3792e703d10daacdb86a9f8d03e846d5b4da83","modified":1500382865403},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1500382865403},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"aa752a617fd0260cc0af4fd773bca0e36ea70d7f","modified":1500382865403},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1500382865403},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7b5003517242629cf0fee4b6cf017cd9873ab5ac","modified":1500382865403},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7a229b569743555215a4f2561997ad496d81e938","modified":1500382865403},{"_id":"themes/next/layout/_partials/head.swig","hash":"09b110f77c415c5b71ebd886771a10bc84b95633","modified":1500382865403},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1500382865419},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1500382865419},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1500382865419},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1500382865419},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1500382865419},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1500382865419},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1500382865434},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1500382865450},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1500382865450},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1500382865450},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1500382865450},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1500382865450},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1500382865450},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1500382865465},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1500382865465},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1500382865465},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1500382865465},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1500382865465},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1500382865465},{"_id":"themes/next/scripts/tags/note.js","hash":"fc4958427ca7bdb47a7d830077f432ed824973e4","modified":1500382865481},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1500382865575},{"_id":"themes/next/source/img/7.gif","hash":"b3386523747abf51bc264ab4425bf509285e181d","modified":1500382865590},{"_id":"themes/next/source/img/log1.png","hash":"e86f716ab7e5604e6df0e47405705775bf9f3bae","modified":1500382865590},{"_id":"themes/next/source/img/sousuo1.jpg","hash":"3f5240d199b8ee0bc89d749030a3107cd83fcaa7","modified":1500382865606},{"_id":"themes/next/source/img/vue1.png","hash":"54c9f67130a5432ebb456673fd19df0701e15c48","modified":1500382865606},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1500382865575},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1500382865575},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1500382865575},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1500382865575},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1500382865575},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1500382865575},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1500382865575},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1500382865575},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1500382865575},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1500382865575},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1500382865575},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1500382865575},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1500382865590},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1500382865590},{"_id":"themes/next/source/uploads/alipay.png","hash":"055ab47b8b7755f10305c5d4c76281b3adc26702","modified":1500382865715},{"_id":"themes/next/source/uploads/avatar.jpg","hash":"16a4277d6d42d0718369dcc005e3ad747ed9f65b","modified":1500382865715},{"_id":"themes/next/source/uploads/wechat.png","hash":"d8fd0d90155b2a93dce100902d6506eee117e806","modified":1500382865715},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865419},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865419},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865544},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865544},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865544},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865559},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1500382865575},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1500382865403},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1500382865403},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1500382865419},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1500382865419},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1500382865419},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1500382865419},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1500382865419},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1500382865419},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1500382865419},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1500382865419},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1500382865419},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"f4abf990882b0fbed2485c4355b760f2512c74f5","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1500382865434},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"be2aaeb8f05979e2ba501248480d5294256d61f2","modified":1500382865434},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1500382865450},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1500382865450},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1500382865450},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1500382865450},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1500382865450},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1500382865450},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1500382865544},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1500382865544},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"d1dfb6348ef7fafe140b170186340d6d5733bdf1","modified":1500382865544},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1500382865559},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1500382865575},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dacede1cc110c762e7a5468dc0e34ae1a962d5aa","modified":1500382865575},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1500382865606},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1500382865606},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1500382865606},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1500382865606},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1500382865606},{"_id":"themes/next/source/js/src/motion.js","hash":"dda8c76fce91d7f140c06de2583ba806810f12c2","modified":1500382865606},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1500382865606},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1500382865606},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1500382865606},{"_id":"themes/next/source/js/src/utils.js","hash":"e7465a22b536ed15006a5f5556d9a4e633f6bd71","modified":1500382865606},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1500382865622},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1500382865606},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1500382865637},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1500382865637},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1500382865653},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1500382865653},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1500382865653},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1500382865653},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1500382865669},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1500382865684},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1500382865684},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1500382865684},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1500382865684},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1500382865684},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1500382865684},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1500382865700},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1500382865700},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1500382865700},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1500382865700},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1500382865700},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1500382865700},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1500382865700},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1500382865715},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1500382865715},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1500382865715},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1500382865684},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1500382865450},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1500382865450},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d68bdfcdb9d9e0bf60ed9a2df88e0b55cbfcc1e6","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1500382865528},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1500382865544},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1500382865544},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1500382865544},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1500382865544},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1500382865544},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1500382865559},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1500382865606},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1500382865622},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1500382865622},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1500382865653},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1500382865653},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1500382865653},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1500382865653},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1500382865700},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1500382865700},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1500382865622},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1500382865622},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1500382865669},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1500382865669},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1500382865715},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1500382865481},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1500382865497},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bc08cfb2ef2ff44ba3fc7dffdb2deb01a9d17d15","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1500382865512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"876104ec0a9ca08ebedcb7655f07d66dd88e33de","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74019008ba973ab30f0f4a6b3c2cd33c66d3a4b4","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1500382865528},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1500382865544},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1500382865559},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1500382865559},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1500382865622},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1500382865622},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1500382865622},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1500382865622},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1500382865637},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1500382865637},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1500382865669},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1500382865669},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1500382865669},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1500382865622},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1500382865700},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1500382865669},{"_id":"themes/next/source/img/log2.jpg","hash":"a2eb4c0a4a85495b6094f4d9d5847438ef992602","modified":1500382865590},{"_id":"public/content.json","hash":"5298b4da120958f043de2ee252acd3b32470a4bd","modified":1506160284355},{"_id":"public/tags/index.html","hash":"f233fce907861b8b06b3195f90f782847f7d0035","modified":1506160284447},{"_id":"public/tags/index-1.html","hash":"1cd4aa291a43e36199011e302fe793c73a8302ac","modified":1506160284447},{"_id":"public/pageName/index.html","hash":"5e6de7ce7c3ea91ac53cb8d45f525b8f55e16108","modified":1506160284447},{"_id":"public/2016/05/01/1hello-world/index.html","hash":"31cade4a2b3c78374dd0a2d11c792197ae20bc87","modified":1506160284447},{"_id":"public/archives/page/3/index.html","hash":"e92a2f313265ea3c2de6014b77cc04a34f276d35","modified":1506160284447},{"_id":"public/archives/2016/page/2/index.html","hash":"fa1978ff3513ce58be37cbbb5ad46ef2fa2d1b89","modified":1506160284447},{"_id":"public/archives/2016/05/index.html","hash":"0b881c0316acacaad24d1f5fc92b5d9e1989bb34","modified":1506160284447},{"_id":"public/archives/2016/06/index.html","hash":"5c6293c289b136d3cbc8a9177284364bf943b5b2","modified":1506160284447},{"_id":"public/archives/2016/08/index.html","hash":"9b1dfe072fc7245ffb4c05d66a029e6589088c87","modified":1506160284447},{"_id":"public/archives/2016/09/index.html","hash":"32733ae9e3a95d07be6d8f2f0aba29a7fa0af1fd","modified":1506160284447},{"_id":"public/archives/2016/10/index.html","hash":"91cf15b0f2b6bf7c8ae824a0a87d6f377f45d2ca","modified":1506160284447},{"_id":"public/archives/2016/12/index.html","hash":"f0e400de127f2b38ed35f9f67970cd1bff8bb629","modified":1506160284447},{"_id":"public/archives/2017/page/2/index.html","hash":"ff619d9d82f9d2085aefa5a5b9f0adc1718b7359","modified":1506160284447},{"_id":"public/archives/2017/01/index.html","hash":"b1f5dabffc7d22e1adbb112d7ecaa92cd6d023f4","modified":1506160284447},{"_id":"public/archives/2017/02/index.html","hash":"fd1c620fd0f26b8fa56e474bfc1246d23ae8baa7","modified":1506160284447},{"_id":"public/archives/2017/03/index.html","hash":"cc47102e193bd5e6f406bdbc93dba95dbdf139d5","modified":1506160284447},{"_id":"public/archives/2017/04/index.html","hash":"a9549519487cc9687187ede62a5c997af3e74462","modified":1506160284447},{"_id":"public/archives/2017/06/index.html","hash":"cacd90b14dafedb1e0ef4e8092701a2493dfbc84","modified":1506160284447},{"_id":"public/archives/2017/07/index.html","hash":"4a28065c5607a10d6897e13ce3f232775fe081bb","modified":1506160284447},{"_id":"public/archives/2017/09/index.html","hash":"9c2685584958809ee72443b45cdf47bb3b2181c8","modified":1506160284447},{"_id":"public/tags/Other/index.html","hash":"95ebea7a619dae993fb603691d6f0be938087099","modified":1506160284447},{"_id":"public/tags/JS/index.html","hash":"a69d2ff89b9f67764e193ee3a63ff0ac3719dcd5","modified":1506160284447},{"_id":"public/tags/Vue/page/2/index.html","hash":"51decbb9f9796f80f6fdd58e0647b9f6c332d1b7","modified":1506160284447},{"_id":"public/tags/HTML/index.html","hash":"c4e1fc314ff7872b9be9626b56821cbce00a1c2c","modified":1506160284447},{"_id":"public/tags/CSS-JS/index.html","hash":"6d6489b4f425219744b0a29da1055464267c5b3c","modified":1506160284462},{"_id":"public/2017/09/23/vue动态路由页面刷新问题/index.html","hash":"2db3c30f877c65d48912daeabec6e126e521fd4f","modified":1506160284462},{"_id":"public/2017/07/20/vue同级组件传递参数的几种实现/index.html","hash":"e3e7ecc89538e2a4f6137af013fd2feca8eb1579","modified":1506160284462},{"_id":"public/2017/07/13/vue上拉加载更多的一些性能优化/index.html","hash":"3175c81377908dc9d4581b9724b100c8e73b1738","modified":1506160284462},{"_id":"public/2017/06/20/vue使用webpack打包cdn资源优化/index.html","hash":"05217905400e735b922b71bd0c720071227ca960","modified":1506160284462},{"_id":"public/2017/06/17/vue手机端input获得焦点 输入法显示搜索/index.html","hash":"8f1d0b1b742111e6dbe4ba4c501e6c0f9048011a","modified":1506160284462},{"_id":"public/2017/04/06/cooking构建工具报错MSBUILD error MSB4132解决办法/index.html","hash":"3428071085e216b725d0d86187574bace7c358ff","modified":1506160284462},{"_id":"public/2017/04/02/vue发现element里几个好用的方法/index.html","hash":"5e63946037956adf40de2ead315edc72dc6b2ef6","modified":1506160284462},{"_id":"public/2017/03/04/vscode插件推荐/index.html","hash":"4008c6b4425a2bc3711b21f01906898dc4d6d267","modified":1506160284462},{"_id":"public/2017/02/15/vue手机项目在手机端调试/index.html","hash":"c1a22ac9bce8ca109154b299b113a3fd714d1ab2","modified":1506160284462},{"_id":"public/2017/02/07/tab栏切换，内容为不断实时刷新数据的vue实现方法/index.html","hash":"d3eb0407edfa2056dc621305cc3ce8dbf61249f8","modified":1506160284462},{"_id":"public/2017/01/19/vue验证本地token判断是否允许访问/index.html","hash":"88ecbe5127145ac38c6fdc436c0c2cb3bced76fd","modified":1506160284462},{"_id":"public/2017/01/18/axios发送数据放在formdata里/index.html","hash":"970d6f32212c1191775654cd4fb9f4d8a96ab85c","modified":1506160284462},{"_id":"public/2017/01/16/vue使用反向代理实现本地跨域调试/index.html","hash":"06008c5486903639a873c20575b31953ab24e8b2","modified":1506160284462},{"_id":"public/2017/01/02/git提交异常解决方案/index.html","hash":"5abc9153e75dc906aafbd527b6e950c84530b0e0","modified":1506160284462},{"_id":"public/2016/12/13/vue根据后台返回01显示男女/index.html","hash":"a6044fc4df0fbf670dabdb031a5386bded4d1816","modified":1506160284462},{"_id":"public/2016/12/10/gulp自动刷新+反向代理/index.html","hash":"88393de13715b7c0eea854a2f18a8e5dedcfc6e6","modified":1506160284462},{"_id":"public/2016/10/09/多层数组是否被包含方法/index.html","hash":"f8fd0bd7494ce7a57971a695269f0f6e5192ab78","modified":1506160284462},{"_id":"public/2016/09/02/动态创建link标签/index.html","hash":"998fb36d679442eb73d1863e43b73db63d1dc273","modified":1506160284462},{"_id":"public/2016/08/03/文字超出显示省略号/index.html","hash":"0037fd0445dbc10d5a942fa5e591873a89ff09e2","modified":1506160284462},{"_id":"public/2016/06/02/ajax发送JSON数据/index.html","hash":"d3fbb447eb8aa2c7bba0611df29ee739630a3e81","modified":1506160284462},{"_id":"public/2016/05/07/5ajax多次请求，只执行最后一次的方法/index.html","hash":"7ca59b2bdb2e528a5e0188af5d69fe79d57ab4eb","modified":1506160284462},{"_id":"public/2016/05/06/4处理json数据的空数据为任意字符/index.html","hash":"f4bcc352fdbec8125923e237e065d1573cb7dad8","modified":1506160284462},{"_id":"public/2016/05/05/3手机号每4位显示空格/index.html","hash":"d11a4a4fd163870c26f07e881c22aad03319ce32","modified":1506160284462},{"_id":"public/2016/05/02/2hexo使用方法/index.html","hash":"012ce6c03d451f3d233e8c9c95cbeb61e4b4fcab","modified":1506160284462},{"_id":"public/archives/index.html","hash":"fe84d994a5743c0c2593caf080a028ff8cee9b41","modified":1506160284462},{"_id":"public/archives/page/2/index.html","hash":"53589f976e60bcdcf2c7e85cfd03c891a2f79ade","modified":1506160284462},{"_id":"public/archives/2016/index.html","hash":"4110f50fc924dbf0c53d3f549d517aa63bc0d198","modified":1506160284462},{"_id":"public/archives/2017/index.html","hash":"cc5e3393c2eb2794fe0668396096b26920f20505","modified":1506160284462},{"_id":"public/index.html","hash":"aa9f39df331d53509ca3e8e54430e0e433353b64","modified":1506160284462},{"_id":"public/page/2/index.html","hash":"53a19199346bb6c7ded265dd7941bec8e9f863af","modified":1506160284462},{"_id":"public/page/3/index.html","hash":"70ee225c2fb9ed2241a14d4aec67dcb3c9690d77","modified":1506160284462},{"_id":"public/tags/Vue/index.html","hash":"ebb815f75aad06c3c2273c396117d5f4b7dcabda","modified":1506160284462},{"_id":"public/img/7.gif","hash":"b3386523747abf51bc264ab4425bf509285e181d","modified":1506160284509},{"_id":"public/img/log1.png","hash":"e86f716ab7e5604e6df0e47405705775bf9f3bae","modified":1506160284509},{"_id":"public/img/sousuo1.jpg","hash":"3f5240d199b8ee0bc89d749030a3107cd83fcaa7","modified":1506160284509},{"_id":"public/img/vue1.png","hash":"54c9f67130a5432ebb456673fd19df0701e15c48","modified":1506160284509},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1506160284509},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1506160284509},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1506160284509},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1506160284509},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1506160284509},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1506160284509},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1506160284509},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1506160284509},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1506160284509},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506160284509},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1506160284509},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506160284509},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1506160284509},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506160284509},{"_id":"public/uploads/alipay.png","hash":"055ab47b8b7755f10305c5d4c76281b3adc26702","modified":1506160284509},{"_id":"public/uploads/avatar.jpg","hash":"16a4277d6d42d0718369dcc005e3ad747ed9f65b","modified":1506160284509},{"_id":"public/uploads/wechat.png","hash":"d8fd0d90155b2a93dce100902d6506eee117e806","modified":1506160284509},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1506160284509},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1506160284509},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506160284509},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506160284509},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506160284509},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506160284509},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506160284509},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506160284509},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1506160284509},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1506160284509},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1506160284509},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1506160284509},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1506160284509},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506160284509},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1506160285409},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1506160285425},{"_id":"public/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1506160285440},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1506160285440},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1506160285440},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1506160285440},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1506160285440},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1506160285440},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1506160285440},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1506160285440},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1506160285440},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1506160285440},{"_id":"public/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1506160285440},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506160285440},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506160285440},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1506160285456},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1506160285456},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1506160285456},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1506160285456},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1506160285456},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1506160285456},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1506160285456},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1506160285456},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1506160285456},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1506160285456},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1506160285456},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1506160285456},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1506160285456},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1506160285456},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1506160285456},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1506160285456},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506160285456},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1506160285456},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1506160285456},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1506160285456},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506160285456},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506160285456},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1506160285456},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1506160285456},{"_id":"public/css/main.css","hash":"00bc44fa017acdf220a6b23c5af63d876d230e3d","modified":1506160285456},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1506160285456},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1506160285456},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1506160285456},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1506160285456},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1506160285456},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506160285456},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1506160285456},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1506160285456},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1506160285456},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1506160285456},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1506160285456},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1506160285456},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1506160285456},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1506160285456},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1506160285456},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1506160285456},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1506160285456},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1506160285456},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1506160285456},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1506160285456},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1506160285456},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1506160285581},{"_id":"public/img/log2.jpg","hash":"a2eb4c0a4a85495b6094f4d9d5847438ef992602","modified":1506160285675}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2016-05-02T10:11:55.000Z","_content":"\n\n## [JS](/tags/js)\n\n## [HTML](/tags/HTML)\n\n## [CSS](/tags/CSS)\n\n## [Vue](/tags/Vue)\n\n## [Other](/tags/Other)\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-5-2 18:11:55\n---\n\n\n## [JS](/tags/js)\n\n## [HTML](/tags/HTML)\n\n## [CSS](/tags/CSS)\n\n## [Vue](/tags/Vue)\n\n## [Other](/tags/Other)\n\n","updated":"2017-07-16T08:58:30.966Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj7x4xxoo0001og9wc7xn1ekj","content":"<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a><a href=\"/tags/js\">JS</a></h2><h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a><a href=\"/tags/HTML\">HTML</a></h2><h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a><a href=\"/tags/CSS\">CSS</a></h2><h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a><a href=\"/tags/Vue\">Vue</a></h2><h2 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a><a href=\"/tags/Other\">Other</a></h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a><a href=\"/tags/js\">JS</a></h2><h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a><a href=\"/tags/HTML\">HTML</a></h2><h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a><a href=\"/tags/CSS\">CSS</a></h2><h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a><a href=\"/tags/Vue\">Vue</a></h2><h2 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a><a href=\"/tags/Other\">Other</a></h2>"},{"title":"tags","date":"2017-07-12T10:12:21.000Z","_content":"","source":"tags/index-1.md","raw":"---\ntitle: tags\ndate: 2017-07-12 18:12:21\n---\n","updated":"2017-07-16T08:58:30.966Z","path":"tags/index-1.html","comments":1,"layout":"page","_id":"cj7x4xxp30003og9wcbor5y5i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"pageName","date":"2017-07-06T03:09:27.000Z","_content":"","source":"pageName/index.md","raw":"---\ntitle: pageName\ndate: 2017-07-06 11:09:27\n---\n","updated":"2017-07-16T08:58:30.966Z","path":"pageName/index.html","comments":1,"layout":"page","_id":"cj7x4xxpj0006og9wd03e18tz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello world","date":"2016-05-01T02:14:50.000Z","_content":"\n### 这是一个新的开始\n\n\n","source":"_posts/1hello-world.md","raw":"---\ntitle: Hello world\ndate: 2016-05-01 10:14:50\ntags: Other\n---\n\n### 这是一个新的开始\n\n\n","slug":"1hello-world","published":1,"updated":"2017-07-16T08:58:30.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxo80000og9waca48o2o","content":"<h3 id=\"这是一个新的开始\"><a href=\"#这是一个新的开始\" class=\"headerlink\" title=\"这是一个新的开始\"></a>这是一个新的开始</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"这是一个新的开始\"><a href=\"#这是一个新的开始\" class=\"headerlink\" title=\"这是一个新的开始\"></a>这是一个新的开始</h3>"},{"title":"hexo使用方法","date":"2016-05-02T02:14:50.000Z","_content":"# 正式安装Hexo\n\nNode和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。\n\n执行如下命令安装Hexo：\n```shell\nsudo npm install -g hexo\n```\n初始化然后，执行init命令初始化hexo,命令：\n```shell\nhexo init\n```\n好啦，至此，全部安装工作已经完成！blog就是你的博客根目录，所有的操作都在里面进行。\n\n生成静态页面\n```shell\nhexo generate（hexo g也可以）\n```\n本地启动\n\n启动本地服务，进行文章预览调试，命令：\n```shell\nhexo server\n```\n浏览器输入http://localhost:4000\n\n我不知道你们能不能，反正我不能，因为我还有环境没配置好\n\n# 配置Github\n\n建立Repository\n\n建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法\n\n然后建立关联，我的blog在本地/Users/leopard/blog，blog是我之前建的东西也全在这里面，有：\n```\n    _config.yml    node_modules    public      source\n\n    db.json        package.json    scaffolds  themes\n```\n现在我们需要_config.yml文件，来建立关联，命令：\n```\nvim _config.yml\n```\n翻到最下面，改成我这样子的\n```shell\ndeploy:\n\n     type: git\n\n     repo: https://github.com/leopardpan/leopardpan.github.io.git\n\n     branch: master\n```\n然后执行命令：\n```shell\nnpm install hexo-deployer-git --save\n```\n网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。\n\n忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。\n\n然后，执行配置命令：\n```shell\nhexo deploy\n```\n然后再浏览器中输入http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了\n\n# 部署步骤\n\n每次部署的步骤，可按以下三步来进行。\n```shell\n    hexo clean\n\n    hexo generate\n\n    hexo deploy\n```\n\n# 一些常用命令：\n```shell\nhexo new \"postName\" #新建文章\n\nhexo new page \"pageName\" #新建页面\n\nhexo generate #生成静态页面至public目录\n\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo help # 查看帮助\n\nhexo version #查看Hexo的版本\n```\n链接：http://www.jianshu.com/p/465830080ea9\n來源：简书\n\n主题配置方法\n\nhttps://github.com/iissnan/hexo-theme-next\n","source":"_posts/2hexo使用方法.md","raw":"---\ntitle: hexo使用方法\ndate: 2016-05-02 10:14:50\ntags: Other\n---\n# 正式安装Hexo\n\nNode和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。\n\n执行如下命令安装Hexo：\n```shell\nsudo npm install -g hexo\n```\n初始化然后，执行init命令初始化hexo,命令：\n```shell\nhexo init\n```\n好啦，至此，全部安装工作已经完成！blog就是你的博客根目录，所有的操作都在里面进行。\n\n生成静态页面\n```shell\nhexo generate（hexo g也可以）\n```\n本地启动\n\n启动本地服务，进行文章预览调试，命令：\n```shell\nhexo server\n```\n浏览器输入http://localhost:4000\n\n我不知道你们能不能，反正我不能，因为我还有环境没配置好\n\n# 配置Github\n\n建立Repository\n\n建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法\n\n然后建立关联，我的blog在本地/Users/leopard/blog，blog是我之前建的东西也全在这里面，有：\n```\n    _config.yml    node_modules    public      source\n\n    db.json        package.json    scaffolds  themes\n```\n现在我们需要_config.yml文件，来建立关联，命令：\n```\nvim _config.yml\n```\n翻到最下面，改成我这样子的\n```shell\ndeploy:\n\n     type: git\n\n     repo: https://github.com/leopardpan/leopardpan.github.io.git\n\n     branch: master\n```\n然后执行命令：\n```shell\nnpm install hexo-deployer-git --save\n```\n网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。\n\n忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。\n\n然后，执行配置命令：\n```shell\nhexo deploy\n```\n然后再浏览器中输入http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了\n\n# 部署步骤\n\n每次部署的步骤，可按以下三步来进行。\n```shell\n    hexo clean\n\n    hexo generate\n\n    hexo deploy\n```\n\n# 一些常用命令：\n```shell\nhexo new \"postName\" #新建文章\n\nhexo new page \"pageName\" #新建页面\n\nhexo generate #生成静态页面至public目录\n\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo help # 查看帮助\n\nhexo version #查看Hexo的版本\n```\n链接：http://www.jianshu.com/p/465830080ea9\n來源：简书\n\n主题配置方法\n\nhttps://github.com/iissnan/hexo-theme-next\n","slug":"2hexo使用方法","published":1,"updated":"2017-07-16T08:58:30.950Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxp30002og9wckadxqx3","content":"<h1 id=\"正式安装Hexo\"><a href=\"#正式安装Hexo\" class=\"headerlink\" title=\"正式安装Hexo\"></a>正式安装Hexo</h1><p>Node和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。</p>\n<p>执行如下命令安装Hexo：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install -g hexo</div></pre></td></tr></table></figure></p>\n<p>初始化然后，执行init命令初始化hexo,命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>好啦，至此，全部安装工作已经完成！blog就是你的博客根目录，所有的操作都在里面进行。</p>\n<p>生成静态页面<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate（hexo g也可以）</div></pre></td></tr></table></figure></p>\n<p>本地启动</p>\n<p>启动本地服务，进行文章预览调试，命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>浏览器输入<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a></p>\n<p>我不知道你们能不能，反正我不能，因为我还有环境没配置好</p>\n<h1 id=\"配置Github\"><a href=\"#配置Github\" class=\"headerlink\" title=\"配置Github\"></a>配置Github</h1><p>建立Repository</p>\n<p>建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法</p>\n<p>然后建立关联，我的blog在本地/Users/leopard/blog，blog是我之前建的东西也全在这里面，有：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">    _config.yml    node_modules    public      source</div><div class=\"line\"></div><div class=\"line\">    db.json        package.json    scaffolds  themes</div></pre></td></tr></table></figure></p>\n<p>现在我们需要_config.yml文件，来建立关联，命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim _config.yml</div></pre></td></tr></table></figure></p>\n<p>翻到最下面，改成我这样子的<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\"></div><div class=\"line\">     type: git</div><div class=\"line\"></div><div class=\"line\">     repo: https://github.com/leopardpan/leopardpan.github.io.git</div><div class=\"line\"></div><div class=\"line\">     branch: master</div></pre></td></tr></table></figure></p>\n<p>然后执行命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。</p>\n<p>忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。</p>\n<p>然后，执行配置命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure></p>\n<p>然后再浏览器中输入<a href=\"http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了\" target=\"_blank\" rel=\"external\">http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了</a></p>\n<h1 id=\"部署步骤\"><a href=\"#部署步骤\" class=\"headerlink\" title=\"部署步骤\"></a>部署步骤</h1><p>每次部署的步骤，可按以下三步来进行。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    hexo clean</div><div class=\"line\"></div><div class=\"line\">    hexo generate</div><div class=\"line\"></div><div class=\"line\">    hexo deploy</div></pre></td></tr></table></figure></p>\n<h1 id=\"一些常用命令：\"><a href=\"#一些常用命令：\" class=\"headerlink\" title=\"一些常用命令：\"></a>一些常用命令：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new \"postName\" #新建文章</div><div class=\"line\"></div><div class=\"line\">hexo new page \"pageName\" #新建页面</div><div class=\"line\"></div><div class=\"line\">hexo generate #生成静态页面至public目录</div><div class=\"line\"></div><div class=\"line\">hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</div><div class=\"line\"></div><div class=\"line\">hexo deploy #将.deploy目录部署到GitHub</div><div class=\"line\"></div><div class=\"line\">hexo help # 查看帮助</div><div class=\"line\"></div><div class=\"line\">hexo version #查看Hexo的版本</div></pre></td></tr></table></figure>\n<p>链接：<a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/465830080ea9</a><br>來源：简书</p>\n<p>主题配置方法</p>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">https://github.com/iissnan/hexo-theme-next</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"正式安装Hexo\"><a href=\"#正式安装Hexo\" class=\"headerlink\" title=\"正式安装Hexo\"></a>正式安装Hexo</h1><p>Node和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。</p>\n<p>执行如下命令安装Hexo：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install -g hexo</div></pre></td></tr></table></figure></p>\n<p>初始化然后，执行init命令初始化hexo,命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<p>好啦，至此，全部安装工作已经完成！blog就是你的博客根目录，所有的操作都在里面进行。</p>\n<p>生成静态页面<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate（hexo g也可以）</div></pre></td></tr></table></figure></p>\n<p>本地启动</p>\n<p>启动本地服务，进行文章预览调试，命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>浏览器输入<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a></p>\n<p>我不知道你们能不能，反正我不能，因为我还有环境没配置好</p>\n<h1 id=\"配置Github\"><a href=\"#配置Github\" class=\"headerlink\" title=\"配置Github\"></a>配置Github</h1><p>建立Repository</p>\n<p>建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法</p>\n<p>然后建立关联，我的blog在本地/Users/leopard/blog，blog是我之前建的东西也全在这里面，有：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">    _config.yml    node_modules    public      source</div><div class=\"line\"></div><div class=\"line\">    db.json        package.json    scaffolds  themes</div></pre></td></tr></table></figure></p>\n<p>现在我们需要_config.yml文件，来建立关联，命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim _config.yml</div></pre></td></tr></table></figure></p>\n<p>翻到最下面，改成我这样子的<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\"></div><div class=\"line\">     type: git</div><div class=\"line\"></div><div class=\"line\">     repo: https://github.com/leopardpan/leopardpan.github.io.git</div><div class=\"line\"></div><div class=\"line\">     branch: master</div></pre></td></tr></table></figure></p>\n<p>然后执行命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。</p>\n<p>忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。</p>\n<p>然后，执行配置命令：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure></p>\n<p>然后再浏览器中输入<a href=\"http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了\" target=\"_blank\" rel=\"external\">http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了</a></p>\n<h1 id=\"部署步骤\"><a href=\"#部署步骤\" class=\"headerlink\" title=\"部署步骤\"></a>部署步骤</h1><p>每次部署的步骤，可按以下三步来进行。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">    hexo clean</div><div class=\"line\"></div><div class=\"line\">    hexo generate</div><div class=\"line\"></div><div class=\"line\">    hexo deploy</div></pre></td></tr></table></figure></p>\n<h1 id=\"一些常用命令：\"><a href=\"#一些常用命令：\" class=\"headerlink\" title=\"一些常用命令：\"></a>一些常用命令：</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new \"postName\" #新建文章</div><div class=\"line\"></div><div class=\"line\">hexo new page \"pageName\" #新建页面</div><div class=\"line\"></div><div class=\"line\">hexo generate #生成静态页面至public目录</div><div class=\"line\"></div><div class=\"line\">hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</div><div class=\"line\"></div><div class=\"line\">hexo deploy #将.deploy目录部署到GitHub</div><div class=\"line\"></div><div class=\"line\">hexo help # 查看帮助</div><div class=\"line\"></div><div class=\"line\">hexo version #查看Hexo的版本</div></pre></td></tr></table></figure>\n<p>链接：<a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/465830080ea9</a><br>來源：简书</p>\n<p>主题配置方法</p>\n<p><a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"external\">https://github.com/iissnan/hexo-theme-next</a></p>\n"},{"title":"手机号每4位显示空格","date":"2016-05-05T14:14:50.000Z","_content":"\n# 手机号每4位显示空格\n\n开发有时候会遇到输入手机号和银行卡号，按照每4位显示一个空格的需求，方便用户阅读，如果是纯展示，就很容易实现，如果是一边输入一边展示则有点难度\n\n有人用两个input实现，一个负责输入数据，但是透明看不见，另外一个展示在界面上，变相的解决了这个需求（手机上可调用数字键盘）\n\n本次取巧写个demo，只用一个input用定时器不断的查询输入的字符来判断输入的数据（无法直接调用数字键盘，因为里边有空格）\n\n如果是银行卡号，将字符判断长度更改为，也可以根据实际需求来判断长度\n```js\nlastLen === 5 || lastLen === 10 || lastLen === 15|| lastLen === 20\n```\n\n话不多说，上代码\n\n```html\n<body>\n<input type=\"text\" id=\"telphone\"><span id=\"err\"></span>\n<script>\n    var telphone = document.getElementById('telphone');\n    var err = document.getElementById('err');\n    //定义两个缓存值\n    var firstLen = 0;\n    var lastLen = 0;\n    var re=/^1(3|4|5|7|8)\\d{9}$/;\n    telphone.oninput = function () {\n        telphone.value = telphone.value.substr(0, 13);//只允许输入11位+2个空格\n        //用户输入满11位开始验证\n        if(telphone.value.length==13){\n            //将数据去掉空格后验证\n            if(!re.test(telphone.value.replace(/\\s/g, ''))){\n                err.innerHTML='手机号码有误'\n            } else{\n                err.innerHTML=''\n            }\n        }else{\n            err.innerHTML=''\n        }\n\n    }\n    telphone.onfocus = function () {\n        timer = setInterval(function () {\n            lastLen = telphone.value.length;\n            if (lastLen > firstLen) {\n                firstLen = telphone.value.length;\n                if (lastLen === 4 || lastLen === 9) {\n                    var temp1 = telphone.value.substr(0, telphone.value.length - 1);\n                    var temp2 = telphone.value.substr(telphone.value.length - 1);\n                    telphone.value = temp1 + ' ' + temp2;\n                }\n            } else if (lastLen <= firstLen) {\n                if (lastLen === 4 || lastLen === 9) {\n                    telphone.value = telphone.value.substr(0, telphone.value.length - 1);\n                }\n                firstLen = telphone.value.length;\n            }\n        }, 10);//如果手机出现卡顿，可适当把定时器时间加大\n    }\n</script>\n</body>\n\n```","source":"_posts/3手机号每4位显示空格.md","raw":"---\ntitle: 手机号每4位显示空格\ndate: 2016-05-05 22:14:50\ntags: JS\n---\n\n# 手机号每4位显示空格\n\n开发有时候会遇到输入手机号和银行卡号，按照每4位显示一个空格的需求，方便用户阅读，如果是纯展示，就很容易实现，如果是一边输入一边展示则有点难度\n\n有人用两个input实现，一个负责输入数据，但是透明看不见，另外一个展示在界面上，变相的解决了这个需求（手机上可调用数字键盘）\n\n本次取巧写个demo，只用一个input用定时器不断的查询输入的字符来判断输入的数据（无法直接调用数字键盘，因为里边有空格）\n\n如果是银行卡号，将字符判断长度更改为，也可以根据实际需求来判断长度\n```js\nlastLen === 5 || lastLen === 10 || lastLen === 15|| lastLen === 20\n```\n\n话不多说，上代码\n\n```html\n<body>\n<input type=\"text\" id=\"telphone\"><span id=\"err\"></span>\n<script>\n    var telphone = document.getElementById('telphone');\n    var err = document.getElementById('err');\n    //定义两个缓存值\n    var firstLen = 0;\n    var lastLen = 0;\n    var re=/^1(3|4|5|7|8)\\d{9}$/;\n    telphone.oninput = function () {\n        telphone.value = telphone.value.substr(0, 13);//只允许输入11位+2个空格\n        //用户输入满11位开始验证\n        if(telphone.value.length==13){\n            //将数据去掉空格后验证\n            if(!re.test(telphone.value.replace(/\\s/g, ''))){\n                err.innerHTML='手机号码有误'\n            } else{\n                err.innerHTML=''\n            }\n        }else{\n            err.innerHTML=''\n        }\n\n    }\n    telphone.onfocus = function () {\n        timer = setInterval(function () {\n            lastLen = telphone.value.length;\n            if (lastLen > firstLen) {\n                firstLen = telphone.value.length;\n                if (lastLen === 4 || lastLen === 9) {\n                    var temp1 = telphone.value.substr(0, telphone.value.length - 1);\n                    var temp2 = telphone.value.substr(telphone.value.length - 1);\n                    telphone.value = temp1 + ' ' + temp2;\n                }\n            } else if (lastLen <= firstLen) {\n                if (lastLen === 4 || lastLen === 9) {\n                    telphone.value = telphone.value.substr(0, telphone.value.length - 1);\n                }\n                firstLen = telphone.value.length;\n            }\n        }, 10);//如果手机出现卡顿，可适当把定时器时间加大\n    }\n</script>\n</body>\n\n```","slug":"3手机号每4位显示空格","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpj0005og9w7ryysqei","content":"<h1 id=\"手机号每4位显示空格\"><a href=\"#手机号每4位显示空格\" class=\"headerlink\" title=\"手机号每4位显示空格\"></a>手机号每4位显示空格</h1><p>开发有时候会遇到输入手机号和银行卡号，按照每4位显示一个空格的需求，方便用户阅读，如果是纯展示，就很容易实现，如果是一边输入一边展示则有点难度</p>\n<p>有人用两个input实现，一个负责输入数据，但是透明看不见，另外一个展示在界面上，变相的解决了这个需求（手机上可调用数字键盘）</p>\n<p>本次取巧写个demo，只用一个input用定时器不断的查询输入的字符来判断输入的数据（无法直接调用数字键盘，因为里边有空格）</p>\n<p>如果是银行卡号，将字符判断长度更改为，也可以根据实际需求来判断长度<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lastLen === <span class=\"number\">5</span> || lastLen === <span class=\"number\">10</span> || lastLen === <span class=\"number\">15</span>|| lastLen === <span class=\"number\">20</span></div></pre></td></tr></table></figure></p>\n<p>话不多说，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"telphone\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"err\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> telphone = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'telphone'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> err = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'err'</span>);</div><div class=\"line\">    <span class=\"comment\">//定义两个缓存值</span></div><div class=\"line\">    <span class=\"keyword\">var</span> firstLen = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> lastLen = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> re=<span class=\"regexp\">/^1(3|4|5|7|8)\\d&#123;9&#125;$/</span>;</div><div class=\"line\">    telphone.oninput = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        telphone.value = telphone.value.substr(<span class=\"number\">0</span>, <span class=\"number\">13</span>);<span class=\"comment\">//只允许输入11位+2个空格</span></div><div class=\"line\">        <span class=\"comment\">//用户输入满11位开始验证</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(telphone.value.length==<span class=\"number\">13</span>)&#123;</div><div class=\"line\">            <span class=\"comment\">//将数据去掉空格后验证</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(!re.test(telphone.value.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">''</span>)))&#123;</div><div class=\"line\">                err.innerHTML=<span class=\"string\">'手机号码有误'</span></div><div class=\"line\">            &#125; <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                err.innerHTML=<span class=\"string\">''</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            err.innerHTML=<span class=\"string\">''</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    telphone.onfocus = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            lastLen = telphone.value.length;</div><div class=\"line\">            <span class=\"keyword\">if</span> (lastLen &gt; firstLen) &#123;</div><div class=\"line\">                firstLen = telphone.value.length;</div><div class=\"line\">                <span class=\"keyword\">if</span> (lastLen === <span class=\"number\">4</span> || lastLen === <span class=\"number\">9</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> temp1 = telphone.value.substr(<span class=\"number\">0</span>, telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">var</span> temp2 = telphone.value.substr(telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                    telphone.value = temp1 + <span class=\"string\">' '</span> + temp2;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (lastLen &lt;= firstLen) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (lastLen === <span class=\"number\">4</span> || lastLen === <span class=\"number\">9</span>) &#123;</div><div class=\"line\">                    telphone.value = telphone.value.substr(<span class=\"number\">0</span>, telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                firstLen = telphone.value.length;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;, <span class=\"number\">10</span>);<span class=\"comment\">//如果手机出现卡顿，可适当把定时器时间加大</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"手机号每4位显示空格\"><a href=\"#手机号每4位显示空格\" class=\"headerlink\" title=\"手机号每4位显示空格\"></a>手机号每4位显示空格</h1><p>开发有时候会遇到输入手机号和银行卡号，按照每4位显示一个空格的需求，方便用户阅读，如果是纯展示，就很容易实现，如果是一边输入一边展示则有点难度</p>\n<p>有人用两个input实现，一个负责输入数据，但是透明看不见，另外一个展示在界面上，变相的解决了这个需求（手机上可调用数字键盘）</p>\n<p>本次取巧写个demo，只用一个input用定时器不断的查询输入的字符来判断输入的数据（无法直接调用数字键盘，因为里边有空格）</p>\n<p>如果是银行卡号，将字符判断长度更改为，也可以根据实际需求来判断长度<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">lastLen === <span class=\"number\">5</span> || lastLen === <span class=\"number\">10</span> || lastLen === <span class=\"number\">15</span>|| lastLen === <span class=\"number\">20</span></div></pre></td></tr></table></figure></p>\n<p>话不多说，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"telphone\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"err\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> telphone = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'telphone'</span>);</div><div class=\"line\">    <span class=\"keyword\">var</span> err = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'err'</span>);</div><div class=\"line\">    <span class=\"comment\">//定义两个缓存值</span></div><div class=\"line\">    <span class=\"keyword\">var</span> firstLen = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> lastLen = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> re=<span class=\"regexp\">/^1(3|4|5|7|8)\\d&#123;9&#125;$/</span>;</div><div class=\"line\">    telphone.oninput = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        telphone.value = telphone.value.substr(<span class=\"number\">0</span>, <span class=\"number\">13</span>);<span class=\"comment\">//只允许输入11位+2个空格</span></div><div class=\"line\">        <span class=\"comment\">//用户输入满11位开始验证</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(telphone.value.length==<span class=\"number\">13</span>)&#123;</div><div class=\"line\">            <span class=\"comment\">//将数据去掉空格后验证</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(!re.test(telphone.value.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">''</span>)))&#123;</div><div class=\"line\">                err.innerHTML=<span class=\"string\">'手机号码有误'</span></div><div class=\"line\">            &#125; <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                err.innerHTML=<span class=\"string\">''</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            err.innerHTML=<span class=\"string\">''</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    telphone.onfocus = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            lastLen = telphone.value.length;</div><div class=\"line\">            <span class=\"keyword\">if</span> (lastLen &gt; firstLen) &#123;</div><div class=\"line\">                firstLen = telphone.value.length;</div><div class=\"line\">                <span class=\"keyword\">if</span> (lastLen === <span class=\"number\">4</span> || lastLen === <span class=\"number\">9</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> temp1 = telphone.value.substr(<span class=\"number\">0</span>, telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                    <span class=\"keyword\">var</span> temp2 = telphone.value.substr(telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                    telphone.value = temp1 + <span class=\"string\">' '</span> + temp2;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (lastLen &lt;= firstLen) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (lastLen === <span class=\"number\">4</span> || lastLen === <span class=\"number\">9</span>) &#123;</div><div class=\"line\">                    telphone.value = telphone.value.substr(<span class=\"number\">0</span>, telphone.value.length - <span class=\"number\">1</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                firstLen = telphone.value.length;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;, <span class=\"number\">10</span>);<span class=\"comment\">//如果手机出现卡顿，可适当把定时器时间加大</span></div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"处理json数据的空数据为任意字符","date":"2016-05-06T14:06:42.000Z","_content":"\n# 处理json数据的空数据为任意字符\n\n有时候从后台返回来的数据需要处理一下，根据实际开发需求，不能在页面上直接显示空字符，需要显示为“无内容”或者其他字段，而有些json数据结构比较深，就需要用到遍历和递归进行检查数据来达到这个目的，当然这个方法比较初级，会将所有的空字段都处理成你想要的结果，\n\n \n\n如果遇到后台未返回相关字段的情况，就需要手动为返回的数据进行添加属性，这就另当别论了\n\n```js\n// 处理ajax里的空字段\nfunction dataCheck(value, message) {\n    /*\n     * value需要处理的数据\n     * message将空数据改成的数据\n     * */\n    var message = message || \"无\";\n    for (var key in value) {\n        if (!$.trim(value[key]) || $.trim(value[key]) == \"\") {\n            value[key] = message;\n        } else if (isArray(value[key])) {\n            for (var i = 0; i < value[key].length; i++) {\n                dataCheck(value[key][i]);\n            }\n        }\n    }\n    return value;//返回处理完的数据\n}\n\n```\n\n","source":"_posts/4处理json数据的空数据为任意字符.md","raw":"---\ntitle: 处理json数据的空数据为任意字符\ndate: 2016-05-06 22:06:42\ntags: JS\n---\n\n# 处理json数据的空数据为任意字符\n\n有时候从后台返回来的数据需要处理一下，根据实际开发需求，不能在页面上直接显示空字符，需要显示为“无内容”或者其他字段，而有些json数据结构比较深，就需要用到遍历和递归进行检查数据来达到这个目的，当然这个方法比较初级，会将所有的空字段都处理成你想要的结果，\n\n \n\n如果遇到后台未返回相关字段的情况，就需要手动为返回的数据进行添加属性，这就另当别论了\n\n```js\n// 处理ajax里的空字段\nfunction dataCheck(value, message) {\n    /*\n     * value需要处理的数据\n     * message将空数据改成的数据\n     * */\n    var message = message || \"无\";\n    for (var key in value) {\n        if (!$.trim(value[key]) || $.trim(value[key]) == \"\") {\n            value[key] = message;\n        } else if (isArray(value[key])) {\n            for (var i = 0; i < value[key].length; i++) {\n                dataCheck(value[key][i]);\n            }\n        }\n    }\n    return value;//返回处理完的数据\n}\n\n```\n\n","slug":"4处理json数据的空数据为任意字符","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpj0007og9wdgzr60j8","content":"<h1 id=\"处理json数据的空数据为任意字符\"><a href=\"#处理json数据的空数据为任意字符\" class=\"headerlink\" title=\"处理json数据的空数据为任意字符\"></a>处理json数据的空数据为任意字符</h1><p>有时候从后台返回来的数据需要处理一下，根据实际开发需求，不能在页面上直接显示空字符，需要显示为“无内容”或者其他字段，而有些json数据结构比较深，就需要用到遍历和递归进行检查数据来达到这个目的，当然这个方法比较初级，会将所有的空字段都处理成你想要的结果，</p>\n<p>如果遇到后台未返回相关字段的情况，就需要手动为返回的数据进行添加属性，这就另当别论了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 处理ajax里的空字段</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dataCheck</span>(<span class=\"params\">value, message</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     * value需要处理的数据</div><div class=\"line\">     * message将空数据改成的数据</div><div class=\"line\">     * */</div><div class=\"line\">    <span class=\"keyword\">var</span> message = message || <span class=\"string\">\"无\"</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> value) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!$.trim(value[key]) || $.trim(value[key]) == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">            value[key] = message;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isArray(value[key])) &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; value[key].length; i++) &#123;</div><div class=\"line\">                dataCheck(value[key][i]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> value;<span class=\"comment\">//返回处理完的数据</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"处理json数据的空数据为任意字符\"><a href=\"#处理json数据的空数据为任意字符\" class=\"headerlink\" title=\"处理json数据的空数据为任意字符\"></a>处理json数据的空数据为任意字符</h1><p>有时候从后台返回来的数据需要处理一下，根据实际开发需求，不能在页面上直接显示空字符，需要显示为“无内容”或者其他字段，而有些json数据结构比较深，就需要用到遍历和递归进行检查数据来达到这个目的，当然这个方法比较初级，会将所有的空字段都处理成你想要的结果，</p>\n<p>如果遇到后台未返回相关字段的情况，就需要手动为返回的数据进行添加属性，这就另当别论了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 处理ajax里的空字段</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dataCheck</span>(<span class=\"params\">value, message</span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/*</span></div><div class=\"line\">     * value需要处理的数据</div><div class=\"line\">     * message将空数据改成的数据</div><div class=\"line\">     * */</div><div class=\"line\">    <span class=\"keyword\">var</span> message = message || <span class=\"string\">\"无\"</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> value) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!$.trim(value[key]) || $.trim(value[key]) == <span class=\"string\">\"\"</span>) &#123;</div><div class=\"line\">            value[key] = message;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isArray(value[key])) &#123;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; value[key].length; i++) &#123;</div><div class=\"line\">                dataCheck(value[key][i]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> value;<span class=\"comment\">//返回处理完的数据</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"ajax多次请求，只执行最后一次的方法","date":"2016-05-07T15:01:04.000Z","_content":"\n\n\n# ajax多次请求，只执行最后一次的方法\n\n有时候点击按钮进行异步请求数据的时候可能网络差，用户会点击很多次，或者页面有很多相同的按钮，参数不同，但是调用的ajax相同，只想得到最后一次结果\n\n我的思路是用闭包记录执行次数，并同时记录发起ajax的次数，等数据返回的时候比较两次次数的结果，渲染最后一次数据\n\n多说无益，上代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"ajaxbtn\">获取数据</button>\n点击次数<span id=\"num\"></span>\n<div id=\"show\">\n\n</div>\n\n<script>\n    //定义点击次数和方法执行次数\n    var a = 1;\n    var flag = 1;\n    $('#ajaxbtn').click(function () {\n        a = a + 1\n        $('#num').html(a)\n        console.log(a);\n        btnAjax('https://api.douban.com/v2/movie/in_theaters', cb);\n    })\n//封装ajax事件\n    function btnAjax(url, cb) {\n\n        $.ajax({\n            type: 'get',\n            url: url,\n            dataType: 'jsonp',\n            success: function (data) {\n                var func = callbackFunc(data, cb);\n                func()\n            }\n        })\n    }\n    //返回函数\n    function cb(data) {\n        console.log(a);\n        console.log(data);\n        var str = '';\n        for (var i = 0; i < data.subjects.length; i++) {\n            str += '<img src=\"' + data.subjects[i].images.small + '\">';\n        }\n        $('#show').html(str)\n    }\n    //判断次数，获取返回函数\n    function callbackFunc(data, cb) {\n        flag++;\n        if (a == flag) {\n            return function () {\n                cb(data);\n            }\n        } else {\n            return function () {\n            }\n        }\n    }\n</script>\n</body>\n</html>\n```\n\n第二种方法\n\n如果是多个按钮，将每次点击的按钮自带属性比如id，push到一个数组里\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"btn1\">获取电影</button>\n<button id=\"btn2\">获取图书</button>\n<button id=\"btn3\">获取音乐</button>\n点击次数<span id=\"num\"></span>\n<div id=\"show\">\n\n</div>\n\n<script>\n    var arr = []\n    var url1= 'http://www.sss.com/movie'\n    var url2= 'http://www.sss.com/book'\n    var url3= 'http://www.sss.com/music'\n    var obj = {\n        btn1: [],\n        btn2: [],\n        btn3: []\n    }\n    $('#btn1').click(function(){\n        btnAjax(url1,'btn1')\n    })\n    $('#btn2').click(function(){\n        btnAjax(url2,'btn2')\n    })\n    $('#btn3').click(function(){\n        btnAjax(url3,'btn3')\n    })\n//封装ajax事件\n    function btnAjax(url,id) {\n        $.ajax({\n            type: 'get',\n            url: url,\n            dataType: 'json',\n            success: function (data) {\n                obj[id] = data\n                $('#show').html(obj[arr[arr.length-1]])\n            }\n        })\n    }\n    \n</script>\n</body>\n</html>\n\n\n```","source":"_posts/5ajax多次请求，只执行最后一次的方法.md","raw":"---\ntitle: ajax多次请求，只执行最后一次的方法\ndate: 2016-05-07 23:01:04\ntags: JS\n---\n\n\n\n# ajax多次请求，只执行最后一次的方法\n\n有时候点击按钮进行异步请求数据的时候可能网络差，用户会点击很多次，或者页面有很多相同的按钮，参数不同，但是调用的ajax相同，只想得到最后一次结果\n\n我的思路是用闭包记录执行次数，并同时记录发起ajax的次数，等数据返回的时候比较两次次数的结果，渲染最后一次数据\n\n多说无益，上代码\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"ajaxbtn\">获取数据</button>\n点击次数<span id=\"num\"></span>\n<div id=\"show\">\n\n</div>\n\n<script>\n    //定义点击次数和方法执行次数\n    var a = 1;\n    var flag = 1;\n    $('#ajaxbtn').click(function () {\n        a = a + 1\n        $('#num').html(a)\n        console.log(a);\n        btnAjax('https://api.douban.com/v2/movie/in_theaters', cb);\n    })\n//封装ajax事件\n    function btnAjax(url, cb) {\n\n        $.ajax({\n            type: 'get',\n            url: url,\n            dataType: 'jsonp',\n            success: function (data) {\n                var func = callbackFunc(data, cb);\n                func()\n            }\n        })\n    }\n    //返回函数\n    function cb(data) {\n        console.log(a);\n        console.log(data);\n        var str = '';\n        for (var i = 0; i < data.subjects.length; i++) {\n            str += '<img src=\"' + data.subjects[i].images.small + '\">';\n        }\n        $('#show').html(str)\n    }\n    //判断次数，获取返回函数\n    function callbackFunc(data, cb) {\n        flag++;\n        if (a == flag) {\n            return function () {\n                cb(data);\n            }\n        } else {\n            return function () {\n            }\n        }\n    }\n</script>\n</body>\n</html>\n```\n\n第二种方法\n\n如果是多个按钮，将每次点击的按钮自带属性比如id，push到一个数组里\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"btn1\">获取电影</button>\n<button id=\"btn2\">获取图书</button>\n<button id=\"btn3\">获取音乐</button>\n点击次数<span id=\"num\"></span>\n<div id=\"show\">\n\n</div>\n\n<script>\n    var arr = []\n    var url1= 'http://www.sss.com/movie'\n    var url2= 'http://www.sss.com/book'\n    var url3= 'http://www.sss.com/music'\n    var obj = {\n        btn1: [],\n        btn2: [],\n        btn3: []\n    }\n    $('#btn1').click(function(){\n        btnAjax(url1,'btn1')\n    })\n    $('#btn2').click(function(){\n        btnAjax(url2,'btn2')\n    })\n    $('#btn3').click(function(){\n        btnAjax(url3,'btn3')\n    })\n//封装ajax事件\n    function btnAjax(url,id) {\n        $.ajax({\n            type: 'get',\n            url: url,\n            dataType: 'json',\n            success: function (data) {\n                obj[id] = data\n                $('#show').html(obj[arr[arr.length-1]])\n            }\n        })\n    }\n    \n</script>\n</body>\n</html>\n\n\n```","slug":"5ajax多次请求，只执行最后一次的方法","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpj0008og9w0fhyskn9","content":"<h1 id=\"ajax多次请求，只执行最后一次的方法\"><a href=\"#ajax多次请求，只执行最后一次的方法\" class=\"headerlink\" title=\"ajax多次请求，只执行最后一次的方法\"></a>ajax多次请求，只执行最后一次的方法</h1><p>有时候点击按钮进行异步请求数据的时候可能网络差，用户会点击很多次，或者页面有很多相同的按钮，参数不同，但是调用的ajax相同，只想得到最后一次结果</p>\n<p>我的思路是用闭包记录执行次数，并同时记录发起ajax的次数，等数据返回的时候比较两次次数的结果，渲染最后一次数据</p>\n<p>多说无益，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ajaxbtn\"</span>&gt;</span>获取数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">点击次数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"num\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"comment\">//定义点击次数和方法执行次数</span></div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> flag = <span class=\"number\">1</span>;</div><div class=\"line\">    $(<span class=\"string\">'#ajaxbtn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        a = a + <span class=\"number\">1</span></div><div class=\"line\">        $(<span class=\"string\">'#num'</span>).html(a)</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">        btnAjax(<span class=\"string\">'https://api.douban.com/v2/movie/in_theaters'</span>, cb);</div><div class=\"line\">    &#125;)</div><div class=\"line\"><span class=\"comment\">//封装ajax事件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnAjax</span>(<span class=\"params\">url, cb</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        $.ajax(&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'get'</span>,</div><div class=\"line\">            <span class=\"attr\">url</span>: url,</div><div class=\"line\">            <span class=\"attr\">dataType</span>: <span class=\"string\">'jsonp'</span>,</div><div class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> func = callbackFunc(data, cb);</div><div class=\"line\">                func()</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//返回函数</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cb</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">        <span class=\"keyword\">var</span> str = <span class=\"string\">''</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; data.subjects.length; i++) &#123;</div><div class=\"line\">            str += <span class=\"string\">'&lt;img src=\"'</span> + data.subjects[i].images.small + <span class=\"string\">'\"&gt;'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        $(<span class=\"string\">'#show'</span>).html(str)</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//判断次数，获取返回函数</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callbackFunc</span>(<span class=\"params\">data, cb</span>) </span>&#123;</div><div class=\"line\">        flag++;</div><div class=\"line\">        <span class=\"keyword\">if</span> (a == flag) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                cb(data);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>第二种方法</p>\n<p>如果是多个按钮，将每次点击的按钮自带属性比如id，push到一个数组里<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn1\"</span>&gt;</span>获取电影<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn2\"</span>&gt;</span>获取图书<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn3\"</span>&gt;</span>获取音乐<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">点击次数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"num\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> arr = []</div><div class=\"line\">    <span class=\"keyword\">var</span> url1= <span class=\"string\">'http://www.sss.com/movie'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> url2= <span class=\"string\">'http://www.sss.com/book'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> url3= <span class=\"string\">'http://www.sss.com/music'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;</div><div class=\"line\">        <span class=\"attr\">btn1</span>: [],</div><div class=\"line\">        <span class=\"attr\">btn2</span>: [],</div><div class=\"line\">        <span class=\"attr\">btn3</span>: []</div><div class=\"line\">    &#125;</div><div class=\"line\">    $(<span class=\"string\">'#btn1'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url1,<span class=\"string\">'btn1'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#btn2'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url2,<span class=\"string\">'btn2'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#btn3'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url3,<span class=\"string\">'btn3'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"><span class=\"comment\">//封装ajax事件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnAjax</span>(<span class=\"params\">url,id</span>) </span>&#123;</div><div class=\"line\">        $.ajax(&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'get'</span>,</div><div class=\"line\">            <span class=\"attr\">url</span>: url,</div><div class=\"line\">            <span class=\"attr\">dataType</span>: <span class=\"string\">'json'</span>,</div><div class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                obj[id] = data</div><div class=\"line\">                $(<span class=\"string\">'#show'</span>).html(obj[arr[arr.length<span class=\"number\">-1</span>]])</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ajax多次请求，只执行最后一次的方法\"><a href=\"#ajax多次请求，只执行最后一次的方法\" class=\"headerlink\" title=\"ajax多次请求，只执行最后一次的方法\"></a>ajax多次请求，只执行最后一次的方法</h1><p>有时候点击按钮进行异步请求数据的时候可能网络差，用户会点击很多次，或者页面有很多相同的按钮，参数不同，但是调用的ajax相同，只想得到最后一次结果</p>\n<p>我的思路是用闭包记录执行次数，并同时记录发起ajax的次数，等数据返回的时候比较两次次数的结果，渲染最后一次数据</p>\n<p>多说无益，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ajaxbtn\"</span>&gt;</span>获取数据<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">点击次数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"num\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"comment\">//定义点击次数和方法执行次数</span></div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> flag = <span class=\"number\">1</span>;</div><div class=\"line\">    $(<span class=\"string\">'#ajaxbtn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        a = a + <span class=\"number\">1</span></div><div class=\"line\">        $(<span class=\"string\">'#num'</span>).html(a)</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">        btnAjax(<span class=\"string\">'https://api.douban.com/v2/movie/in_theaters'</span>, cb);</div><div class=\"line\">    &#125;)</div><div class=\"line\"><span class=\"comment\">//封装ajax事件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnAjax</span>(<span class=\"params\">url, cb</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        $.ajax(&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'get'</span>,</div><div class=\"line\">            <span class=\"attr\">url</span>: url,</div><div class=\"line\">            <span class=\"attr\">dataType</span>: <span class=\"string\">'jsonp'</span>,</div><div class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> func = callbackFunc(data, cb);</div><div class=\"line\">                func()</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//返回函数</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cb</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(a);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">        <span class=\"keyword\">var</span> str = <span class=\"string\">''</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; data.subjects.length; i++) &#123;</div><div class=\"line\">            str += <span class=\"string\">'&lt;img src=\"'</span> + data.subjects[i].images.small + <span class=\"string\">'\"&gt;'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        $(<span class=\"string\">'#show'</span>).html(str)</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//判断次数，获取返回函数</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">callbackFunc</span>(<span class=\"params\">data, cb</span>) </span>&#123;</div><div class=\"line\">        flag++;</div><div class=\"line\">        <span class=\"keyword\">if</span> (a == flag) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                cb(data);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>第二种方法</p>\n<p>如果是多个按钮，将每次点击的按钮自带属性比如id，push到一个数组里<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn1\"</span>&gt;</span>获取电影<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn2\"</span>&gt;</span>获取图书<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn3\"</span>&gt;</span>获取音乐<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">点击次数<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"num\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"show\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> arr = []</div><div class=\"line\">    <span class=\"keyword\">var</span> url1= <span class=\"string\">'http://www.sss.com/movie'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> url2= <span class=\"string\">'http://www.sss.com/book'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> url3= <span class=\"string\">'http://www.sss.com/music'</span></div><div class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;</div><div class=\"line\">        <span class=\"attr\">btn1</span>: [],</div><div class=\"line\">        <span class=\"attr\">btn2</span>: [],</div><div class=\"line\">        <span class=\"attr\">btn3</span>: []</div><div class=\"line\">    &#125;</div><div class=\"line\">    $(<span class=\"string\">'#btn1'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url1,<span class=\"string\">'btn1'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#btn2'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url2,<span class=\"string\">'btn2'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#btn3'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        btnAjax(url3,<span class=\"string\">'btn3'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"><span class=\"comment\">//封装ajax事件</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">btnAjax</span>(<span class=\"params\">url,id</span>) </span>&#123;</div><div class=\"line\">        $.ajax(&#123;</div><div class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">'get'</span>,</div><div class=\"line\">            <span class=\"attr\">url</span>: url,</div><div class=\"line\">            <span class=\"attr\">dataType</span>: <span class=\"string\">'json'</span>,</div><div class=\"line\">            <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">                obj[id] = data</div><div class=\"line\">                $(<span class=\"string\">'#show'</span>).html(obj[arr[arr.length<span class=\"number\">-1</span>]])</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"cooking构建工具报错MSBUILD error MSB4132解决办法","date":"2017-04-06T15:12:16.000Z","_content":"\n\n# cooking构建工具报错MSBUILD error MSB4132解决办法\n\n最近学习cooking构建工具构建多页面应用的时候，在自己的笔记本上运行的好好的，项目在公司电脑上clone下来的时候，发现构建报错，逐条查错，试了好多方法也不行\n\n最后在github上找到了答案，只是之前一直没找到中文答案，搜了好久，英文差真是不行啊\n\n报错信息为：\n\nerror MSB4132: The tools version \"2.0\" is unrecognized. Available tools versions are \"4.0\"\n\n \n\n可能在这个错误之前会显示其他错误，都是webpack的疑似错误，并没有什么卵用，也有的认为是sass的问题，其实也不是\n\n \n\n终极解决方法就是\n\n用管理员打开命令提示行工具：\n\n```shell\nnpm install --global --production windows-build-tools\n```\n \n\n安装完之后再执行命令\n```shell\nnpm config set msvs_version 2015 --global\n```\n \n\n关掉命令行工具，然后再npm run dev就成功了\n\n \n\n \n\ngihub原文https://github.com/chjj/pty.js/issues/60","source":"_posts/cooking构建工具报错MSBUILD error MSB4132解决办法.md","raw":"---\ntitle: cooking构建工具报错MSBUILD error MSB4132解决办法\ndate: 2017-04-6 23:12:16\ntags: Vue\n---\n\n\n# cooking构建工具报错MSBUILD error MSB4132解决办法\n\n最近学习cooking构建工具构建多页面应用的时候，在自己的笔记本上运行的好好的，项目在公司电脑上clone下来的时候，发现构建报错，逐条查错，试了好多方法也不行\n\n最后在github上找到了答案，只是之前一直没找到中文答案，搜了好久，英文差真是不行啊\n\n报错信息为：\n\nerror MSB4132: The tools version \"2.0\" is unrecognized. Available tools versions are \"4.0\"\n\n \n\n可能在这个错误之前会显示其他错误，都是webpack的疑似错误，并没有什么卵用，也有的认为是sass的问题，其实也不是\n\n \n\n终极解决方法就是\n\n用管理员打开命令提示行工具：\n\n```shell\nnpm install --global --production windows-build-tools\n```\n \n\n安装完之后再执行命令\n```shell\nnpm config set msvs_version 2015 --global\n```\n \n\n关掉命令行工具，然后再npm run dev就成功了\n\n \n\n \n\ngihub原文https://github.com/chjj/pty.js/issues/60","slug":"cooking构建工具报错MSBUILD error MSB4132解决办法","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpz000bog9wpm5vwq2y","content":"<h1 id=\"cooking构建工具报错MSBUILD-error-MSB4132解决办法\"><a href=\"#cooking构建工具报错MSBUILD-error-MSB4132解决办法\" class=\"headerlink\" title=\"cooking构建工具报错MSBUILD error MSB4132解决办法\"></a>cooking构建工具报错MSBUILD error MSB4132解决办法</h1><p>最近学习cooking构建工具构建多页面应用的时候，在自己的笔记本上运行的好好的，项目在公司电脑上clone下来的时候，发现构建报错，逐条查错，试了好多方法也不行</p>\n<p>最后在github上找到了答案，只是之前一直没找到中文答案，搜了好久，英文差真是不行啊</p>\n<p>报错信息为：</p>\n<p>error MSB4132: The tools version “2.0” is unrecognized. Available tools versions are “4.0”</p>\n<p>可能在这个错误之前会显示其他错误，都是webpack的疑似错误，并没有什么卵用，也有的认为是sass的问题，其实也不是</p>\n<p>终极解决方法就是</p>\n<p>用管理员打开命令提示行工具：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --global --production windows-build-tools</div></pre></td></tr></table></figure>\n<p>安装完之后再执行命令<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set msvs_version 2015 --global</div></pre></td></tr></table></figure></p>\n<p>关掉命令行工具，然后再npm run dev就成功了</p>\n<p>gihub原文<a href=\"https://github.com/chjj/pty.js/issues/60\" target=\"_blank\" rel=\"external\">https://github.com/chjj/pty.js/issues/60</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"cooking构建工具报错MSBUILD-error-MSB4132解决办法\"><a href=\"#cooking构建工具报错MSBUILD-error-MSB4132解决办法\" class=\"headerlink\" title=\"cooking构建工具报错MSBUILD error MSB4132解决办法\"></a>cooking构建工具报错MSBUILD error MSB4132解决办法</h1><p>最近学习cooking构建工具构建多页面应用的时候，在自己的笔记本上运行的好好的，项目在公司电脑上clone下来的时候，发现构建报错，逐条查错，试了好多方法也不行</p>\n<p>最后在github上找到了答案，只是之前一直没找到中文答案，搜了好久，英文差真是不行啊</p>\n<p>报错信息为：</p>\n<p>error MSB4132: The tools version “2.0” is unrecognized. Available tools versions are “4.0”</p>\n<p>可能在这个错误之前会显示其他错误，都是webpack的疑似错误，并没有什么卵用，也有的认为是sass的问题，其实也不是</p>\n<p>终极解决方法就是</p>\n<p>用管理员打开命令提示行工具：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --global --production windows-build-tools</div></pre></td></tr></table></figure>\n<p>安装完之后再执行命令<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set msvs_version 2015 --global</div></pre></td></tr></table></figure></p>\n<p>关掉命令行工具，然后再npm run dev就成功了</p>\n<p>gihub原文<a href=\"https://github.com/chjj/pty.js/issues/60\" target=\"_blank\" rel=\"external\">https://github.com/chjj/pty.js/issues/60</a></p>\n"},{"title":"ajax发送JSON数据","date":"2016-06-02T14:34:12.000Z","_content":"\n\n有时候发送数据量比较大，后端会要求以对象的方法发送，也就是直接发送一个json过去\n\n这时候我们需要更改下contentType\ndata也需要处理一下\n\n```js\n$.ajax({\n    type: 'post',\n    url: 'http://127.0.0.1:4000/getdel',\n    dataType: 'json',\n    contentType: 'application/json; charset=utf-8',\n    data: JSON.stringify({a:1,b:2}),\n    success: function (data) {\n        console.log(data);\n    },\n    error: function () {\n        console.log('err');\n    }\n})\n\n```","source":"_posts/ajax发送JSON数据.md","raw":"---\ntitle: ajax发送JSON数据\ndate: 2016-06-02 22:34:12\ntags: JS\n---\n\n\n有时候发送数据量比较大，后端会要求以对象的方法发送，也就是直接发送一个json过去\n\n这时候我们需要更改下contentType\ndata也需要处理一下\n\n```js\n$.ajax({\n    type: 'post',\n    url: 'http://127.0.0.1:4000/getdel',\n    dataType: 'json',\n    contentType: 'application/json; charset=utf-8',\n    data: JSON.stringify({a:1,b:2}),\n    success: function (data) {\n        console.log(data);\n    },\n    error: function () {\n        console.log('err');\n    }\n})\n\n```","slug":"ajax发送JSON数据","published":1,"updated":"2017-09-23T09:23:14.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpz000cog9wm8teyl3b","content":"<p>有时候发送数据量比较大，后端会要求以对象的方法发送，也就是直接发送一个json过去</p>\n<p>这时候我们需要更改下contentType<br>data也需要处理一下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.ajax(&#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">'post'</span>,</div><div class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">'http://127.0.0.1:4000/getdel'</span>,</div><div class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">'json'</span>,</div><div class=\"line\">    <span class=\"attr\">contentType</span>: <span class=\"string\">'application/json; charset=utf-8'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"built_in\">JSON</span>.stringify(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;),</div><div class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'err'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>有时候发送数据量比较大，后端会要求以对象的方法发送，也就是直接发送一个json过去</p>\n<p>这时候我们需要更改下contentType<br>data也需要处理一下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.ajax(&#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">'post'</span>,</div><div class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">'http://127.0.0.1:4000/getdel'</span>,</div><div class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">'json'</span>,</div><div class=\"line\">    <span class=\"attr\">contentType</span>: <span class=\"string\">'application/json; charset=utf-8'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"built_in\">JSON</span>.stringify(&#123;<span class=\"attr\">a</span>:<span class=\"number\">1</span>,<span class=\"attr\">b</span>:<span class=\"number\">2</span>&#125;),</div><div class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(data);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'err'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>"},{"title":"axios发送数据放在formdata里","date":"2017-01-18T13:14:55.000Z","_content":"\n后端面向JAVA和PHP的时候接收ajax请求，他们比较喜欢要求把数据放在formdata里接收(.net表示放在哪里都可以)\n而axios默认发送的是json数据，在request里，这时候需要转化一下\n\n看过网上好多需要改Content-Type的，事实上并不需要\n\n\n只需要在axios的config里处理下数据就好了\n\n\n首先引入qs库，再加上transformRequest设置就ok了\n```js\n\nimport axios from 'axios'\nimport qs from 'qs'\n\nlet config = {\n    baseURL: '/api/',\n    timeout: 10000,\n    //`headers`选项是需要被发送的自定义请求头信息\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n    },\n    transformRequest: [function (data) {  \n        //需要序列化数据，数据放到formdata \n        return qs.stringify(data)\n    }]\n}\n\n```","source":"_posts/axios发送数据放在formdata里.md","raw":"---\ntitle: axios发送数据放在formdata里\ndate: 2017-1-18 21:14:55\ntags: Vue\n---\n\n后端面向JAVA和PHP的时候接收ajax请求，他们比较喜欢要求把数据放在formdata里接收(.net表示放在哪里都可以)\n而axios默认发送的是json数据，在request里，这时候需要转化一下\n\n看过网上好多需要改Content-Type的，事实上并不需要\n\n\n只需要在axios的config里处理下数据就好了\n\n\n首先引入qs库，再加上transformRequest设置就ok了\n```js\n\nimport axios from 'axios'\nimport qs from 'qs'\n\nlet config = {\n    baseURL: '/api/',\n    timeout: 10000,\n    //`headers`选项是需要被发送的自定义请求头信息\n    headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n    },\n    transformRequest: [function (data) {  \n        //需要序列化数据，数据放到formdata \n        return qs.stringify(data)\n    }]\n}\n\n```","slug":"axios发送数据放在formdata里","published":1,"updated":"2017-09-23T09:23:14.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpz000fog9wwlejkhwg","content":"<p>后端面向JAVA和PHP的时候接收ajax请求，他们比较喜欢要求把数据放在formdata里接收(.net表示放在哪里都可以)<br>而axios默认发送的是json数据，在request里，这时候需要转化一下</p>\n<p>看过网上好多需要改Content-Type的，事实上并不需要</p>\n<p>只需要在axios的config里处理下数据就好了</p>\n<p>首先引入qs库，再加上transformRequest设置就ok了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> config = &#123;</div><div class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">'/api/'</span>,</div><div class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">10000</span>,</div><div class=\"line\">    <span class=\"comment\">//`headers`选项是需要被发送的自定义请求头信息</span></div><div class=\"line\">    headers: &#123;</div><div class=\"line\">        <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">transformRequest</span>: [<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;  </div><div class=\"line\">        <span class=\"comment\">//需要序列化数据，数据放到formdata </span></div><div class=\"line\">        <span class=\"keyword\">return</span> qs.stringify(data)</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>后端面向JAVA和PHP的时候接收ajax请求，他们比较喜欢要求把数据放在formdata里接收(.net表示放在哪里都可以)<br>而axios默认发送的是json数据，在request里，这时候需要转化一下</p>\n<p>看过网上好多需要改Content-Type的，事实上并不需要</p>\n<p>只需要在axios的config里处理下数据就好了</p>\n<p>首先引入qs库，再加上transformRequest设置就ok了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></div><div class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> config = &#123;</div><div class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">'/api/'</span>,</div><div class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"number\">10000</span>,</div><div class=\"line\">    <span class=\"comment\">//`headers`选项是需要被发送的自定义请求头信息</span></div><div class=\"line\">    headers: &#123;</div><div class=\"line\">        <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">transformRequest</span>: [<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;  </div><div class=\"line\">        <span class=\"comment\">//需要序列化数据，数据放到formdata </span></div><div class=\"line\">        <span class=\"keyword\">return</span> qs.stringify(data)</div><div class=\"line\">    &#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Git出现 fatal:Pathspec 'xxx' is in submodule 'module/Cxxx' 异常 解决方案","date":"2017-01-02T14:12:25.000Z","_content":"\n百度过，谷歌过，没能解决，大概知道是子模块有自己的git仓库，所以不能添加到根目录里\n\n## 这种方法好多人都说可以，但是我没成功\n```shell\ngit rm -rf --cached CocktailMakerModule/\ngit add CocktailMakerModule/\n```\n\n## 还有一种\n可以用小乌龟的添加子模块来解决，不过仓库还是区分了，并不是自己想要的结果，我想把子模块也放到主仓库里\n\n## 来最直接有效的方法\n\n删掉子模块内部的.git文件夹\n\n然后把整个子模块文件夹都复制出来，然后在仓库里把子模块删掉\n\n再把之前复制出去的文件夹整个粘贴回来\n\n再执行git add就可以了\n","source":"_posts/git提交异常解决方案.md","raw":"---\ntitle: Git出现 fatal:Pathspec 'xxx' is in submodule 'module/Cxxx' 异常 解决方案\ndate: 2017-01-02 22:12:25\ntags: Other\n---\n\n百度过，谷歌过，没能解决，大概知道是子模块有自己的git仓库，所以不能添加到根目录里\n\n## 这种方法好多人都说可以，但是我没成功\n```shell\ngit rm -rf --cached CocktailMakerModule/\ngit add CocktailMakerModule/\n```\n\n## 还有一种\n可以用小乌龟的添加子模块来解决，不过仓库还是区分了，并不是自己想要的结果，我想把子模块也放到主仓库里\n\n## 来最直接有效的方法\n\n删掉子模块内部的.git文件夹\n\n然后把整个子模块文件夹都复制出来，然后在仓库里把子模块删掉\n\n再把之前复制出去的文件夹整个粘贴回来\n\n再执行git add就可以了\n","slug":"git提交异常解决方案","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxpz000gog9w63gooa88","content":"<p>百度过，谷歌过，没能解决，大概知道是子模块有自己的git仓库，所以不能添加到根目录里</p>\n<h2 id=\"这种方法好多人都说可以，但是我没成功\"><a href=\"#这种方法好多人都说可以，但是我没成功\" class=\"headerlink\" title=\"这种方法好多人都说可以，但是我没成功\"></a>这种方法好多人都说可以，但是我没成功</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -rf --cached CocktailMakerModule/</div><div class=\"line\">git add CocktailMakerModule/</div></pre></td></tr></table></figure>\n<h2 id=\"还有一种\"><a href=\"#还有一种\" class=\"headerlink\" title=\"还有一种\"></a>还有一种</h2><p>可以用小乌龟的添加子模块来解决，不过仓库还是区分了，并不是自己想要的结果，我想把子模块也放到主仓库里</p>\n<h2 id=\"来最直接有效的方法\"><a href=\"#来最直接有效的方法\" class=\"headerlink\" title=\"来最直接有效的方法\"></a>来最直接有效的方法</h2><p>删掉子模块内部的.git文件夹</p>\n<p>然后把整个子模块文件夹都复制出来，然后在仓库里把子模块删掉</p>\n<p>再把之前复制出去的文件夹整个粘贴回来</p>\n<p>再执行git add就可以了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>百度过，谷歌过，没能解决，大概知道是子模块有自己的git仓库，所以不能添加到根目录里</p>\n<h2 id=\"这种方法好多人都说可以，但是我没成功\"><a href=\"#这种方法好多人都说可以，但是我没成功\" class=\"headerlink\" title=\"这种方法好多人都说可以，但是我没成功\"></a>这种方法好多人都说可以，但是我没成功</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -rf --cached CocktailMakerModule/</div><div class=\"line\">git add CocktailMakerModule/</div></pre></td></tr></table></figure>\n<h2 id=\"还有一种\"><a href=\"#还有一种\" class=\"headerlink\" title=\"还有一种\"></a>还有一种</h2><p>可以用小乌龟的添加子模块来解决，不过仓库还是区分了，并不是自己想要的结果，我想把子模块也放到主仓库里</p>\n<h2 id=\"来最直接有效的方法\"><a href=\"#来最直接有效的方法\" class=\"headerlink\" title=\"来最直接有效的方法\"></a>来最直接有效的方法</h2><p>删掉子模块内部的.git文件夹</p>\n<p>然后把整个子模块文件夹都复制出来，然后在仓库里把子模块删掉</p>\n<p>再把之前复制出去的文件夹整个粘贴回来</p>\n<p>再执行git add就可以了</p>\n"},{"title":"gulp实现自动刷新页面+反向代理本地调试接口","date":"2016-12-10T12:36:24.000Z","_content":"\n使用browser-sync实现页面自动刷新\n使用http-proxy-middleware实现反向代理功能\n\n```js\n\nvar gulp = require('gulp')\nvar less = require('gulp-less')\nvar miniCss = require('gulp-clean-css')\nvar uglifyJs = require('gulp-uglify')\nvar revAppend = require('gulp-rev-append')\n// var fileinclude = require('gulp-file-include');\nvar imagemin = require('gulp-imagemin');\nvar replace = require('gulp-url-replace');\nvar htmlmin = require('gulp-htmlmin');\nvar browserSync = require('browser-sync');\n// var reload = browserSync.reload;\nvar proxyMiddleware = require('http-proxy-middleware');\nvar plugins = require('gulp-load-plugins')();\n\n\ngulp.task('build', function () {\n    //编译less\n    gulp.src('dev/css/*.css')\n        .pipe(gulp.dest('dist/css'));\n    gulp.src('dev/css/*.less')\n        .pipe(less())\n        .pipe(miniCss())\n        .pipe(gulp.dest('dist/css'));\n    //压缩js，libs文件夹不做压缩\n    gulp.src(['dev/js/*.js', '!dev/js/libs/*.js'])\n        .pipe(uglifyJs())\n        .pipe(gulp.dest('dist/js'));\n    gulp.src('dev/js/libs/*.swf')\n        .pipe(gulp.dest('dist/js/libs'));\n    //不压缩的也复制过去\n    gulp.src('dev/js/libs/*.js')\n        .pipe(gulp.dest('dist/js/libs'));\n// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录\n\n    //清除html的注释\n    var options = {\n        removeComments:true,\n    };\n    gulp.src(['dev/**.html', '!dev/include/**.html'])\n        // .pipe(fileinclude({\n        //     prefix: '@@',\n        //     basepath: '@file'\n        // }))\n        .pipe(revAppend())\n        .pipe(replace({\n            'images/': 'images/',\n            'css/': 'css/',\n            'js/': 'js/',\n        }))\n        .pipe(htmlmin(options))\n        .pipe(gulp.dest('dist'));\n\n\n    //压缩图片\n    gulp.src('dev/images/*.{png,jpg,gif,ico}')\n        .pipe(imagemin())\n        .pipe(gulp.dest('dist/images'));\n\n});\ngulp.task('build-dev', function () {\n    //编译less\n    gulp.src('dev/css/*.css')\n        .pipe(gulp.dest('dist/css'));\n    gulp.src('dev/css/*.less')\n        .pipe(less())\n        // .pipe(miniCss())\n        .pipe(gulp.dest('dist/css'))\n        // .pipe(reload({stream: true}));\n    //压缩js，libs文件夹不做压缩\n    gulp.src(['dev/js/*.js', '!dev/js/libs/*.js'])\n        // .pipe(uglifyJs())\n        .pipe(gulp.dest('dist/js'))\n        // .pipe(reload({stream: true}));\n    gulp.src('dev/js/libs/*.swf')\n        .pipe(gulp.dest('dist/js/libs'));\n    //不压缩的也复制过去\n    gulp.src('dev/js/libs/*.js')\n        .pipe(gulp.dest('dist/js/libs'));\n// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录\n    gulp.src(['dev/**.html', '!dev/include/**.html'])\n        // .pipe(fileinclude({\n        //     prefix: '@@',\n        //     basepath: '@file'\n        // }))\n        .pipe(revAppend())\n        .pipe(replace({\n            'images/': 'images/',\n            'css/': 'css/',\n            'js/': 'js/',\n        }))\n        .pipe(gulp.dest('dist'))\n        // .pipe(reload({stream: true}));\n    gulp.src('dev/*.jsp')\n        .pipe(revAppend())\n        // .pipe(replace({\n        //     'images/': 'content/images/',\n        //     'css/': 'content/css/',\n        //     'js/': 'content/js/',\n        // }))\n        .pipe(gulp.dest('dist'))\n\n    //压缩图片\n    gulp.src('dev/images/*.{png,jpg,gif,ico}')\n        // .pipe(imagemin())\n        .pipe(gulp.dest('dist/images'))\n        // .pipe(reload({stream: true}));\n\n});\ngulp.task('browserSync', function() {\n    var middleware = proxyMiddleware('/companyService', {\n        // target: 'http://10.2.54.5',\n        target: 'http://10.2.54.17',\n        // target: 'http://127.0.0.1:4000',\n        changeOrigin: true,             // for vhosted sites, changes host header to match to target's host\n        logLevel: 'debug',\n        pathRewrite: {\n            // '^/epay_www': '/epay_www/'\n            // '^/epay_passport': '/epay_passport/'\n            '^/companyService': '/companyService'\n        }\n    });\n    /**\n     * Add the proxy to browser-sync\n     */\n    browserSync.init({\n        server: {\n            baseDir: './dev/',\n            port: 3000,\n            middleware: [middleware],\n        },\n        startPath: '/'\n    });\n});\ngulp.task('change',function(){\n    console.log('have change');\n})\ngulp.task('watch', function() {\n    // gulp.watch(['./src/**/*.js'], ['inject']);\n    // gulp watch 无法监听增加文件和删除文件, 查看 github issue, 他们不准备fix了, 等4.0 呵呵吧\n    // plugins.watch('dev/**/*.js', function() {\n    //     gulp.run('build-dev');\n    // });\n    // plugins.watch('dev/**/*.css', function() {\n    //     gulp.run('build-dev');\n    // });\n    gulp.watch('dev/**/*.+(less|js|html|css|jsp)', ['change'])\n        .on('change', browserSync.reload);\n});\ngulp.task('dev', ['browserSync', 'watch']);\ngulp.task('default', ['dev', 'build-dev']);\n\n```","source":"_posts/gulp自动刷新+反向代理.md","raw":"---\ntitle: gulp实现自动刷新页面+反向代理本地调试接口\ndate: 2016-12-10 20:36:24\ntags: JS\n---\n\n使用browser-sync实现页面自动刷新\n使用http-proxy-middleware实现反向代理功能\n\n```js\n\nvar gulp = require('gulp')\nvar less = require('gulp-less')\nvar miniCss = require('gulp-clean-css')\nvar uglifyJs = require('gulp-uglify')\nvar revAppend = require('gulp-rev-append')\n// var fileinclude = require('gulp-file-include');\nvar imagemin = require('gulp-imagemin');\nvar replace = require('gulp-url-replace');\nvar htmlmin = require('gulp-htmlmin');\nvar browserSync = require('browser-sync');\n// var reload = browserSync.reload;\nvar proxyMiddleware = require('http-proxy-middleware');\nvar plugins = require('gulp-load-plugins')();\n\n\ngulp.task('build', function () {\n    //编译less\n    gulp.src('dev/css/*.css')\n        .pipe(gulp.dest('dist/css'));\n    gulp.src('dev/css/*.less')\n        .pipe(less())\n        .pipe(miniCss())\n        .pipe(gulp.dest('dist/css'));\n    //压缩js，libs文件夹不做压缩\n    gulp.src(['dev/js/*.js', '!dev/js/libs/*.js'])\n        .pipe(uglifyJs())\n        .pipe(gulp.dest('dist/js'));\n    gulp.src('dev/js/libs/*.swf')\n        .pipe(gulp.dest('dist/js/libs'));\n    //不压缩的也复制过去\n    gulp.src('dev/js/libs/*.js')\n        .pipe(gulp.dest('dist/js/libs'));\n// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录\n\n    //清除html的注释\n    var options = {\n        removeComments:true,\n    };\n    gulp.src(['dev/**.html', '!dev/include/**.html'])\n        // .pipe(fileinclude({\n        //     prefix: '@@',\n        //     basepath: '@file'\n        // }))\n        .pipe(revAppend())\n        .pipe(replace({\n            'images/': 'images/',\n            'css/': 'css/',\n            'js/': 'js/',\n        }))\n        .pipe(htmlmin(options))\n        .pipe(gulp.dest('dist'));\n\n\n    //压缩图片\n    gulp.src('dev/images/*.{png,jpg,gif,ico}')\n        .pipe(imagemin())\n        .pipe(gulp.dest('dist/images'));\n\n});\ngulp.task('build-dev', function () {\n    //编译less\n    gulp.src('dev/css/*.css')\n        .pipe(gulp.dest('dist/css'));\n    gulp.src('dev/css/*.less')\n        .pipe(less())\n        // .pipe(miniCss())\n        .pipe(gulp.dest('dist/css'))\n        // .pipe(reload({stream: true}));\n    //压缩js，libs文件夹不做压缩\n    gulp.src(['dev/js/*.js', '!dev/js/libs/*.js'])\n        // .pipe(uglifyJs())\n        .pipe(gulp.dest('dist/js'))\n        // .pipe(reload({stream: true}));\n    gulp.src('dev/js/libs/*.swf')\n        .pipe(gulp.dest('dist/js/libs'));\n    //不压缩的也复制过去\n    gulp.src('dev/js/libs/*.js')\n        .pipe(gulp.dest('dist/js/libs'));\n// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录\n    gulp.src(['dev/**.html', '!dev/include/**.html'])\n        // .pipe(fileinclude({\n        //     prefix: '@@',\n        //     basepath: '@file'\n        // }))\n        .pipe(revAppend())\n        .pipe(replace({\n            'images/': 'images/',\n            'css/': 'css/',\n            'js/': 'js/',\n        }))\n        .pipe(gulp.dest('dist'))\n        // .pipe(reload({stream: true}));\n    gulp.src('dev/*.jsp')\n        .pipe(revAppend())\n        // .pipe(replace({\n        //     'images/': 'content/images/',\n        //     'css/': 'content/css/',\n        //     'js/': 'content/js/',\n        // }))\n        .pipe(gulp.dest('dist'))\n\n    //压缩图片\n    gulp.src('dev/images/*.{png,jpg,gif,ico}')\n        // .pipe(imagemin())\n        .pipe(gulp.dest('dist/images'))\n        // .pipe(reload({stream: true}));\n\n});\ngulp.task('browserSync', function() {\n    var middleware = proxyMiddleware('/companyService', {\n        // target: 'http://10.2.54.5',\n        target: 'http://10.2.54.17',\n        // target: 'http://127.0.0.1:4000',\n        changeOrigin: true,             // for vhosted sites, changes host header to match to target's host\n        logLevel: 'debug',\n        pathRewrite: {\n            // '^/epay_www': '/epay_www/'\n            // '^/epay_passport': '/epay_passport/'\n            '^/companyService': '/companyService'\n        }\n    });\n    /**\n     * Add the proxy to browser-sync\n     */\n    browserSync.init({\n        server: {\n            baseDir: './dev/',\n            port: 3000,\n            middleware: [middleware],\n        },\n        startPath: '/'\n    });\n});\ngulp.task('change',function(){\n    console.log('have change');\n})\ngulp.task('watch', function() {\n    // gulp.watch(['./src/**/*.js'], ['inject']);\n    // gulp watch 无法监听增加文件和删除文件, 查看 github issue, 他们不准备fix了, 等4.0 呵呵吧\n    // plugins.watch('dev/**/*.js', function() {\n    //     gulp.run('build-dev');\n    // });\n    // plugins.watch('dev/**/*.css', function() {\n    //     gulp.run('build-dev');\n    // });\n    gulp.watch('dev/**/*.+(less|js|html|css|jsp)', ['change'])\n        .on('change', browserSync.reload);\n});\ngulp.task('dev', ['browserSync', 'watch']);\ngulp.task('default', ['dev', 'build-dev']);\n\n```","slug":"gulp自动刷新+反向代理","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqe000iog9wnixisnfz","content":"<p>使用browser-sync实现页面自动刷新<br>使用http-proxy-middleware实现反向代理功能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> less = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-less'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> miniCss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean-css'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> uglifyJs = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> revAppend = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rev-append'</span>)</div><div class=\"line\"><span class=\"comment\">// var fileinclude = require('gulp-file-include');</span></div><div class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> replace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-url-replace'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> browserSync = <span class=\"built_in\">require</span>(<span class=\"string\">'browser-sync'</span>);</div><div class=\"line\"><span class=\"comment\">// var reload = browserSync.reload;</span></div><div class=\"line\"><span class=\"keyword\">var</span> proxyMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">'http-proxy-middleware'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> plugins = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-load-plugins'</span>)();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">'build'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//编译less</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.css'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.less'</span>)</div><div class=\"line\">        .pipe(less())</div><div class=\"line\">        .pipe(miniCss())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    <span class=\"comment\">//压缩js，libs文件夹不做压缩</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/js/*.js'</span>, <span class=\"string\">'!dev/js/libs/*.js'</span>])</div><div class=\"line\">        .pipe(uglifyJs())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.swf'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\">    <span class=\"comment\">//不压缩的也复制过去</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.js'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\"><span class=\"comment\">// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//清除html的注释</span></div><div class=\"line\">    <span class=\"keyword\">var</span> options = &#123;</div><div class=\"line\">        <span class=\"attr\">removeComments</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">    &#125;;</div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/**.html'</span>, <span class=\"string\">'!dev/include/**.html'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(fileinclude(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     prefix: '@@',</span></div><div class=\"line\">        <span class=\"comment\">//     basepath: '@file'</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        .pipe(replace(&#123;</div><div class=\"line\">            <span class=\"string\">'images/'</span>: <span class=\"string\">'images/'</span>,</div><div class=\"line\">            <span class=\"string\">'css/'</span>: <span class=\"string\">'css/'</span>,</div><div class=\"line\">            <span class=\"string\">'js/'</span>: <span class=\"string\">'js/'</span>,</div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(htmlmin(options))</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//压缩图片</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/images/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">        .pipe(imagemin())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>));</div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'build-dev'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//编译less</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.css'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.less'</span>)</div><div class=\"line\">        .pipe(less())</div><div class=\"line\">        <span class=\"comment\">// .pipe(miniCss())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    <span class=\"comment\">//压缩js，libs文件夹不做压缩</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/js/*.js'</span>, <span class=\"string\">'!dev/js/libs/*.js'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(uglifyJs())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.swf'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\">    <span class=\"comment\">//不压缩的也复制过去</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.js'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\"><span class=\"comment\">// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/**.html'</span>, <span class=\"string\">'!dev/include/**.html'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(fileinclude(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     prefix: '@@',</span></div><div class=\"line\">        <span class=\"comment\">//     basepath: '@file'</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        .pipe(replace(&#123;</div><div class=\"line\">            <span class=\"string\">'images/'</span>: <span class=\"string\">'images/'</span>,</div><div class=\"line\">            <span class=\"string\">'css/'</span>: <span class=\"string\">'css/'</span>,</div><div class=\"line\">            <span class=\"string\">'js/'</span>: <span class=\"string\">'js/'</span>,</div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/*.jsp'</span>)</div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        <span class=\"comment\">// .pipe(replace(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     'images/': 'content/images/',</span></div><div class=\"line\">        <span class=\"comment\">//     'css/': 'content/css/',</span></div><div class=\"line\">        <span class=\"comment\">//     'js/': 'content/js/',</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//压缩图片</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/images/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">        <span class=\"comment\">// .pipe(imagemin())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'browserSync'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> middleware = proxyMiddleware(<span class=\"string\">'/companyService'</span>, &#123;</div><div class=\"line\">        <span class=\"comment\">// target: 'http://10.2.54.5',</span></div><div class=\"line\">        target: <span class=\"string\">'http://10.2.54.17'</span>,</div><div class=\"line\">        <span class=\"comment\">// target: 'http://127.0.0.1:4000',</span></div><div class=\"line\">        changeOrigin: <span class=\"literal\">true</span>,             <span class=\"comment\">// for vhosted sites, changes host header to match to target's host</span></div><div class=\"line\">        logLevel: <span class=\"string\">'debug'</span>,</div><div class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</div><div class=\"line\">            <span class=\"comment\">// '^/epay_www': '/epay_www/'</span></div><div class=\"line\">            <span class=\"comment\">// '^/epay_passport': '/epay_passport/'</span></div><div class=\"line\">            <span class=\"string\">'^/companyService'</span>: <span class=\"string\">'/companyService'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * Add the proxy to browser-sync</div><div class=\"line\">     */</div><div class=\"line\">    browserSync.init(&#123;</div><div class=\"line\">        <span class=\"attr\">server</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">baseDir</span>: <span class=\"string\">'./dev/'</span>,</div><div class=\"line\">            <span class=\"attr\">port</span>: <span class=\"number\">3000</span>,</div><div class=\"line\">            <span class=\"attr\">middleware</span>: [middleware],</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">startPath</span>: <span class=\"string\">'/'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'change'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'have change'</span>);</div><div class=\"line\">&#125;)</div><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// gulp.watch(['./src/**/*.js'], ['inject']);</span></div><div class=\"line\">    <span class=\"comment\">// gulp watch 无法监听增加文件和删除文件, 查看 github issue, 他们不准备fix了, 等4.0 呵呵吧</span></div><div class=\"line\">    <span class=\"comment\">// plugins.watch('dev/**/*.js', function() &#123;</span></div><div class=\"line\">    <span class=\"comment\">//     gulp.run('build-dev');</span></div><div class=\"line\">    <span class=\"comment\">// &#125;);</span></div><div class=\"line\">    <span class=\"comment\">// plugins.watch('dev/**/*.css', function() &#123;</span></div><div class=\"line\">    <span class=\"comment\">//     gulp.run('build-dev');</span></div><div class=\"line\">    <span class=\"comment\">// &#125;);</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'dev/**/*.+(less|js|html|css|jsp)'</span>, [<span class=\"string\">'change'</span>])</div><div class=\"line\">        .on(<span class=\"string\">'change'</span>, browserSync.reload);</div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'dev'</span>, [<span class=\"string\">'browserSync'</span>, <span class=\"string\">'watch'</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'dev'</span>, <span class=\"string\">'build-dev'</span>]);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>使用browser-sync实现页面自动刷新<br>使用http-proxy-middleware实现反向代理功能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> less = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-less'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> miniCss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean-css'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> uglifyJs = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>)</div><div class=\"line\"><span class=\"keyword\">var</span> revAppend = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rev-append'</span>)</div><div class=\"line\"><span class=\"comment\">// var fileinclude = require('gulp-file-include');</span></div><div class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> replace = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-url-replace'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> browserSync = <span class=\"built_in\">require</span>(<span class=\"string\">'browser-sync'</span>);</div><div class=\"line\"><span class=\"comment\">// var reload = browserSync.reload;</span></div><div class=\"line\"><span class=\"keyword\">var</span> proxyMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">'http-proxy-middleware'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> plugins = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-load-plugins'</span>)();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">gulp.task(<span class=\"string\">'build'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//编译less</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.css'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.less'</span>)</div><div class=\"line\">        .pipe(less())</div><div class=\"line\">        .pipe(miniCss())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    <span class=\"comment\">//压缩js，libs文件夹不做压缩</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/js/*.js'</span>, <span class=\"string\">'!dev/js/libs/*.js'</span>])</div><div class=\"line\">        .pipe(uglifyJs())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.swf'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\">    <span class=\"comment\">//不压缩的也复制过去</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.js'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\"><span class=\"comment\">// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//清除html的注释</span></div><div class=\"line\">    <span class=\"keyword\">var</span> options = &#123;</div><div class=\"line\">        <span class=\"attr\">removeComments</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">    &#125;;</div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/**.html'</span>, <span class=\"string\">'!dev/include/**.html'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(fileinclude(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     prefix: '@@',</span></div><div class=\"line\">        <span class=\"comment\">//     basepath: '@file'</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        .pipe(replace(&#123;</div><div class=\"line\">            <span class=\"string\">'images/'</span>: <span class=\"string\">'images/'</span>,</div><div class=\"line\">            <span class=\"string\">'css/'</span>: <span class=\"string\">'css/'</span>,</div><div class=\"line\">            <span class=\"string\">'js/'</span>: <span class=\"string\">'js/'</span>,</div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(htmlmin(options))</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//压缩图片</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/images/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">        .pipe(imagemin())</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>));</div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'build-dev'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//编译less</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.css'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>));</div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/css/*.less'</span>)</div><div class=\"line\">        .pipe(less())</div><div class=\"line\">        <span class=\"comment\">// .pipe(miniCss())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/css'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    <span class=\"comment\">//压缩js，libs文件夹不做压缩</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/js/*.js'</span>, <span class=\"string\">'!dev/js/libs/*.js'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(uglifyJs())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.swf'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\">    <span class=\"comment\">//不压缩的也复制过去</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/js/libs/*.js'</span>)</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/js/libs'</span>));</div><div class=\"line\"><span class=\"comment\">// 适配page中所有文件夹下的所有html，排除page下的include文件夹中html，静态文件加版本号，替换静态文件目录</span></div><div class=\"line\">    gulp.src([<span class=\"string\">'dev/**.html'</span>, <span class=\"string\">'!dev/include/**.html'</span>])</div><div class=\"line\">        <span class=\"comment\">// .pipe(fileinclude(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     prefix: '@@',</span></div><div class=\"line\">        <span class=\"comment\">//     basepath: '@file'</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        .pipe(replace(&#123;</div><div class=\"line\">            <span class=\"string\">'images/'</span>: <span class=\"string\">'images/'</span>,</div><div class=\"line\">            <span class=\"string\">'css/'</span>: <span class=\"string\">'css/'</span>,</div><div class=\"line\">            <span class=\"string\">'js/'</span>: <span class=\"string\">'js/'</span>,</div><div class=\"line\">        &#125;))</div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/*.jsp'</span>)</div><div class=\"line\">        .pipe(revAppend())</div><div class=\"line\">        <span class=\"comment\">// .pipe(replace(&#123;</span></div><div class=\"line\">        <span class=\"comment\">//     'images/': 'content/images/',</span></div><div class=\"line\">        <span class=\"comment\">//     'css/': 'content/css/',</span></div><div class=\"line\">        <span class=\"comment\">//     'js/': 'content/js/',</span></div><div class=\"line\">        <span class=\"comment\">// &#125;))</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist'</span>))</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//压缩图片</span></div><div class=\"line\">    gulp.src(<span class=\"string\">'dev/images/*.&#123;png,jpg,gif,ico&#125;'</span>)</div><div class=\"line\">        <span class=\"comment\">// .pipe(imagemin())</span></div><div class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'dist/images'</span>))</div><div class=\"line\">        <span class=\"comment\">// .pipe(reload(&#123;stream: true&#125;));</span></div><div class=\"line\"></div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'browserSync'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> middleware = proxyMiddleware(<span class=\"string\">'/companyService'</span>, &#123;</div><div class=\"line\">        <span class=\"comment\">// target: 'http://10.2.54.5',</span></div><div class=\"line\">        target: <span class=\"string\">'http://10.2.54.17'</span>,</div><div class=\"line\">        <span class=\"comment\">// target: 'http://127.0.0.1:4000',</span></div><div class=\"line\">        changeOrigin: <span class=\"literal\">true</span>,             <span class=\"comment\">// for vhosted sites, changes host header to match to target's host</span></div><div class=\"line\">        logLevel: <span class=\"string\">'debug'</span>,</div><div class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</div><div class=\"line\">            <span class=\"comment\">// '^/epay_www': '/epay_www/'</span></div><div class=\"line\">            <span class=\"comment\">// '^/epay_passport': '/epay_passport/'</span></div><div class=\"line\">            <span class=\"string\">'^/companyService'</span>: <span class=\"string\">'/companyService'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * Add the proxy to browser-sync</div><div class=\"line\">     */</div><div class=\"line\">    browserSync.init(&#123;</div><div class=\"line\">        <span class=\"attr\">server</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">baseDir</span>: <span class=\"string\">'./dev/'</span>,</div><div class=\"line\">            <span class=\"attr\">port</span>: <span class=\"number\">3000</span>,</div><div class=\"line\">            <span class=\"attr\">middleware</span>: [middleware],</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">startPath</span>: <span class=\"string\">'/'</span></div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'change'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'have change'</span>);</div><div class=\"line\">&#125;)</div><div class=\"line\">gulp.task(<span class=\"string\">'watch'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// gulp.watch(['./src/**/*.js'], ['inject']);</span></div><div class=\"line\">    <span class=\"comment\">// gulp watch 无法监听增加文件和删除文件, 查看 github issue, 他们不准备fix了, 等4.0 呵呵吧</span></div><div class=\"line\">    <span class=\"comment\">// plugins.watch('dev/**/*.js', function() &#123;</span></div><div class=\"line\">    <span class=\"comment\">//     gulp.run('build-dev');</span></div><div class=\"line\">    <span class=\"comment\">// &#125;);</span></div><div class=\"line\">    <span class=\"comment\">// plugins.watch('dev/**/*.css', function() &#123;</span></div><div class=\"line\">    <span class=\"comment\">//     gulp.run('build-dev');</span></div><div class=\"line\">    <span class=\"comment\">// &#125;);</span></div><div class=\"line\">    gulp.watch(<span class=\"string\">'dev/**/*.+(less|js|html|css|jsp)'</span>, [<span class=\"string\">'change'</span>])</div><div class=\"line\">        .on(<span class=\"string\">'change'</span>, browserSync.reload);</div><div class=\"line\">&#125;);</div><div class=\"line\">gulp.task(<span class=\"string\">'dev'</span>, [<span class=\"string\">'browserSync'</span>, <span class=\"string\">'watch'</span>]);</div><div class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'dev'</span>, <span class=\"string\">'build-dev'</span>]);</div></pre></td></tr></table></figure>"},{"title":"tab栏切换，内容为不断实时刷新数据的vue实现方法","date":"2017-02-07T12:11:34.000Z","_content":"\n先说一下产品需求，就是有几个tab栏，每个tab栏对应的ajax请求不一样，内容区域一样，内容为实时刷新数据，每3s需要重新请求，返回的数据在内容区域展示，每点击一次tab栏需停止其他tab栏ajax请求，防止阻塞，首次加载页面的时候又不能5个ajax同时请求，只需要请求第一个就好\n\n也没有必要建立5个区域，控制显示隐藏，浪费性能，业务代码就不贴了，把大概原理的代码贴上来\n\n![](img/7.gif)\n\n\n先是用jq实现了一版\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <title>Title</title>\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n   \n</head>\n<body>\n\n<div>\n    <ul>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n    </ul>\n</div>\n\n<script>\n    var arr=[\n        function(){console.log(0);},\n        function(){console.log(1);},\n        function(){console.log(2);},\n        function(){console.log(3);},\n        function(){console.log(4);}\n    ];\n\n    var seti=setInterval(arr[0],1000)\n    $('li').click(function(){\n        clearInterval(seti)\n        seti=setInterval(arr[$(this).index()],1000)\n    })\n\n</script>\n\n</body>\n</html>\n```\n\n\n\n再看vue版\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <title>Title</title>\n   \n    <script src=\"https://unpkg.com/vue@2.2.6/dist/vue.min.js\"></script>\n</head>\n<body>\n<div id=\"vm\">\n    <button @click=\"tab(0)\">click0</button>\n    <button @click=\"tab(1)\">click1</button>\n    <button @click=\"tab(2)\">click2</button>\n    <button @click=\"tab(3)\">click3</button>\n    <button @click=\"tab(4)\">click4</button>\n    <div>\n        <p>{{show}}</p>\n    </div>\n</div>\n<script>\n    var vm1 = new Vue({\n        el: '#vm',\n        data: {\n            arr:[\n                function(){console.log(0);},\n                function(){console.log(1);},\n                function(){console.log(2);},\n                function(){console.log(3);},\n                function(){console.log(4);}\n            ],\n            time1:'',\n            time2:'',\n            show:'',\n            num:0,\n\n        },\n        methods: {\n            tab: function(index){\n                //如果每个tab的方法不一样，提前用一个数组把方法保存起来\n                clearInterval(this.time1)\n                this.time1=setInterval(this.arr[index],1000)\n                //以下是调用同一种方法的时候可以不需要设置数组\n                this.num = 0\n                clearInterval(this.time2)\n                this.time2 = this.fun(index)\n            },\n            fun:function(index){\n                var _this=this;\n                return setInterval(function(){\n                    //写个随机数显示在页面，具体业务需求应该是ajax请求\n                    var random=String(parseInt(Math.random()*100000000000))\n                    //字符一个一个显示在页面上\n                    _this.show=index+random.substring(0,_this.num++);\n                },300)\n\n            }\n        },\n        mounted:function(){\n            this.time1=setInterval(this.arr[0],1000)\n        }\n    });\n\n\n</script>\n</body>\n</html>\n```","source":"_posts/tab栏切换，内容为不断实时刷新数据的vue实现方法.md","raw":"---\ntitle: tab栏切换，内容为不断实时刷新数据的vue实现方法\ndate: 2017-02-07 20:11:34\ntags: Vue\n---\n\n先说一下产品需求，就是有几个tab栏，每个tab栏对应的ajax请求不一样，内容区域一样，内容为实时刷新数据，每3s需要重新请求，返回的数据在内容区域展示，每点击一次tab栏需停止其他tab栏ajax请求，防止阻塞，首次加载页面的时候又不能5个ajax同时请求，只需要请求第一个就好\n\n也没有必要建立5个区域，控制显示隐藏，浪费性能，业务代码就不贴了，把大概原理的代码贴上来\n\n![](img/7.gif)\n\n\n先是用jq实现了一版\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <title>Title</title>\n    <script src=\"http://code.jquery.com/jquery-2.1.1.min.js\"></script>\n   \n</head>\n<body>\n\n<div>\n    <ul>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n        <li>click</li>\n    </ul>\n</div>\n\n<script>\n    var arr=[\n        function(){console.log(0);},\n        function(){console.log(1);},\n        function(){console.log(2);},\n        function(){console.log(3);},\n        function(){console.log(4);}\n    ];\n\n    var seti=setInterval(arr[0],1000)\n    $('li').click(function(){\n        clearInterval(seti)\n        seti=setInterval(arr[$(this).index()],1000)\n    })\n\n</script>\n\n</body>\n</html>\n```\n\n\n\n再看vue版\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <title>Title</title>\n   \n    <script src=\"https://unpkg.com/vue@2.2.6/dist/vue.min.js\"></script>\n</head>\n<body>\n<div id=\"vm\">\n    <button @click=\"tab(0)\">click0</button>\n    <button @click=\"tab(1)\">click1</button>\n    <button @click=\"tab(2)\">click2</button>\n    <button @click=\"tab(3)\">click3</button>\n    <button @click=\"tab(4)\">click4</button>\n    <div>\n        <p>{{show}}</p>\n    </div>\n</div>\n<script>\n    var vm1 = new Vue({\n        el: '#vm',\n        data: {\n            arr:[\n                function(){console.log(0);},\n                function(){console.log(1);},\n                function(){console.log(2);},\n                function(){console.log(3);},\n                function(){console.log(4);}\n            ],\n            time1:'',\n            time2:'',\n            show:'',\n            num:0,\n\n        },\n        methods: {\n            tab: function(index){\n                //如果每个tab的方法不一样，提前用一个数组把方法保存起来\n                clearInterval(this.time1)\n                this.time1=setInterval(this.arr[index],1000)\n                //以下是调用同一种方法的时候可以不需要设置数组\n                this.num = 0\n                clearInterval(this.time2)\n                this.time2 = this.fun(index)\n            },\n            fun:function(index){\n                var _this=this;\n                return setInterval(function(){\n                    //写个随机数显示在页面，具体业务需求应该是ajax请求\n                    var random=String(parseInt(Math.random()*100000000000))\n                    //字符一个一个显示在页面上\n                    _this.show=index+random.substring(0,_this.num++);\n                },300)\n\n            }\n        },\n        mounted:function(){\n            this.time1=setInterval(this.arr[0],1000)\n        }\n    });\n\n\n</script>\n</body>\n</html>\n```","slug":"tab栏切换，内容为不断实时刷新数据的vue实现方法","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqe000kog9w2xw9ub3t","content":"<p>先说一下产品需求，就是有几个tab栏，每个tab栏对应的ajax请求不一样，内容区域一样，内容为实时刷新数据，每3s需要重新请求，返回的数据在内容区域展示，每点击一次tab栏需停止其他tab栏ajax请求，防止阻塞，首次加载页面的时候又不能5个ajax同时请求，只需要请求第一个就好</p>\n<p>也没有必要建立5个区域，控制显示隐藏，浪费性能，业务代码就不贴了，把大概原理的代码贴上来</p>\n<p><img src=\"img/7.gif\" alt=\"\"></p>\n<p>先是用jq实现了一版</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> arr=[</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">0</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);&#125;</div><div class=\"line\">    ];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> seti=setInterval(arr[<span class=\"number\">0</span>],<span class=\"number\">1000</span>)</div><div class=\"line\">    $(<span class=\"string\">'li'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        clearInterval(seti)</div><div class=\"line\">        seti=setInterval(arr[$(<span class=\"keyword\">this</span>).index()],<span class=\"number\">1000</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>再看vue版</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">   </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/vue@2.2.6/dist/vue.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vm\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(0)\"</span>&gt;</span>click0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(1)\"</span>&gt;</span>click1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(2)\"</span>&gt;</span>click2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(3)\"</span>&gt;</span>click3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(4)\"</span>&gt;</span>click4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;show&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> vm1 = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">        <span class=\"attr\">el</span>: <span class=\"string\">'#vm'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">arr</span>:[</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">0</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);&#125;</div><div class=\"line\">            ],</div><div class=\"line\">            <span class=\"attr\">time1</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">time2</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">show</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">num</span>:<span class=\"number\">0</span>,</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">tab</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index</span>)</span>&#123;</div><div class=\"line\">                <span class=\"comment\">//如果每个tab的方法不一样，提前用一个数组把方法保存起来</span></div><div class=\"line\">                clearInterval(<span class=\"keyword\">this</span>.time1)</div><div class=\"line\">                <span class=\"keyword\">this</span>.time1=setInterval(<span class=\"keyword\">this</span>.arr[index],<span class=\"number\">1000</span>)</div><div class=\"line\">                <span class=\"comment\">//以下是调用同一种方法的时候可以不需要设置数组</span></div><div class=\"line\">                <span class=\"keyword\">this</span>.num = <span class=\"number\">0</span></div><div class=\"line\">                clearInterval(<span class=\"keyword\">this</span>.time2)</div><div class=\"line\">                <span class=\"keyword\">this</span>.time2 = <span class=\"keyword\">this</span>.fun(index)</div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"attr\">fun</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index</span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</div><div class=\"line\">                <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//写个随机数显示在页面，具体业务需求应该是ajax请求</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> random=<span class=\"built_in\">String</span>(<span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">100000000000</span>))</div><div class=\"line\">                    <span class=\"comment\">//字符一个一个显示在页面上</span></div><div class=\"line\">                    _this.show=index+random.substring(<span class=\"number\">0</span>,_this.num++);</div><div class=\"line\">                &#125;,<span class=\"number\">300</span>)</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">mounted</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.time1=setInterval(<span class=\"keyword\">this</span>.arr[<span class=\"number\">0</span>],<span class=\"number\">1000</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>先说一下产品需求，就是有几个tab栏，每个tab栏对应的ajax请求不一样，内容区域一样，内容为实时刷新数据，每3s需要重新请求，返回的数据在内容区域展示，每点击一次tab栏需停止其他tab栏ajax请求，防止阻塞，首次加载页面的时候又不能5个ajax同时请求，只需要请求第一个就好</p>\n<p>也没有必要建立5个区域，控制显示隐藏，浪费性能，业务代码就不贴了，把大概原理的代码贴上来</p>\n<p><img src=\"img/7.gif\" alt=\"\"></p>\n<p>先是用jq实现了一版</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://code.jquery.com/jquery-2.1.1.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>click<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> arr=[</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">0</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);&#125;,</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);&#125;</div><div class=\"line\">    ];</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> seti=setInterval(arr[<span class=\"number\">0</span>],<span class=\"number\">1000</span>)</div><div class=\"line\">    $(<span class=\"string\">'li'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        clearInterval(seti)</div><div class=\"line\">        seti=setInterval(arr[$(<span class=\"keyword\">this</span>).index()],<span class=\"number\">1000</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>再看vue版</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">   </div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/vue@2.2.6/dist/vue.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vm\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(0)\"</span>&gt;</span>click0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(1)\"</span>&gt;</span>click1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(2)\"</span>&gt;</span>click2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(3)\"</span>&gt;</span>click3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"tab(4)\"</span>&gt;</span>click4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;show&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"keyword\">var</span> vm1 = <span class=\"keyword\">new</span> Vue(&#123;</div><div class=\"line\">        <span class=\"attr\">el</span>: <span class=\"string\">'#vm'</span>,</div><div class=\"line\">        <span class=\"attr\">data</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">arr</span>:[</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">0</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>);&#125;,</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>);&#125;</div><div class=\"line\">            ],</div><div class=\"line\">            <span class=\"attr\">time1</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">time2</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">show</span>:<span class=\"string\">''</span>,</div><div class=\"line\">            <span class=\"attr\">num</span>:<span class=\"number\">0</span>,</div><div class=\"line\"></div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">            <span class=\"attr\">tab</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index</span>)</span>&#123;</div><div class=\"line\">                <span class=\"comment\">//如果每个tab的方法不一样，提前用一个数组把方法保存起来</span></div><div class=\"line\">                clearInterval(<span class=\"keyword\">this</span>.time1)</div><div class=\"line\">                <span class=\"keyword\">this</span>.time1=setInterval(<span class=\"keyword\">this</span>.arr[index],<span class=\"number\">1000</span>)</div><div class=\"line\">                <span class=\"comment\">//以下是调用同一种方法的时候可以不需要设置数组</span></div><div class=\"line\">                <span class=\"keyword\">this</span>.num = <span class=\"number\">0</span></div><div class=\"line\">                clearInterval(<span class=\"keyword\">this</span>.time2)</div><div class=\"line\">                <span class=\"keyword\">this</span>.time2 = <span class=\"keyword\">this</span>.fun(index)</div><div class=\"line\">            &#125;,</div><div class=\"line\">            <span class=\"attr\">fun</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index</span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> _this=<span class=\"keyword\">this</span>;</div><div class=\"line\">                <span class=\"keyword\">return</span> setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//写个随机数显示在页面，具体业务需求应该是ajax请求</span></div><div class=\"line\">                    <span class=\"keyword\">var</span> random=<span class=\"built_in\">String</span>(<span class=\"built_in\">parseInt</span>(<span class=\"built_in\">Math</span>.random()*<span class=\"number\">100000000000</span>))</div><div class=\"line\">                    <span class=\"comment\">//字符一个一个显示在页面上</span></div><div class=\"line\">                    _this.show=index+random.substring(<span class=\"number\">0</span>,_this.num++);</div><div class=\"line\">                &#125;,<span class=\"number\">300</span>)</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"attr\">mounted</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.time1=setInterval(<span class=\"keyword\">this</span>.arr[<span class=\"number\">0</span>],<span class=\"number\">1000</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"vscode插件推荐","date":"2017-03-04T15:12:21.000Z","_content":"\n弃了webstorm和sublime的坑，决定用vscode\n\n从头开始装插件，折腾编辑器\n\n- View In Browser\n\n预览页面（ctrl+F1）\n\n- vscode-icons\n\n侧栏的图标，对于一个有视觉强迫症的人是必须要的\n\n- HTML Snippets\n\n支持HTML5的标签提示\n\n- HTML CSS support\n\ncss自动补齐\n<!-- more -->\n- JS-CSS-HTML Formatter\n\n格式化\n\n- jQuery Code Snippets\n\njquery 自动提示\n\n- Path Autocomplete\n\n路径自动补齐\n\n- ESLint\n\n代码检查\n\n- Auto Rename Tag\n\n自动修改标签名\n\n- One Dark Theme\n\n来自Atom的one dark主题好看实用\n\n- Easy Less\n\nless文件自动实时编译成css\n\n- vetur\n\n目前比较好的Vue语法高亮\n\n- Settings Sync\n\n同步设置到github，神器，强烈推荐\n","source":"_posts/vscode插件推荐.md","raw":"---\ntitle: vscode插件推荐\ndate: 2017-03-04 23:12:21\ntags: Other\n---\n\n弃了webstorm和sublime的坑，决定用vscode\n\n从头开始装插件，折腾编辑器\n\n- View In Browser\n\n预览页面（ctrl+F1）\n\n- vscode-icons\n\n侧栏的图标，对于一个有视觉强迫症的人是必须要的\n\n- HTML Snippets\n\n支持HTML5的标签提示\n\n- HTML CSS support\n\ncss自动补齐\n<!-- more -->\n- JS-CSS-HTML Formatter\n\n格式化\n\n- jQuery Code Snippets\n\njquery 自动提示\n\n- Path Autocomplete\n\n路径自动补齐\n\n- ESLint\n\n代码检查\n\n- Auto Rename Tag\n\n自动修改标签名\n\n- One Dark Theme\n\n来自Atom的one dark主题好看实用\n\n- Easy Less\n\nless文件自动实时编译成css\n\n- vetur\n\n目前比较好的Vue语法高亮\n\n- Settings Sync\n\n同步设置到github，神器，强烈推荐\n","slug":"vscode插件推荐","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqu000nog9wppw365cq","content":"<p>弃了webstorm和sublime的坑，决定用vscode</p>\n<p>从头开始装插件，折腾编辑器</p>\n<ul>\n<li>View In Browser</li>\n</ul>\n<p>预览页面（ctrl+F1）</p>\n<ul>\n<li>vscode-icons</li>\n</ul>\n<p>侧栏的图标，对于一个有视觉强迫症的人是必须要的</p>\n<ul>\n<li>HTML Snippets</li>\n</ul>\n<p>支持HTML5的标签提示</p>\n<ul>\n<li>HTML CSS support</li>\n</ul>\n<p>css自动补齐<br><a id=\"more\"></a></p>\n<ul>\n<li>JS-CSS-HTML Formatter</li>\n</ul>\n<p>格式化</p>\n<ul>\n<li>jQuery Code Snippets</li>\n</ul>\n<p>jquery 自动提示</p>\n<ul>\n<li>Path Autocomplete</li>\n</ul>\n<p>路径自动补齐</p>\n<ul>\n<li>ESLint</li>\n</ul>\n<p>代码检查</p>\n<ul>\n<li>Auto Rename Tag</li>\n</ul>\n<p>自动修改标签名</p>\n<ul>\n<li>One Dark Theme</li>\n</ul>\n<p>来自Atom的one dark主题好看实用</p>\n<ul>\n<li>Easy Less</li>\n</ul>\n<p>less文件自动实时编译成css</p>\n<ul>\n<li>vetur</li>\n</ul>\n<p>目前比较好的Vue语法高亮</p>\n<ul>\n<li>Settings Sync</li>\n</ul>\n<p>同步设置到github，神器，强烈推荐</p>\n","site":{"data":{}},"excerpt":"<p>弃了webstorm和sublime的坑，决定用vscode</p>\n<p>从头开始装插件，折腾编辑器</p>\n<ul>\n<li>View In Browser</li>\n</ul>\n<p>预览页面（ctrl+F1）</p>\n<ul>\n<li>vscode-icons</li>\n</ul>\n<p>侧栏的图标，对于一个有视觉强迫症的人是必须要的</p>\n<ul>\n<li>HTML Snippets</li>\n</ul>\n<p>支持HTML5的标签提示</p>\n<ul>\n<li>HTML CSS support</li>\n</ul>\n<p>css自动补齐<br>","more":"</p>\n<ul>\n<li>JS-CSS-HTML Formatter</li>\n</ul>\n<p>格式化</p>\n<ul>\n<li>jQuery Code Snippets</li>\n</ul>\n<p>jquery 自动提示</p>\n<ul>\n<li>Path Autocomplete</li>\n</ul>\n<p>路径自动补齐</p>\n<ul>\n<li>ESLint</li>\n</ul>\n<p>代码检查</p>\n<ul>\n<li>Auto Rename Tag</li>\n</ul>\n<p>自动修改标签名</p>\n<ul>\n<li>One Dark Theme</li>\n</ul>\n<p>来自Atom的one dark主题好看实用</p>\n<ul>\n<li>Easy Less</li>\n</ul>\n<p>less文件自动实时编译成css</p>\n<ul>\n<li>vetur</li>\n</ul>\n<p>目前比较好的Vue语法高亮</p>\n<ul>\n<li>Settings Sync</li>\n</ul>\n<p>同步设置到github，神器，强烈推荐</p>"},{"title":"vue上拉加载更多的一些性能优化","date":"2017-07-13T12:13:12.000Z","_content":"\nvue上拉加载更多或者是下拉刷新的一些性能优化\n\n\n正常的加载更多写法可能是这样的\n```js\nthis.list.concat(res.data.list)\n```\n\n下拉刷新\n```js\nthis.list = res.data.list\n```\n如果遇到复杂的情况我们只想拿到后台返回数据数组中的某一个值那只好用循环了\n\n或许你能想到的方法是这样的\n加载更多\n```js\n//这种写法如果层级比较高的话有可能出现数据更新视图不更新的情况\nres.data.list.forEach(function (e, i) {\n    this.list[this.list.length + i].name = e.name\n})\n//比较好的写法是用push\nres.data.list.forEach(function (e, i) {\n    this.list.push({name: e.name})\n})\n```\n<!-- more -->\npush虽然能保证视图更新了，但是每次push之后，理论上vue检测到变化内部set方法执行，然后进行视图更新，这样每次push就会调用一次视图更新\n\n```js\n//那么就有了如下的写法,只调用一次set\nlet arr =[]\nres.data.list.forEach(function (e, i) {\n    this.list.push({name: e.name})\n})\nthis.list.concat(arr)\n```\n\n同理下拉刷新的时候也新建一个空的arr，然后赋值给list\n\n如果是微博这种列表数据量非常大的情况，还要考虑视图内只显示几十条数据，在push的同时把划上去看不到数据列临时存储起来","source":"_posts/vue上拉加载更多的一些性能优化.md","raw":"---\ntitle: vue上拉加载更多的一些性能优化\ndate: 2017-07-13 20:13:12\ntags: Vue\n---\n\nvue上拉加载更多或者是下拉刷新的一些性能优化\n\n\n正常的加载更多写法可能是这样的\n```js\nthis.list.concat(res.data.list)\n```\n\n下拉刷新\n```js\nthis.list = res.data.list\n```\n如果遇到复杂的情况我们只想拿到后台返回数据数组中的某一个值那只好用循环了\n\n或许你能想到的方法是这样的\n加载更多\n```js\n//这种写法如果层级比较高的话有可能出现数据更新视图不更新的情况\nres.data.list.forEach(function (e, i) {\n    this.list[this.list.length + i].name = e.name\n})\n//比较好的写法是用push\nres.data.list.forEach(function (e, i) {\n    this.list.push({name: e.name})\n})\n```\n<!-- more -->\npush虽然能保证视图更新了，但是每次push之后，理论上vue检测到变化内部set方法执行，然后进行视图更新，这样每次push就会调用一次视图更新\n\n```js\n//那么就有了如下的写法,只调用一次set\nlet arr =[]\nres.data.list.forEach(function (e, i) {\n    this.list.push({name: e.name})\n})\nthis.list.concat(arr)\n```\n\n同理下拉刷新的时候也新建一个空的arr，然后赋值给list\n\n如果是微博这种列表数据量非常大的情况，还要考虑视图内只显示几十条数据，在push的同时把划上去看不到数据列临时存储起来","slug":"vue上拉加载更多的一些性能优化","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqu000pog9wrns4rngi","content":"<p>vue上拉加载更多或者是下拉刷新的一些性能优化</p>\n<p>正常的加载更多写法可能是这样的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.list.concat(res.data.list)</div></pre></td></tr></table></figure></p>\n<p>下拉刷新<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.list = res.data.list</div></pre></td></tr></table></figure></p>\n<p>如果遇到复杂的情况我们只想拿到后台返回数据数组中的某一个值那只好用循环了</p>\n<p>或许你能想到的方法是这样的<br>加载更多<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这种写法如果层级比较高的话有可能出现数据更新视图不更新的情况</span></div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list[<span class=\"keyword\">this</span>.list.length + i].name = e.name</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">//比较好的写法是用push</span></div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list.push(&#123;<span class=\"attr\">name</span>: e.name&#125;)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>push虽然能保证视图更新了，但是每次push之后，理论上vue检测到变化内部set方法执行，然后进行视图更新，这样每次push就会调用一次视图更新</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//那么就有了如下的写法,只调用一次set</span></div><div class=\"line\"><span class=\"keyword\">let</span> arr =[]</div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list.push(&#123;<span class=\"attr\">name</span>: e.name&#125;)</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"keyword\">this</span>.list.concat(arr)</div></pre></td></tr></table></figure>\n<p>同理下拉刷新的时候也新建一个空的arr，然后赋值给list</p>\n<p>如果是微博这种列表数据量非常大的情况，还要考虑视图内只显示几十条数据，在push的同时把划上去看不到数据列临时存储起来</p>\n","site":{"data":{}},"excerpt":"<p>vue上拉加载更多或者是下拉刷新的一些性能优化</p>\n<p>正常的加载更多写法可能是这样的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.list.concat(res.data.list)</div></pre></td></tr></table></figure></p>\n<p>下拉刷新<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.list = res.data.list</div></pre></td></tr></table></figure></p>\n<p>如果遇到复杂的情况我们只想拿到后台返回数据数组中的某一个值那只好用循环了</p>\n<p>或许你能想到的方法是这样的<br>加载更多<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//这种写法如果层级比较高的话有可能出现数据更新视图不更新的情况</span></div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list[<span class=\"keyword\">this</span>.list.length + i].name = e.name</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"comment\">//比较好的写法是用push</span></div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list.push(&#123;<span class=\"attr\">name</span>: e.name&#125;)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>","more":"<p>push虽然能保证视图更新了，但是每次push之后，理论上vue检测到变化内部set方法执行，然后进行视图更新，这样每次push就会调用一次视图更新</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//那么就有了如下的写法,只调用一次set</span></div><div class=\"line\"><span class=\"keyword\">let</span> arr =[]</div><div class=\"line\">res.data.list.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e, i</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.list.push(&#123;<span class=\"attr\">name</span>: e.name&#125;)</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"keyword\">this</span>.list.concat(arr)</div></pre></td></tr></table></figure>\n<p>同理下拉刷新的时候也新建一个空的arr，然后赋值给list</p>\n<p>如果是微博这种列表数据量非常大的情况，还要考虑视图内只显示几十条数据，在push的同时把划上去看不到数据列临时存储起来</p>"},{"title":"vue使用webpack打包cdn资源优化","date":"2017-06-20T12:19:17.000Z","_content":"\n项目做的越来越大，引入的外部资源也会越来越多，vue-cli的配置是将所有js打包在一起，但是这样会造成js体积特别大\n\n有时候像echarts，moment这种有cdn的资源可以考虑在webpack里配置一下，直接引入cdn资源或者下载到本地，使用静态资源，而不是都打包到一个js里\n\n\n修改build/webpack.base.conf.js\n添加externals项，与resolve同级\n\n\n```js\nresolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n        //路径别名\n        'vue$': 'vue/dist/vue.esm.js',\n        '@': resolve('src'),\n    }\n},\nexternals: {\n    // 指定别名\n    \"moment\": 'moment'\n},\n\n```\n\n然后在index.html里添加cdn\n```html\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js\"></script> \n```\n\n页面里只需要正常的引用即可\n\n```js\nimport moment from 'moment'\n```\n","source":"_posts/vue使用webpack打包cdn资源优化.md","raw":"---\ntitle: vue使用webpack打包cdn资源优化\ndate: 2017-06-20 20:19:17\ntags: Vue\n---\n\n项目做的越来越大，引入的外部资源也会越来越多，vue-cli的配置是将所有js打包在一起，但是这样会造成js体积特别大\n\n有时候像echarts，moment这种有cdn的资源可以考虑在webpack里配置一下，直接引入cdn资源或者下载到本地，使用静态资源，而不是都打包到一个js里\n\n\n修改build/webpack.base.conf.js\n添加externals项，与resolve同级\n\n\n```js\nresolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n        //路径别名\n        'vue$': 'vue/dist/vue.esm.js',\n        '@': resolve('src'),\n    }\n},\nexternals: {\n    // 指定别名\n    \"moment\": 'moment'\n},\n\n```\n\n然后在index.html里添加cdn\n```html\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js\"></script> \n```\n\n页面里只需要正常的引用即可\n\n```js\nimport moment from 'moment'\n```\n","slug":"vue使用webpack打包cdn资源优化","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqu000sog9whpbuswg8","content":"<p>项目做的越来越大，引入的外部资源也会越来越多，vue-cli的配置是将所有js打包在一起，但是这样会造成js体积特别大</p>\n<p>有时候像echarts，moment这种有cdn的资源可以考虑在webpack里配置一下，直接引入cdn资源或者下载到本地，使用静态资源，而不是都打包到一个js里</p>\n<p>修改build/webpack.base.conf.js<br>添加externals项，与resolve同级</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">resolve: &#123;</div><div class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>],</div><div class=\"line\">    <span class=\"attr\">alias</span>: &#123;</div><div class=\"line\">        <span class=\"comment\">//路径别名</span></div><div class=\"line\">        <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</div><div class=\"line\">        <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>),</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"attr\">externals</span>: &#123;</div><div class=\"line\">    <span class=\"comment\">// 指定别名</span></div><div class=\"line\">    <span class=\"string\">\"moment\"</span>: <span class=\"string\">'moment'</span></div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>然后在index.html里添加cdn<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>页面里只需要正常的引用即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> moment <span class=\"keyword\">from</span> <span class=\"string\">'moment'</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>项目做的越来越大，引入的外部资源也会越来越多，vue-cli的配置是将所有js打包在一起，但是这样会造成js体积特别大</p>\n<p>有时候像echarts，moment这种有cdn的资源可以考虑在webpack里配置一下，直接引入cdn资源或者下载到本地，使用静态资源，而不是都打包到一个js里</p>\n<p>修改build/webpack.base.conf.js<br>添加externals项，与resolve同级</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">resolve: &#123;</div><div class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>],</div><div class=\"line\">    <span class=\"attr\">alias</span>: &#123;</div><div class=\"line\">        <span class=\"comment\">//路径别名</span></div><div class=\"line\">        <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</div><div class=\"line\">        <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>),</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;,</div><div class=\"line\"><span class=\"attr\">externals</span>: &#123;</div><div class=\"line\">    <span class=\"comment\">// 指定别名</span></div><div class=\"line\">    <span class=\"string\">\"moment\"</span>: <span class=\"string\">'moment'</span></div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure>\n<p>然后在index.html里添加cdn<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>页面里只需要正常的引用即可</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> moment <span class=\"keyword\">from</span> <span class=\"string\">'moment'</span></div></pre></td></tr></table></figure>\n"},{"title":"vue使用反向代理实现本地跨域调试","date":"2017-01-16T15:11:11.000Z","_content":"\n\n# vue使用反向代理实现本地跨域调试\n\n和后端联调时总是会面对恼人的跨域问题，\n\n之前都是改host，或者用代理软件等方法调试接口\n\n现在使用vue-cli生成的开发环境，内部已经加入了http-proxy-middleware，直接在config/index.js中，把proxytable里面配置一下就可以本地调试后端的接口了\n\n假如我们的接口地址为\n\nhttp://10.153.29.17:8916/api/getData\n\n那么我们的proxytable这里就可以配置为\n```js\nproxyTable: {\n      /**\n         * 其中 '/api' 为匹配项，target 为被请求的地址\n         * 因为在 ajax 的 url 中加了前缀 '/api'，而原本的接口是没有这个前缀的\n         * 所以需要通过 pathRewrite 来重写地址，将前缀 '/api' 转为 '/'\n         * 如果本身的接口地址就有 '/api' 这种通用前缀，就可以把 pathRewrite 删掉\n         */\n      '/api': {\n        target: 'http://10.153.29.17:8916',\n        changeOrigin: true,\n        pathRewrite: {\n          '^/api': '/api'\n        }\n      }\n    },\n\n\n```\n\n然后我们的ajax为\n\n```js\naxios.post('/api/getData',{\n  firstName:'Fred',\n  lastName:'Flintstone'\n})\n.then(function(res){\n  console.log(res);\n})\n.catch(function(err){\n  console.log(err);\n});\n\n```\n\n虽然在浏览器控制台里看到的访问地址还是localhost，但是控制台已经不会报跨域的错误了","source":"_posts/vue使用反向代理实现本地跨域调试.md","raw":"---\ntitle: vue使用反向代理实现本地跨域调试\ndate: 2017-01-16 23:11:11\ntags: Vue\n---\n\n\n# vue使用反向代理实现本地跨域调试\n\n和后端联调时总是会面对恼人的跨域问题，\n\n之前都是改host，或者用代理软件等方法调试接口\n\n现在使用vue-cli生成的开发环境，内部已经加入了http-proxy-middleware，直接在config/index.js中，把proxytable里面配置一下就可以本地调试后端的接口了\n\n假如我们的接口地址为\n\nhttp://10.153.29.17:8916/api/getData\n\n那么我们的proxytable这里就可以配置为\n```js\nproxyTable: {\n      /**\n         * 其中 '/api' 为匹配项，target 为被请求的地址\n         * 因为在 ajax 的 url 中加了前缀 '/api'，而原本的接口是没有这个前缀的\n         * 所以需要通过 pathRewrite 来重写地址，将前缀 '/api' 转为 '/'\n         * 如果本身的接口地址就有 '/api' 这种通用前缀，就可以把 pathRewrite 删掉\n         */\n      '/api': {\n        target: 'http://10.153.29.17:8916',\n        changeOrigin: true,\n        pathRewrite: {\n          '^/api': '/api'\n        }\n      }\n    },\n\n\n```\n\n然后我们的ajax为\n\n```js\naxios.post('/api/getData',{\n  firstName:'Fred',\n  lastName:'Flintstone'\n})\n.then(function(res){\n  console.log(res);\n})\n.catch(function(err){\n  console.log(err);\n});\n\n```\n\n虽然在浏览器控制台里看到的访问地址还是localhost，但是控制台已经不会报跨域的错误了","slug":"vue使用反向代理实现本地跨域调试","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxqu000uog9w4ayed7js","content":"<h1 id=\"vue使用反向代理实现本地跨域调试\"><a href=\"#vue使用反向代理实现本地跨域调试\" class=\"headerlink\" title=\"vue使用反向代理实现本地跨域调试\"></a>vue使用反向代理实现本地跨域调试</h1><p>和后端联调时总是会面对恼人的跨域问题，</p>\n<p>之前都是改host，或者用代理软件等方法调试接口</p>\n<p>现在使用vue-cli生成的开发环境，内部已经加入了http-proxy-middleware，直接在config/index.js中，把proxytable里面配置一下就可以本地调试后端的接口了</p>\n<p>假如我们的接口地址为</p>\n<p><a href=\"http://10.153.29.17:8916/api/getData\" target=\"_blank\" rel=\"external\">http://10.153.29.17:8916/api/getData</a></p>\n<p>那么我们的proxytable这里就可以配置为<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxyTable: &#123;</div><div class=\"line\">      <span class=\"comment\">/**</span></div><div class=\"line\">         * 其中 '/api' 为匹配项，target 为被请求的地址</div><div class=\"line\">         * 因为在 ajax 的 url 中加了前缀 '/api'，而原本的接口是没有这个前缀的</div><div class=\"line\">         * 所以需要通过 pathRewrite 来重写地址，将前缀 '/api' 转为 '/'</div><div class=\"line\">         * 如果本身的接口地址就有 '/api' 这种通用前缀，就可以把 pathRewrite 删掉</div><div class=\"line\">         */</div><div class=\"line\">      <span class=\"string\">'/api'</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">'http://10.153.29.17:8916'</span>,</div><div class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</div><div class=\"line\">          <span class=\"string\">'^/api'</span>: <span class=\"string\">'/api'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;,</div></pre></td></tr></table></figure></p>\n<p>然后我们的ajax为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">axios.post(<span class=\"string\">'/api/getData'</span>,&#123;</div><div class=\"line\">  <span class=\"attr\">firstName</span>:<span class=\"string\">'Fred'</span>,</div><div class=\"line\">  <span class=\"attr\">lastName</span>:<span class=\"string\">'Flintstone'</span></div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(res);</div><div class=\"line\">&#125;)</div><div class=\"line\">.catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(err);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>虽然在浏览器控制台里看到的访问地址还是localhost，但是控制台已经不会报跨域的错误了</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vue使用反向代理实现本地跨域调试\"><a href=\"#vue使用反向代理实现本地跨域调试\" class=\"headerlink\" title=\"vue使用反向代理实现本地跨域调试\"></a>vue使用反向代理实现本地跨域调试</h1><p>和后端联调时总是会面对恼人的跨域问题，</p>\n<p>之前都是改host，或者用代理软件等方法调试接口</p>\n<p>现在使用vue-cli生成的开发环境，内部已经加入了http-proxy-middleware，直接在config/index.js中，把proxytable里面配置一下就可以本地调试后端的接口了</p>\n<p>假如我们的接口地址为</p>\n<p><a href=\"http://10.153.29.17:8916/api/getData\" target=\"_blank\" rel=\"external\">http://10.153.29.17:8916/api/getData</a></p>\n<p>那么我们的proxytable这里就可以配置为<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxyTable: &#123;</div><div class=\"line\">      <span class=\"comment\">/**</span></div><div class=\"line\">         * 其中 '/api' 为匹配项，target 为被请求的地址</div><div class=\"line\">         * 因为在 ajax 的 url 中加了前缀 '/api'，而原本的接口是没有这个前缀的</div><div class=\"line\">         * 所以需要通过 pathRewrite 来重写地址，将前缀 '/api' 转为 '/'</div><div class=\"line\">         * 如果本身的接口地址就有 '/api' 这种通用前缀，就可以把 pathRewrite 删掉</div><div class=\"line\">         */</div><div class=\"line\">      <span class=\"string\">'/api'</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">'http://10.153.29.17:8916'</span>,</div><div class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</div><div class=\"line\">          <span class=\"string\">'^/api'</span>: <span class=\"string\">'/api'</span></div><div class=\"line\">        &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;,</div></pre></td></tr></table></figure></p>\n<p>然后我们的ajax为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">axios.post(<span class=\"string\">'/api/getData'</span>,&#123;</div><div class=\"line\">  <span class=\"attr\">firstName</span>:<span class=\"string\">'Fred'</span>,</div><div class=\"line\">  <span class=\"attr\">lastName</span>:<span class=\"string\">'Flintstone'</span></div><div class=\"line\">&#125;)</div><div class=\"line\">.then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(res);</div><div class=\"line\">&#125;)</div><div class=\"line\">.catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(err);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>虽然在浏览器控制台里看到的访问地址还是localhost，但是控制台已经不会报跨域的错误了</p>\n"},{"title":"vue动态路由页面刷新问题","date":"2017-09-23T08:54:18.000Z","_content":"\n\n有的时候使用动态路由，因为使用的是同一个组件，而routes没有变化，导致页面没有更新\n今天在群里看到一个有趣的解决思路，特发上来\n\n首先在app.vue的router-view上加一个key，然后计算属性里判断fullPath\n这样就解决了\n\n```html\n<template>\n    <div class=\"app\">\n        <router-view :key=\"key\"></router-view>\n    </div>\n</template>\n```\n\n```js\ncomputed:{\n    key(){\n        return this.$router.fullPath !== undefined\n            ? this.$route.fullPath + new Date()\n            : this.$route +new Date()\n    }\n}\n\n```","source":"_posts/vue动态路由页面刷新问题.md","raw":"---\ntitle: vue动态路由页面刷新问题\ndate: 2017-09-23 16:54:18\ntags: Vue\n---\n\n\n有的时候使用动态路由，因为使用的是同一个组件，而routes没有变化，导致页面没有更新\n今天在群里看到一个有趣的解决思路，特发上来\n\n首先在app.vue的router-view上加一个key，然后计算属性里判断fullPath\n这样就解决了\n\n```html\n<template>\n    <div class=\"app\">\n        <router-view :key=\"key\"></router-view>\n    </div>\n</template>\n```\n\n```js\ncomputed:{\n    key(){\n        return this.$router.fullPath !== undefined\n            ? this.$route.fullPath + new Date()\n            : this.$route +new Date()\n    }\n}\n\n```","slug":"vue动态路由页面刷新问题","published":1,"updated":"2017-09-23T09:11:44.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxra000xog9wd5z5vldc","content":"<p>有的时候使用动态路由，因为使用的是同一个组件，而routes没有变化，导致页面没有更新<br>今天在群里看到一个有趣的解决思路，特发上来</p>\n<p>首先在app.vue的router-view上加一个key，然后计算属性里判断fullPath<br>这样就解决了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"app\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">computed:&#123;</div><div class=\"line\">    key()&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$router.fullPath !== <span class=\"literal\">undefined</span></div><div class=\"line\">            ? <span class=\"keyword\">this</span>.$route.fullPath + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">            : <span class=\"keyword\">this</span>.$route +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>有的时候使用动态路由，因为使用的是同一个组件，而routes没有变化，导致页面没有更新<br>今天在群里看到一个有趣的解决思路，特发上来</p>\n<p>首先在app.vue的router-view上加一个key，然后计算属性里判断fullPath<br>这样就解决了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"app\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"key\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">computed:&#123;</div><div class=\"line\">    key()&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$router.fullPath !== <span class=\"literal\">undefined</span></div><div class=\"line\">            ? <span class=\"keyword\">this</span>.$route.fullPath + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">            : <span class=\"keyword\">this</span>.$route +<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"vue同级组件传递参数的几种实现","date":"2017-07-20T14:17:22.000Z","_content":"\n\n\n\n## vuex\n\n通过vuex在mutations里提交，另一个组件this.$store.state.xxx就可以获取了\n\n## $emit\n\n通过$emit触发父组件的事件，更改父组件的值，然后再通过props传递到另一个子组件\n```js\nthis.$emit('event', data)     \n\n```    \n\n## ref\n\n在另一子组件上写一个ref，然后就可以在其他子组件里通过this.$refs.method来调用组件内事件，来改变当前组件内的值\n\n## event bus\n\n创建另一个vue实例，来触发其他组件内的事件\n\n或者使用现有的插件vue-bus ","source":"_posts/vue同级组件传递参数的几种实现.md","raw":"---\ntitle: vue同级组件传递参数的几种实现\ndate: 2017-07-20 22:17:22\ntags: Vue\n---\n\n\n\n\n## vuex\n\n通过vuex在mutations里提交，另一个组件this.$store.state.xxx就可以获取了\n\n## $emit\n\n通过$emit触发父组件的事件，更改父组件的值，然后再通过props传递到另一个子组件\n```js\nthis.$emit('event', data)     \n\n```    \n\n## ref\n\n在另一子组件上写一个ref，然后就可以在其他子组件里通过this.$refs.method来调用组件内事件，来改变当前组件内的值\n\n## event bus\n\n创建另一个vue实例，来触发其他组件内的事件\n\n或者使用现有的插件vue-bus ","slug":"vue同级组件传递参数的几种实现","published":1,"updated":"2017-09-23T09:23:14.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxra000zog9wlnx5xp2p","content":"<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>通过vuex在mutations里提交，另一个组件this.$store.state.xxx就可以获取了</p>\n<h2 id=\"emit\"><a href=\"#emit\" class=\"headerlink\" title=\"$emit\"></a>$emit</h2><p>通过$emit触发父组件的事件，更改父组件的值，然后再通过props传递到另一个子组件</p>\n<pre><code class=\"js\"><span class=\"keyword\">this</span>.$emit(<span class=\"string\">'event'</span>, data)\n</code></pre>\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>在另一子组件上写一个ref，然后就可以在其他子组件里通过this.$refs.method来调用组件内事件，来改变当前组件内的值</p>\n<h2 id=\"event-bus\"><a href=\"#event-bus\" class=\"headerlink\" title=\"event bus\"></a>event bus</h2><p>创建另一个vue实例，来触发其他组件内的事件</p>\n<p>或者使用现有的插件vue-bus </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vuex\"><a href=\"#vuex\" class=\"headerlink\" title=\"vuex\"></a>vuex</h2><p>通过vuex在mutations里提交，另一个组件this.$store.state.xxx就可以获取了</p>\n<h2 id=\"emit\"><a href=\"#emit\" class=\"headerlink\" title=\"$emit\"></a>$emit</h2><p>通过$emit触发父组件的事件，更改父组件的值，然后再通过props传递到另一个子组件</p>\n<pre><code class=\"js\"><span class=\"keyword\">this</span>.$emit(<span class=\"string\">'event'</span>, data)\n</code></pre>\n<h2 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref</h2><p>在另一子组件上写一个ref，然后就可以在其他子组件里通过this.$refs.method来调用组件内事件，来改变当前组件内的值</p>\n<h2 id=\"event-bus\"><a href=\"#event-bus\" class=\"headerlink\" title=\"event bus\"></a>event bus</h2><p>创建另一个vue实例，来触发其他组件内的事件</p>\n<p>或者使用现有的插件vue-bus </p>\n"},{"title":"vue手机端input获得焦点 输入法显示搜索","date":"2017-06-17T12:14:44.000Z","_content":"类似这种点击搜索框，然后输入法的回车按键自动变为搜索两个字\n![](img/sousuo1.jpg)\n我们这样写就实现了\n```html\n\n<template>\n    <div id=\"shoplist\">\n        <form @submit.prevent=\"search\">\n            <input type=\"search\" v-model=\"inputdata\">\n            <button type=\"submit\" >search </button>\n        </form>\n    </div>\n</template>\n<script>\nexport default {\n  name: 'uuu',\n  data () {\n    return {\n      inputdata: ''\n    }\n  },\n  methods: {\n    search () {\n      alert(this.inputdata)\n    }\n  }\n}\n</script>\n<style>\n    \n</style>\n\n\n```","source":"_posts/vue手机端input获得焦点 输入法显示搜索.md","raw":"---\ntitle: vue手机端input获得焦点 输入法显示搜索\ndate: 2017-06-17 20:14:44\ntags: Vue\n---\n类似这种点击搜索框，然后输入法的回车按键自动变为搜索两个字\n![](img/sousuo1.jpg)\n我们这样写就实现了\n```html\n\n<template>\n    <div id=\"shoplist\">\n        <form @submit.prevent=\"search\">\n            <input type=\"search\" v-model=\"inputdata\">\n            <button type=\"submit\" >search </button>\n        </form>\n    </div>\n</template>\n<script>\nexport default {\n  name: 'uuu',\n  data () {\n    return {\n      inputdata: ''\n    }\n  },\n  methods: {\n    search () {\n      alert(this.inputdata)\n    }\n  }\n}\n</script>\n<style>\n    \n</style>\n\n\n```","slug":"vue手机端input获得焦点 输入法显示搜索","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxrp0012og9w7r0h7dgs","content":"<p>类似这种点击搜索框，然后输入法的回车按键自动变为搜索两个字<br><img src=\"img/sousuo1.jpg\" alt=\"\"><br>我们这样写就实现了<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"shoplist\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">\"search\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"inputdata\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> &gt;</span>search <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'uuu'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">inputdata</span>: <span class=\"string\">''</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    search () &#123;</div><div class=\"line\">      alert(<span class=\"keyword\">this</span>.inputdata)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>类似这种点击搜索框，然后输入法的回车按键自动变为搜索两个字<br><img src=\"img/sousuo1.jpg\" alt=\"\"><br>我们这样写就实现了<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"shoplist\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">form</span> @<span class=\"attr\">submit.prevent</span>=<span class=\"string\">\"search\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"search\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"inputdata\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> &gt;</span>search <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">'uuu'</span>,</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">inputdata</span>: <span class=\"string\">''</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">methods</span>: &#123;</div><div class=\"line\">    search () &#123;</div><div class=\"line\">      alert(<span class=\"keyword\">this</span>.inputdata)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">    </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div></pre></td></tr></table></figure></p>\n"},{"title":"vue发现element里几个好用的方法","date":"2017-04-02T12:45:17.000Z","_content":"\n\n\n\n```js\nvar SIGN_REGEXP = /([yMdhsm])(\\1*)/g;\nvar DEFAULT_PATTERN = 'yyyy-MM-dd';\nfunction padding(s, len) {\n    var len = len - (s + '').length;\n    for (var i = 0; i < len; i++) { s = '0' + s; }\n    return s;\n};\n\n\nexport const getQueryStringByName = function (name) {\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n        var r = window.location.search.substr(1).match(reg);\n        var context = \"\";\n        if (r != null)\n            context = r[2];\n        reg = null;\n        r = null;\n        return context == null || context == \"\" || context == \"undefined\" ? \"\" : context;\n    }\nexport const formatDate = {\n        //将系统时间转化为字符时间\n        format: function (date, pattern) {\n            pattern = pattern || DEFAULT_PATTERN;\n            return pattern.replace(SIGN_REGEXP, function ($0) {\n                switch ($0.charAt(0)) {\n                    case 'y': return padding(date.getFullYear(), $0.length);\n                    case 'M': return padding(date.getMonth() + 1, $0.length);\n                    case 'd': return padding(date.getDate(), $0.length);\n                    case 'w': return date.getDay() + 1;\n                    case 'h': return padding(date.getHours(), $0.length);\n                    case 'm': return padding(date.getMinutes(), $0.length);\n                    case 's': return padding(date.getSeconds(), $0.length);\n                }\n            });\n        },\n        //转化字符时间为系统时间\n        parse: function (dateString, pattern) {\n            var matchs1 = pattern.match(SIGN_REGEXP);\n            var matchs2 = dateString.match(/(\\d)+/g);\n            if (matchs1.length == matchs2.length) {\n                var _date = new Date(1970, 0, 1);\n                for (var i = 0; i < matchs1.length; i++) {\n                    var _int = parseInt(matchs2[i]);\n                    var sign = matchs1[i];\n                    switch (sign.charAt(0)) {\n                        case 'y': _date.setFullYear(_int); break;\n                        case 'M': _date.setMonth(_int - 1); break;\n                        case 'd': _date.setDate(_int); break;\n                        case 'h': _date.setHours(_int); break;\n                        case 'm': _date.setMinutes(_int); break;\n                        case 's': _date.setSeconds(_int); break;\n                    }\n                }\n                return _date;\n            }\n            return null;\n        }\n\n    }\n\n\n\n\n\n```","source":"_posts/vue发现element里几个好用的方法.md","raw":"---\ntitle: vue发现element里几个好用的方法\ndate: 2017-04-2 20:45:17\ntags: Vue\n---\n\n\n\n\n```js\nvar SIGN_REGEXP = /([yMdhsm])(\\1*)/g;\nvar DEFAULT_PATTERN = 'yyyy-MM-dd';\nfunction padding(s, len) {\n    var len = len - (s + '').length;\n    for (var i = 0; i < len; i++) { s = '0' + s; }\n    return s;\n};\n\n\nexport const getQueryStringByName = function (name) {\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n        var r = window.location.search.substr(1).match(reg);\n        var context = \"\";\n        if (r != null)\n            context = r[2];\n        reg = null;\n        r = null;\n        return context == null || context == \"\" || context == \"undefined\" ? \"\" : context;\n    }\nexport const formatDate = {\n        //将系统时间转化为字符时间\n        format: function (date, pattern) {\n            pattern = pattern || DEFAULT_PATTERN;\n            return pattern.replace(SIGN_REGEXP, function ($0) {\n                switch ($0.charAt(0)) {\n                    case 'y': return padding(date.getFullYear(), $0.length);\n                    case 'M': return padding(date.getMonth() + 1, $0.length);\n                    case 'd': return padding(date.getDate(), $0.length);\n                    case 'w': return date.getDay() + 1;\n                    case 'h': return padding(date.getHours(), $0.length);\n                    case 'm': return padding(date.getMinutes(), $0.length);\n                    case 's': return padding(date.getSeconds(), $0.length);\n                }\n            });\n        },\n        //转化字符时间为系统时间\n        parse: function (dateString, pattern) {\n            var matchs1 = pattern.match(SIGN_REGEXP);\n            var matchs2 = dateString.match(/(\\d)+/g);\n            if (matchs1.length == matchs2.length) {\n                var _date = new Date(1970, 0, 1);\n                for (var i = 0; i < matchs1.length; i++) {\n                    var _int = parseInt(matchs2[i]);\n                    var sign = matchs1[i];\n                    switch (sign.charAt(0)) {\n                        case 'y': _date.setFullYear(_int); break;\n                        case 'M': _date.setMonth(_int - 1); break;\n                        case 'd': _date.setDate(_int); break;\n                        case 'h': _date.setHours(_int); break;\n                        case 'm': _date.setMinutes(_int); break;\n                        case 's': _date.setSeconds(_int); break;\n                    }\n                }\n                return _date;\n            }\n            return null;\n        }\n\n    }\n\n\n\n\n\n```","slug":"vue发现element里几个好用的方法","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxrp0014og9w9uoz3vq9","content":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> SIGN_REGEXP = <span class=\"regexp\">/([yMdhsm])(\\1*)/g</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> DEFAULT_PATTERN = <span class=\"string\">'yyyy-MM-dd'</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">padding</span>(<span class=\"params\">s, len</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> len = len - (s + <span class=\"string\">''</span>).length;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123; s = <span class=\"string\">'0'</span> + s; &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> s;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> getQueryStringByName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span> + name + <span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>, <span class=\"string\">\"i\"</span>);</div><div class=\"line\">        <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);</div><div class=\"line\">        <span class=\"keyword\">var</span> context = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (r != <span class=\"literal\">null</span>)</div><div class=\"line\">            context = r[<span class=\"number\">2</span>];</div><div class=\"line\">        reg = <span class=\"literal\">null</span>;</div><div class=\"line\">        r = <span class=\"literal\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> context == <span class=\"literal\">null</span> || context == <span class=\"string\">\"\"</span> || context == <span class=\"string\">\"undefined\"</span> ? <span class=\"string\">\"\"</span> : context;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatDate = &#123;</div><div class=\"line\">        <span class=\"comment\">//将系统时间转化为字符时间</span></div><div class=\"line\">        format: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">date, pattern</span>) </span>&#123;</div><div class=\"line\">            pattern = pattern || DEFAULT_PATTERN;</div><div class=\"line\">            <span class=\"keyword\">return</span> pattern.replace(SIGN_REGEXP, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$<span class=\"number\">0</span></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">switch</span> ($<span class=\"number\">0.</span>charAt(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'y'</span>: <span class=\"keyword\">return</span> padding(date.getFullYear(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'M'</span>: <span class=\"keyword\">return</span> padding(date.getMonth() + <span class=\"number\">1</span>, $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'d'</span>: <span class=\"keyword\">return</span> padding(date.getDate(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'w'</span>: <span class=\"keyword\">return</span> date.getDay() + <span class=\"number\">1</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'h'</span>: <span class=\"keyword\">return</span> padding(date.getHours(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'m'</span>: <span class=\"keyword\">return</span> padding(date.getMinutes(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'s'</span>: <span class=\"keyword\">return</span> padding(date.getSeconds(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//转化字符时间为系统时间</span></div><div class=\"line\">        parse: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">dateString, pattern</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> matchs1 = pattern.match(SIGN_REGEXP);</div><div class=\"line\">            <span class=\"keyword\">var</span> matchs2 = dateString.match(<span class=\"regexp\">/(\\d)+/g</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (matchs1.length == matchs2.length) &#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> _date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">1970</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; matchs1.length; i++) &#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> _int = <span class=\"built_in\">parseInt</span>(matchs2[i]);</div><div class=\"line\">                    <span class=\"keyword\">var</span> sign = matchs1[i];</div><div class=\"line\">                    <span class=\"keyword\">switch</span> (sign.charAt(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'y'</span>: _date.setFullYear(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'M'</span>: _date.setMonth(_int - <span class=\"number\">1</span>); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'d'</span>: _date.setDate(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'h'</span>: _date.setHours(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'m'</span>: _date.setMinutes(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'s'</span>: _date.setSeconds(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> _date;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> SIGN_REGEXP = <span class=\"regexp\">/([yMdhsm])(\\1*)/g</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> DEFAULT_PATTERN = <span class=\"string\">'yyyy-MM-dd'</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">padding</span>(<span class=\"params\">s, len</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> len = len - (s + <span class=\"string\">''</span>).length;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123; s = <span class=\"string\">'0'</span> + s; &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> s;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> getQueryStringByName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"(^|&amp;)\"</span> + name + <span class=\"string\">\"=([^&amp;]*)(&amp;|$)\"</span>, <span class=\"string\">\"i\"</span>);</div><div class=\"line\">        <span class=\"keyword\">var</span> r = <span class=\"built_in\">window</span>.location.search.substr(<span class=\"number\">1</span>).match(reg);</div><div class=\"line\">        <span class=\"keyword\">var</span> context = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (r != <span class=\"literal\">null</span>)</div><div class=\"line\">            context = r[<span class=\"number\">2</span>];</div><div class=\"line\">        reg = <span class=\"literal\">null</span>;</div><div class=\"line\">        r = <span class=\"literal\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> context == <span class=\"literal\">null</span> || context == <span class=\"string\">\"\"</span> || context == <span class=\"string\">\"undefined\"</span> ? <span class=\"string\">\"\"</span> : context;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> formatDate = &#123;</div><div class=\"line\">        <span class=\"comment\">//将系统时间转化为字符时间</span></div><div class=\"line\">        format: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">date, pattern</span>) </span>&#123;</div><div class=\"line\">            pattern = pattern || DEFAULT_PATTERN;</div><div class=\"line\">            <span class=\"keyword\">return</span> pattern.replace(SIGN_REGEXP, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$<span class=\"number\">0</span></span>) </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">switch</span> ($<span class=\"number\">0.</span>charAt(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'y'</span>: <span class=\"keyword\">return</span> padding(date.getFullYear(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'M'</span>: <span class=\"keyword\">return</span> padding(date.getMonth() + <span class=\"number\">1</span>, $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'d'</span>: <span class=\"keyword\">return</span> padding(date.getDate(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'w'</span>: <span class=\"keyword\">return</span> date.getDay() + <span class=\"number\">1</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'h'</span>: <span class=\"keyword\">return</span> padding(date.getHours(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'m'</span>: <span class=\"keyword\">return</span> padding(date.getMinutes(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">'s'</span>: <span class=\"keyword\">return</span> padding(date.getSeconds(), $<span class=\"number\">0.</span>length);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//转化字符时间为系统时间</span></div><div class=\"line\">        parse: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">dateString, pattern</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> matchs1 = pattern.match(SIGN_REGEXP);</div><div class=\"line\">            <span class=\"keyword\">var</span> matchs2 = dateString.match(<span class=\"regexp\">/(\\d)+/g</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (matchs1.length == matchs2.length) &#123;</div><div class=\"line\">                <span class=\"keyword\">var</span> _date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"number\">1970</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; matchs1.length; i++) &#123;</div><div class=\"line\">                    <span class=\"keyword\">var</span> _int = <span class=\"built_in\">parseInt</span>(matchs2[i]);</div><div class=\"line\">                    <span class=\"keyword\">var</span> sign = matchs1[i];</div><div class=\"line\">                    <span class=\"keyword\">switch</span> (sign.charAt(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'y'</span>: _date.setFullYear(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'M'</span>: _date.setMonth(_int - <span class=\"number\">1</span>); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'d'</span>: _date.setDate(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'h'</span>: _date.setHours(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'m'</span>: _date.setMinutes(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"string\">'s'</span>: _date.setSeconds(_int); <span class=\"keyword\">break</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> _date;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>"},{"title":"vue根据后台返回01显示男女","date":"2016-12-13T13:14:18.000Z","_content":"\n\n\n\nvue根据后台返回01显示男女\n\n```js\n//性别显示转换\n//在计算属性里写好如下类似filter的代码\nformatSex: function (sex) {\n    return sex == 1 ? '男' : sex == 0 ? '女' : '未知';\n},\n\n```           ","source":"_posts/vue根据后台返回01显示男女.md","raw":"---\ntitle: vue根据后台返回01显示男女\ndate: 2016-12-13 21:14:18\ntags: Vue\n---\n\n\n\n\nvue根据后台返回01显示男女\n\n```js\n//性别显示转换\n//在计算属性里写好如下类似filter的代码\nformatSex: function (sex) {\n    return sex == 1 ? '男' : sex == 0 ? '女' : '未知';\n},\n\n```           ","slug":"vue根据后台返回01显示男女","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxrp0017og9wfgpmjqyw","content":"<p>vue根据后台返回01显示男女</p>\n<pre><code class=\"js\"><span class=\"comment\">//性别显示转换</span>\n<span class=\"comment\">//在计算属性里写好如下类似filter的代码</span>\nformatSex: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sex</span>) </span>{\n    <span class=\"keyword\">return</span> sex == <span class=\"number\">1</span> ? <span class=\"string\">'男'</span> : sex == <span class=\"number\">0</span> ? <span class=\"string\">'女'</span> : <span class=\"string\">'未知'</span>;\n},\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p>vue根据后台返回01显示男女</p>\n<pre><code class=\"js\"><span class=\"comment\">//性别显示转换</span>\n<span class=\"comment\">//在计算属性里写好如下类似filter的代码</span>\nformatSex: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sex</span>) </span>{\n    <span class=\"keyword\">return</span> sex == <span class=\"number\">1</span> ? <span class=\"string\">'男'</span> : sex == <span class=\"number\">0</span> ? <span class=\"string\">'女'</span> : <span class=\"string\">'未知'</span>;\n},\n</code></pre>\n"},{"title":"vue手机项目在手机端调试","date":"2017-02-15T13:36:22.000Z","_content":"\n用vue-cli创建的项目在\n\nnpm run dev后会自动打开浏览器localhost:8080看到效果\n\n有时候遇到手机上的项目，需要在手机上进行调试，这时候手机上就访问不到localhost了\n\n这时候我们只需要更改一下\nbuild/dev-server.js\n\n将var uri = 'http://localhost:' + port\n更改为var uri = '你本机的IP:' +port\n\n![](/img/vue1.png)\n\n**重启项目！！！**\n\n\n这样浏览器自动打开的就是本机地址了，将这个地址发到手机上，在手机上（前提是手机和电脑处在同一网络中）就可以访问了\n\n\n有时候项目打开的多了，会造成端口冲突，开可以在\nconfig/index.js里将port随便改个其他的端口\n\n\n如果是调试js可以使用腾讯开源的vconsole\n\nhttps://github.com/WechatFE/vConsole\n\n![](/img/log1.png)\n\n或者是spy-debugger（还可以调试布局）\n\nhttps://github.com/wuchangming/spy-debugger\n\n![](/img/log2.jpg)\n\n","source":"_posts/vue手机项目在手机端调试.md","raw":"---\ntitle: vue手机项目在手机端调试\ndate: 2017-2-15 21:36:22\ntags: Vue\n---\n\n用vue-cli创建的项目在\n\nnpm run dev后会自动打开浏览器localhost:8080看到效果\n\n有时候遇到手机上的项目，需要在手机上进行调试，这时候手机上就访问不到localhost了\n\n这时候我们只需要更改一下\nbuild/dev-server.js\n\n将var uri = 'http://localhost:' + port\n更改为var uri = '你本机的IP:' +port\n\n![](/img/vue1.png)\n\n**重启项目！！！**\n\n\n这样浏览器自动打开的就是本机地址了，将这个地址发到手机上，在手机上（前提是手机和电脑处在同一网络中）就可以访问了\n\n\n有时候项目打开的多了，会造成端口冲突，开可以在\nconfig/index.js里将port随便改个其他的端口\n\n\n如果是调试js可以使用腾讯开源的vconsole\n\nhttps://github.com/WechatFE/vConsole\n\n![](/img/log1.png)\n\n或者是spy-debugger（还可以调试布局）\n\nhttps://github.com/wuchangming/spy-debugger\n\n![](/img/log2.jpg)\n\n","slug":"vue手机项目在手机端调试","published":1,"updated":"2017-07-16T08:58:30.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxrp0019og9wslmm6cui","content":"<p>用vue-cli创建的项目在</p>\n<p>npm run dev后会自动打开浏览器localhost:8080看到效果</p>\n<p>有时候遇到手机上的项目，需要在手机上进行调试，这时候手机上就访问不到localhost了</p>\n<p>这时候我们只需要更改一下<br>build/dev-server.js</p>\n<p>将var uri = ‘<a href=\"http://localhost\" target=\"_blank\" rel=\"external\">http://localhost</a>:’ + port<br>更改为var uri = ‘你本机的IP:’ +port</p>\n<p><img src=\"/img/vue1.png\" alt=\"\"></p>\n<p><strong>重启项目！！！</strong></p>\n<p>这样浏览器自动打开的就是本机地址了，将这个地址发到手机上，在手机上（前提是手机和电脑处在同一网络中）就可以访问了</p>\n<p>有时候项目打开的多了，会造成端口冲突，开可以在<br>config/index.js里将port随便改个其他的端口</p>\n<p>如果是调试js可以使用腾讯开源的vconsole</p>\n<p><a href=\"https://github.com/WechatFE/vConsole\" target=\"_blank\" rel=\"external\">https://github.com/WechatFE/vConsole</a></p>\n<p><img src=\"/img/log1.png\" alt=\"\"></p>\n<p>或者是spy-debugger（还可以调试布局）</p>\n<p><a href=\"https://github.com/wuchangming/spy-debugger\" target=\"_blank\" rel=\"external\">https://github.com/wuchangming/spy-debugger</a></p>\n<p><img src=\"/img/log2.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>用vue-cli创建的项目在</p>\n<p>npm run dev后会自动打开浏览器localhost:8080看到效果</p>\n<p>有时候遇到手机上的项目，需要在手机上进行调试，这时候手机上就访问不到localhost了</p>\n<p>这时候我们只需要更改一下<br>build/dev-server.js</p>\n<p>将var uri = ‘<a href=\"http://localhost\" target=\"_blank\" rel=\"external\">http://localhost</a>:’ + port<br>更改为var uri = ‘你本机的IP:’ +port</p>\n<p><img src=\"/img/vue1.png\" alt=\"\"></p>\n<p><strong>重启项目！！！</strong></p>\n<p>这样浏览器自动打开的就是本机地址了，将这个地址发到手机上，在手机上（前提是手机和电脑处在同一网络中）就可以访问了</p>\n<p>有时候项目打开的多了，会造成端口冲突，开可以在<br>config/index.js里将port随便改个其他的端口</p>\n<p>如果是调试js可以使用腾讯开源的vconsole</p>\n<p><a href=\"https://github.com/WechatFE/vConsole\" target=\"_blank\" rel=\"external\">https://github.com/WechatFE/vConsole</a></p>\n<p><img src=\"/img/log1.png\" alt=\"\"></p>\n<p>或者是spy-debugger（还可以调试布局）</p>\n<p><a href=\"https://github.com/wuchangming/spy-debugger\" target=\"_blank\" rel=\"external\">https://github.com/wuchangming/spy-debugger</a></p>\n<p><img src=\"/img/log2.jpg\" alt=\"\"></p>\n"},{"title":"动态创建link标签","date":"2016-09-02T14:24:14.000Z","_content":"\n虽然现在流行响应式，自适应等等，但是仍旧有些系统存在换肤啦，切换样式啦等需求，这样可以通过动态创建link标签来实现这样的效果\n废话不多说，上代码\n\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <script src=\"../../base/jquery-1.12.2.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"pc\">pc</button>\n<button id=\"mob\">mob</button>\n<button id=\"remove\">remove</button>\n\n<script>\n\n    $('#pc').click(function () {\n        link.creat('ccss', 'pc.css')\n    })\n    $('#mob').click(function () {\n        link.creat('ccss', 'mob.css')\n    })\n    $('#remove').click(function () {\n        link.remove('#ccss')\n    })\n\n\n    var link = {\n        remove: function (id) {\n            $('link').remove(id);\n        },\n        //单例模式写法\n        creat: (function () {\n            var linkTag;\n            return function(id,url){\n                if (document.getElementById(id)) {\n                    linkTag.attr({'id':id,'href':url})\n                }else{\n                    linkTag = $('<link>').attr({\n                        'id': id,\n                        'href': url,\n                        'rel': 'stylesheet',\n                        'type': 'text/css',\n                        'media': 'all'\n                    });\n                    $($('head')[0]).append(linkTag);\n                }\n                return linkTag;\n            }\n        })()\n    }\n\n\n</script>\n</body>\n</html>\n```","source":"_posts/动态创建link标签.md","raw":"---\ntitle: 动态创建link标签\ndate: 2016-09-02 22:24:14\ntags: HTML\n---\n\n虽然现在流行响应式，自适应等等，但是仍旧有些系统存在换肤啦，切换样式啦等需求，这样可以通过动态创建link标签来实现这样的效果\n废话不多说，上代码\n\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"renderer\" content=\"webkit\">\n    <script src=\"../../base/jquery-1.12.2.js\"></script>\n    <title>Title</title>\n</head>\n<body>\n<button id=\"pc\">pc</button>\n<button id=\"mob\">mob</button>\n<button id=\"remove\">remove</button>\n\n<script>\n\n    $('#pc').click(function () {\n        link.creat('ccss', 'pc.css')\n    })\n    $('#mob').click(function () {\n        link.creat('ccss', 'mob.css')\n    })\n    $('#remove').click(function () {\n        link.remove('#ccss')\n    })\n\n\n    var link = {\n        remove: function (id) {\n            $('link').remove(id);\n        },\n        //单例模式写法\n        creat: (function () {\n            var linkTag;\n            return function(id,url){\n                if (document.getElementById(id)) {\n                    linkTag.attr({'id':id,'href':url})\n                }else{\n                    linkTag = $('<link>').attr({\n                        'id': id,\n                        'href': url,\n                        'rel': 'stylesheet',\n                        'type': 'text/css',\n                        'media': 'all'\n                    });\n                    $($('head')[0]).append(linkTag);\n                }\n                return linkTag;\n            }\n        })()\n    }\n\n\n</script>\n</body>\n</html>\n```","slug":"动态创建link标签","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxrp001cog9w7lb79nrv","content":"<p>虽然现在流行响应式，自适应等等，但是仍旧有些系统存在换肤啦，切换样式啦等需求，这样可以通过动态创建link标签来实现这样的效果<br>废话不多说，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"../../base/jquery-1.12.2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pc\"</span>&gt;</span>pc<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mob\"</span>&gt;</span>mob<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"remove\"</span>&gt;</span>remove<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"></div><div class=\"line\">    $(<span class=\"string\">'#pc'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.creat(<span class=\"string\">'ccss'</span>, <span class=\"string\">'pc.css'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#mob'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.creat(<span class=\"string\">'ccss'</span>, <span class=\"string\">'mob.css'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#remove'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.remove(<span class=\"string\">'#ccss'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> link = &#123;</div><div class=\"line\">        <span class=\"attr\">remove</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">            $(<span class=\"string\">'link'</span>).remove(id);</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//单例模式写法</span></div><div class=\"line\">        creat: (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> linkTag;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id,url</span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(id)) &#123;</div><div class=\"line\">                    linkTag.attr(&#123;<span class=\"string\">'id'</span>:id,<span class=\"string\">'href'</span>:url&#125;)</div><div class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                    linkTag = $(<span class=\"string\">'&lt;link&gt;'</span>).attr(&#123;</div><div class=\"line\">                        <span class=\"string\">'id'</span>: id,</div><div class=\"line\">                        <span class=\"string\">'href'</span>: url,</div><div class=\"line\">                        <span class=\"string\">'rel'</span>: <span class=\"string\">'stylesheet'</span>,</div><div class=\"line\">                        <span class=\"string\">'type'</span>: <span class=\"string\">'text/css'</span>,</div><div class=\"line\">                        <span class=\"string\">'media'</span>: <span class=\"string\">'all'</span></div><div class=\"line\">                    &#125;);</div><div class=\"line\">                    $($(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>]).append(linkTag);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> linkTag;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>虽然现在流行响应式，自适应等等，但是仍旧有些系统存在换肤啦，切换样式啦等需求，这样可以通过动态创建link标签来实现这样的效果<br>废话不多说，上代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"../../base/jquery-1.12.2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pc\"</span>&gt;</span>pc<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mob\"</span>&gt;</span>mob<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"remove\"</span>&gt;</span>remove<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"></div><div class=\"line\">    $(<span class=\"string\">'#pc'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.creat(<span class=\"string\">'ccss'</span>, <span class=\"string\">'pc.css'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#mob'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.creat(<span class=\"string\">'ccss'</span>, <span class=\"string\">'mob.css'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\">    $(<span class=\"string\">'#remove'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        link.remove(<span class=\"string\">'#ccss'</span>)</div><div class=\"line\">    &#125;)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">var</span> link = &#123;</div><div class=\"line\">        <span class=\"attr\">remove</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">id</span>) </span>&#123;</div><div class=\"line\">            $(<span class=\"string\">'link'</span>).remove(id);</div><div class=\"line\">        &#125;,</div><div class=\"line\">        <span class=\"comment\">//单例模式写法</span></div><div class=\"line\">        creat: (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> linkTag;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id,url</span>)</span>&#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(id)) &#123;</div><div class=\"line\">                    linkTag.attr(&#123;<span class=\"string\">'id'</span>:id,<span class=\"string\">'href'</span>:url&#125;)</div><div class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                    linkTag = $(<span class=\"string\">'&lt;link&gt;'</span>).attr(&#123;</div><div class=\"line\">                        <span class=\"string\">'id'</span>: id,</div><div class=\"line\">                        <span class=\"string\">'href'</span>: url,</div><div class=\"line\">                        <span class=\"string\">'rel'</span>: <span class=\"string\">'stylesheet'</span>,</div><div class=\"line\">                        <span class=\"string\">'type'</span>: <span class=\"string\">'text/css'</span>,</div><div class=\"line\">                        <span class=\"string\">'media'</span>: <span class=\"string\">'all'</span></div><div class=\"line\">                    &#125;);</div><div class=\"line\">                    $($(<span class=\"string\">'head'</span>)[<span class=\"number\">0</span>]).append(linkTag);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">return</span> linkTag;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;)()</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"vue验证本地token判断是否允许访问","date":"2017-01-19T14:16:22.000Z","_content":"\nVue官网给的例子是把token存到vuex里，但是我们知道vuex在用户刷新浏览器的时候数据就丢失了，造成拿不到token就又跳到登录页了，这显然是不可以的，于是我们只能换个地方那就是sessionStorage\n\n看代码\n\n```js\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start();\n  if (to.path == '/login') {\n    sessionStorage.removeItem('token');\n  }\n  let user = JSON.parse(sessionStorage.getItem('token'));\n  if (!user && to.path != '/login') {\n    next({ path: '/login' })\n  } else {\n    next()\n  }\n})\n```\n\n但是又遇到另外一个问题，虽然后台给token加了时间，比如半小时就失效，但是用户一直没有关闭，sessionStorage就一直没有消失，用户还是可以跳转到他想去的页面\n\n所以我们需要在每个ajax的接口里都要验证token的有效性（后端验证)，根据后端返回的状态码进行判断\n\n```js\n\nif (res.returnCode === '401') {\n    //没有权限，跳转到登录页\n    this.$router.push({ path: 'login' })\n    \n}\n\n```\n\n现在普通浏览器都没有问题，但是在中国有这样神奇的浏览器，360双核浏览器，有时候莫名其妙的在IE和Chrome之间切换，sessionStorage在两个内核里不共享，这个时候可以考虑用cookie\n\n不过只需要在index.html头部加一句\n```html\n<meta name=renderer content=webkit>\n```\n\n就可以了，强制使用webkit内核\n\n","source":"_posts/vue验证本地token判断是否允许访问.md","raw":"---\ntitle: vue验证本地token判断是否允许访问\ndate: 2017-1-19 22:16:22\ntags: Vue\n---\n\nVue官网给的例子是把token存到vuex里，但是我们知道vuex在用户刷新浏览器的时候数据就丢失了，造成拿不到token就又跳到登录页了，这显然是不可以的，于是我们只能换个地方那就是sessionStorage\n\n看代码\n\n```js\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start();\n  if (to.path == '/login') {\n    sessionStorage.removeItem('token');\n  }\n  let user = JSON.parse(sessionStorage.getItem('token'));\n  if (!user && to.path != '/login') {\n    next({ path: '/login' })\n  } else {\n    next()\n  }\n})\n```\n\n但是又遇到另外一个问题，虽然后台给token加了时间，比如半小时就失效，但是用户一直没有关闭，sessionStorage就一直没有消失，用户还是可以跳转到他想去的页面\n\n所以我们需要在每个ajax的接口里都要验证token的有效性（后端验证)，根据后端返回的状态码进行判断\n\n```js\n\nif (res.returnCode === '401') {\n    //没有权限，跳转到登录页\n    this.$router.push({ path: 'login' })\n    \n}\n\n```\n\n现在普通浏览器都没有问题，但是在中国有这样神奇的浏览器，360双核浏览器，有时候莫名其妙的在IE和Chrome之间切换，sessionStorage在两个内核里不共享，这个时候可以考虑用cookie\n\n不过只需要在index.html头部加一句\n```html\n<meta name=renderer content=webkit>\n```\n\n就可以了，强制使用webkit内核\n\n","slug":"vue验证本地token判断是否允许访问","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxs5001eog9wnwxbnjsv","content":"<p>Vue官网给的例子是把token存到vuex里，但是我们知道vuex在用户刷新浏览器的时候数据就丢失了，造成拿不到token就又跳到登录页了，这显然是不可以的，于是我们只能换个地方那就是sessionStorage</p>\n<p>看代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</div><div class=\"line\">  NProgress.start();</div><div class=\"line\">  <span class=\"keyword\">if</span> (to.path == <span class=\"string\">'/login'</span>) &#123;</div><div class=\"line\">    sessionStorage.removeItem(<span class=\"string\">'token'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">let</span> user = <span class=\"built_in\">JSON</span>.parse(sessionStorage.getItem(<span class=\"string\">'token'</span>));</div><div class=\"line\">  <span class=\"keyword\">if</span> (!user &amp;&amp; to.path != <span class=\"string\">'/login'</span>) &#123;</div><div class=\"line\">    next(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'/login'</span> &#125;)</div><div class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    next()</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>但是又遇到另外一个问题，虽然后台给token加了时间，比如半小时就失效，但是用户一直没有关闭，sessionStorage就一直没有消失，用户还是可以跳转到他想去的页面</p>\n<p>所以我们需要在每个ajax的接口里都要验证token的有效性（后端验证)，根据后端返回的状态码进行判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (res.returnCode === <span class=\"string\">'401'</span>) &#123;</div><div class=\"line\">    <span class=\"comment\">//没有权限，跳转到登录页</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.$router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'login'</span> &#125;)</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>现在普通浏览器都没有问题，但是在中国有这样神奇的浏览器，360双核浏览器，有时候莫名其妙的在IE和Chrome之间切换，sessionStorage在两个内核里不共享，这个时候可以考虑用cookie</p>\n<p>不过只需要在index.html头部加一句<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">renderer</span> <span class=\"attr\">content</span>=<span class=\"string\">webkit</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>就可以了，强制使用webkit内核</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Vue官网给的例子是把token存到vuex里，但是我们知道vuex在用户刷新浏览器的时候数据就丢失了，造成拿不到token就又跳到登录页了，这显然是不可以的，于是我们只能换个地方那就是sessionStorage</p>\n<p>看代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</div><div class=\"line\">  NProgress.start();</div><div class=\"line\">  <span class=\"keyword\">if</span> (to.path == <span class=\"string\">'/login'</span>) &#123;</div><div class=\"line\">    sessionStorage.removeItem(<span class=\"string\">'token'</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">let</span> user = <span class=\"built_in\">JSON</span>.parse(sessionStorage.getItem(<span class=\"string\">'token'</span>));</div><div class=\"line\">  <span class=\"keyword\">if</span> (!user &amp;&amp; to.path != <span class=\"string\">'/login'</span>) &#123;</div><div class=\"line\">    next(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'/login'</span> &#125;)</div><div class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    next()</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>但是又遇到另外一个问题，虽然后台给token加了时间，比如半小时就失效，但是用户一直没有关闭，sessionStorage就一直没有消失，用户还是可以跳转到他想去的页面</p>\n<p>所以我们需要在每个ajax的接口里都要验证token的有效性（后端验证)，根据后端返回的状态码进行判断</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (res.returnCode === <span class=\"string\">'401'</span>) &#123;</div><div class=\"line\">    <span class=\"comment\">//没有权限，跳转到登录页</span></div><div class=\"line\">    <span class=\"keyword\">this</span>.$router.push(&#123; <span class=\"attr\">path</span>: <span class=\"string\">'login'</span> &#125;)</div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>现在普通浏览器都没有问题，但是在中国有这样神奇的浏览器，360双核浏览器，有时候莫名其妙的在IE和Chrome之间切换，sessionStorage在两个内核里不共享，这个时候可以考虑用cookie</p>\n<p>不过只需要在index.html头部加一句<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">renderer</span> <span class=\"attr\">content</span>=<span class=\"string\">webkit</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>就可以了，强制使用webkit内核</p>\n"},{"title":"多层数组是否被包含方法","date":"2016-10-09T14:18:20.000Z","_content":"\n```js\n var aarr = [\n            [\"aaaa\", \"bbbb\"], [\"aaa\", \"bbb\"]\n        ]\n        var aarr2 = [\n            [\"cccc\", \"dddd\"], ['ccc', 'ddd']\n        ]\n        var aarr3 = [\n            [\"aaaa\", \"bbbb\"], [\"aaa\", \"bbb\"]\n        ]\n        var aarr3 = [\n            [\"aaaa\", \"bb\"], [\"aaa\", \"bbb\"]\n        ]\n\n        \n        function isContained (arr1, arr2) {\n            //arr1为被包含数组\n            let tempArr1 = arr1.join(',').split(',')\n            //加逗号是防止出现字符串包含字符串的情况\n            let tempArr2 = ',' + arr2.join(',').split(',').join(',') + ','\n            let flag = true\n            for( let i = 0; i < tempArr1.length; i++) {\n                if(tempArr2.indexOf(',' + tempArr1[i] + ',') === -1){\n                    flag = false\n                    break\n                }\n            }\n            return flag\n        }\n        console.log(isContained(aarr3, aarr))\n\n\n```","source":"_posts/多层数组是否被包含方法.md","raw":"---\ntitle: 多层数组是否被包含方法\ndate: 2016-10-09 22:18:20\ntags: JS\n---\n\n```js\n var aarr = [\n            [\"aaaa\", \"bbbb\"], [\"aaa\", \"bbb\"]\n        ]\n        var aarr2 = [\n            [\"cccc\", \"dddd\"], ['ccc', 'ddd']\n        ]\n        var aarr3 = [\n            [\"aaaa\", \"bbbb\"], [\"aaa\", \"bbb\"]\n        ]\n        var aarr3 = [\n            [\"aaaa\", \"bb\"], [\"aaa\", \"bbb\"]\n        ]\n\n        \n        function isContained (arr1, arr2) {\n            //arr1为被包含数组\n            let tempArr1 = arr1.join(',').split(',')\n            //加逗号是防止出现字符串包含字符串的情况\n            let tempArr2 = ',' + arr2.join(',').split(',').join(',') + ','\n            let flag = true\n            for( let i = 0; i < tempArr1.length; i++) {\n                if(tempArr2.indexOf(',' + tempArr1[i] + ',') === -1){\n                    flag = false\n                    break\n                }\n            }\n            return flag\n        }\n        console.log(isContained(aarr3, aarr))\n\n\n```","slug":"多层数组是否被包含方法","published":1,"updated":"2017-09-23T09:23:14.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxs5001hog9wxh8u2ezs","content":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> aarr = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bbbb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr2 = [</div><div class=\"line\">           [<span class=\"string\">\"cccc\"</span>, <span class=\"string\">\"dddd\"</span>], [<span class=\"string\">'ccc'</span>, <span class=\"string\">'ddd'</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr3 = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bbbb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr3 = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isContained</span> (<span class=\"params\">arr1, arr2</span>) </span>&#123;</div><div class=\"line\">           <span class=\"comment\">//arr1为被包含数组</span></div><div class=\"line\">           <span class=\"keyword\">let</span> tempArr1 = arr1.join(<span class=\"string\">','</span>).split(<span class=\"string\">','</span>)</div><div class=\"line\">           <span class=\"comment\">//加逗号是防止出现字符串包含字符串的情况</span></div><div class=\"line\">           <span class=\"keyword\">let</span> tempArr2 = <span class=\"string\">','</span> + arr2.join(<span class=\"string\">','</span>).split(<span class=\"string\">','</span>).join(<span class=\"string\">','</span>) + <span class=\"string\">','</span></div><div class=\"line\">           <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span></div><div class=\"line\">           <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; tempArr1.length; i++) &#123;</div><div class=\"line\">               <span class=\"keyword\">if</span>(tempArr2.indexOf(<span class=\"string\">','</span> + tempArr1[i] + <span class=\"string\">','</span>) === <span class=\"number\">-1</span>)&#123;</div><div class=\"line\">                   flag = <span class=\"literal\">false</span></div><div class=\"line\">                   <span class=\"keyword\">break</span></div><div class=\"line\">               &#125;</div><div class=\"line\">           &#125;</div><div class=\"line\">           <span class=\"keyword\">return</span> flag</div><div class=\"line\">       &#125;</div><div class=\"line\">       <span class=\"built_in\">console</span>.log(isContained(aarr3, aarr))</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> aarr = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bbbb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr2 = [</div><div class=\"line\">           [<span class=\"string\">\"cccc\"</span>, <span class=\"string\">\"dddd\"</span>], [<span class=\"string\">'ccc'</span>, <span class=\"string\">'ddd'</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr3 = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bbbb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\">       <span class=\"keyword\">var</span> aarr3 = [</div><div class=\"line\">           [<span class=\"string\">\"aaaa\"</span>, <span class=\"string\">\"bb\"</span>], [<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"bbb\"</span>]</div><div class=\"line\">       ]</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isContained</span> (<span class=\"params\">arr1, arr2</span>) </span>&#123;</div><div class=\"line\">           <span class=\"comment\">//arr1为被包含数组</span></div><div class=\"line\">           <span class=\"keyword\">let</span> tempArr1 = arr1.join(<span class=\"string\">','</span>).split(<span class=\"string\">','</span>)</div><div class=\"line\">           <span class=\"comment\">//加逗号是防止出现字符串包含字符串的情况</span></div><div class=\"line\">           <span class=\"keyword\">let</span> tempArr2 = <span class=\"string\">','</span> + arr2.join(<span class=\"string\">','</span>).split(<span class=\"string\">','</span>).join(<span class=\"string\">','</span>) + <span class=\"string\">','</span></div><div class=\"line\">           <span class=\"keyword\">let</span> flag = <span class=\"literal\">true</span></div><div class=\"line\">           <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; tempArr1.length; i++) &#123;</div><div class=\"line\">               <span class=\"keyword\">if</span>(tempArr2.indexOf(<span class=\"string\">','</span> + tempArr1[i] + <span class=\"string\">','</span>) === <span class=\"number\">-1</span>)&#123;</div><div class=\"line\">                   flag = <span class=\"literal\">false</span></div><div class=\"line\">                   <span class=\"keyword\">break</span></div><div class=\"line\">               &#125;</div><div class=\"line\">           &#125;</div><div class=\"line\">           <span class=\"keyword\">return</span> flag</div><div class=\"line\">       &#125;</div><div class=\"line\">       <span class=\"built_in\">console</span>.log(isContained(aarr3, aarr))</div></pre></td></tr></table></figure>"},{"title":"文字超出显示省略号","date":"2016-08-03T15:12:04.000Z","_content":"\n\n\nCSS解决方案\n\n\n```css\noverflow: hidden; /*自动隐藏文字*/\ntext-overflow: ellipsis;/*文字隐藏后添加省略号*/\nwhite-space: nowrap;/*强制不换行*/\nwidth: 20em;/*不允许出现半汉字截断*/\n```\n\n多行文字的时候css就解决不了\n这时候我们用jq插件\n\njquery.dotdotdot.js\n\n兼容性很好，而且可以配置超出显示的三个点的字符\n\n```html\n<div id=\"wrapper\">\n    <p id=\"ddd\">死了辜负好时光还是客观还是打开个好地方手里的工行工行打fgdg款就发大量高科技和大家更好的反馈结果还的复古花朵</p>\n</div>\n\n<script>\n$(document).ready(function() {\n    $(\"#wrapper\").dotdotdot({\n        // configuration goes here\n        ellipsis:'... ',\n        wrap:'word'\n    })\n})\n</script>\n    \n\n```","source":"_posts/文字超出显示省略号.md","raw":"---\ntitle: 文字超出显示省略号\ndate: 2016-08-03 23:12:04\ntags: CSS JS\n---\n\n\n\nCSS解决方案\n\n\n```css\noverflow: hidden; /*自动隐藏文字*/\ntext-overflow: ellipsis;/*文字隐藏后添加省略号*/\nwhite-space: nowrap;/*强制不换行*/\nwidth: 20em;/*不允许出现半汉字截断*/\n```\n\n多行文字的时候css就解决不了\n这时候我们用jq插件\n\njquery.dotdotdot.js\n\n兼容性很好，而且可以配置超出显示的三个点的字符\n\n```html\n<div id=\"wrapper\">\n    <p id=\"ddd\">死了辜负好时光还是客观还是打开个好地方手里的工行工行打fgdg款就发大量高科技和大家更好的反馈结果还的复古花朵</p>\n</div>\n\n<script>\n$(document).ready(function() {\n    $(\"#wrapper\").dotdotdot({\n        // configuration goes here\n        ellipsis:'... ',\n        wrap:'word'\n    })\n})\n</script>\n    \n\n```","slug":"文字超出显示省略号","published":1,"updated":"2017-07-18T13:01:05.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7x4xxs5001jog9w9vdv4lj9","content":"<p>CSS解决方案</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>; <span class=\"comment\">/*自动隐藏文字*/</span></div><div class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;<span class=\"comment\">/*文字隐藏后添加省略号*/</span></div><div class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;<span class=\"comment\">/*强制不换行*/</span></div><div class=\"line\"><span class=\"selector-tag\">width</span>: 20<span class=\"selector-tag\">em</span>;<span class=\"comment\">/*不允许出现半汉字截断*/</span></div></pre></td></tr></table></figure>\n<p>多行文字的时候css就解决不了<br>这时候我们用jq插件</p>\n<p>jquery.dotdotdot.js</p>\n<p>兼容性很好，而且可以配置超出显示的三个点的字符</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddd\"</span>&gt;</span>死了辜负好时光还是客观还是打开个好地方手里的工行工行打fgdg款就发大量高科技和大家更好的反馈结果还的复古花朵<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">\"#wrapper\"</span>).dotdotdot(&#123;</div><div class=\"line\">        <span class=\"comment\">// configuration goes here</span></div><div class=\"line\">        ellipsis:<span class=\"string\">'... '</span>,</div><div class=\"line\">        <span class=\"attr\">wrap</span>:<span class=\"string\">'word'</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>CSS解决方案</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>; <span class=\"comment\">/*自动隐藏文字*/</span></div><div class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;<span class=\"comment\">/*文字隐藏后添加省略号*/</span></div><div class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;<span class=\"comment\">/*强制不换行*/</span></div><div class=\"line\"><span class=\"selector-tag\">width</span>: 20<span class=\"selector-tag\">em</span>;<span class=\"comment\">/*不允许出现半汉字截断*/</span></div></pre></td></tr></table></figure>\n<p>多行文字的时候css就解决不了<br>这时候我们用jq插件</p>\n<p>jquery.dotdotdot.js</p>\n<p>兼容性很好，而且可以配置超出显示的三个点的字符</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ddd\"</span>&gt;</span>死了辜负好时光还是客观还是打开个好地方手里的工行工行打fgdg款就发大量高科技和大家更好的反馈结果还的复古花朵<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    $(<span class=\"string\">\"#wrapper\"</span>).dotdotdot(&#123;</div><div class=\"line\">        <span class=\"comment\">// configuration goes here</span></div><div class=\"line\">        ellipsis:<span class=\"string\">'... '</span>,</div><div class=\"line\">        <span class=\"attr\">wrap</span>:<span class=\"string\">'word'</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj7x4xxo80000og9waca48o2o","tag_id":"cj7x4xxp30004og9wd4igmwa5","_id":"cj7x4xxpz000aog9wgyiaxnj3"},{"post_id":"cj7x4xxp30002og9wckadxqx3","tag_id":"cj7x4xxp30004og9wd4igmwa5","_id":"cj7x4xxpz000eog9wberirtmk"},{"post_id":"cj7x4xxpj0005og9w7ryysqei","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxqe000jog9wl1m8x2ix"},{"post_id":"cj7x4xxpz000gog9w63gooa88","tag_id":"cj7x4xxp30004og9wd4igmwa5","_id":"cj7x4xxqe000log9wqrsjk9s5"},{"post_id":"cj7x4xxqe000iog9wnixisnfz","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxqu000oog9we67al232"},{"post_id":"cj7x4xxpj0007og9wdgzr60j8","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxqu000qog9w88iqo3fy"},{"post_id":"cj7x4xxqu000nog9wppw365cq","tag_id":"cj7x4xxp30004og9wd4igmwa5","_id":"cj7x4xxqu000tog9worfqu9v4"},{"post_id":"cj7x4xxpj0008og9w0fhyskn9","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxqu000vog9wozl9mj81"},{"post_id":"cj7x4xxqu000sog9whpbuswg8","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxra000yog9wxteq2hd6"},{"post_id":"cj7x4xxpz000bog9wpm5vwq2y","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxra0010og9w7ew68ety"},{"post_id":"cj7x4xxqu000uog9w4ayed7js","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxrp0013og9wex7g9yqz"},{"post_id":"cj7x4xxra000xog9wd5z5vldc","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxrp0015og9wskbvt96o"},{"post_id":"cj7x4xxpz000cog9wm8teyl3b","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxrp0018og9worbwfpff"},{"post_id":"cj7x4xxra000zog9wlnx5xp2p","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxrp001aog9wntldbnk1"},{"post_id":"cj7x4xxrp0012og9w7r0h7dgs","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001dog9w0t069sex"},{"post_id":"cj7x4xxpz000fog9wwlejkhwg","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001fog9wtc5hmnze"},{"post_id":"cj7x4xxrp0014og9w9uoz3vq9","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001iog9wijzxs1fi"},{"post_id":"cj7x4xxrp0017og9wfgpmjqyw","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001kog9wnq12l9kk"},{"post_id":"cj7x4xxqe000kog9w2xw9ub3t","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001log9wan5tb18n"},{"post_id":"cj7x4xxrp0019og9wslmm6cui","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001nog9wwczl1h61"},{"post_id":"cj7x4xxqu000pog9wrns4rngi","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001oog9whm3nj4al"},{"post_id":"cj7x4xxs5001eog9wnwxbnjsv","tag_id":"cj7x4xxqu000rog9w1mbi4eng","_id":"cj7x4xxs5001pog9wyvub5783"},{"post_id":"cj7x4xxs5001hog9wxh8u2ezs","tag_id":"cj7x4xxpz000dog9wu3v8r9vw","_id":"cj7x4xxs5001qog9ws54nsgla"},{"post_id":"cj7x4xxrp001cog9w7lb79nrv","tag_id":"cj7x4xxs5001gog9wd7dcuhd3","_id":"cj7x4xxsk001rog9w6k8kb2if"},{"post_id":"cj7x4xxs5001jog9w9vdv4lj9","tag_id":"cj7x4xxs5001mog9wy89ztvk6","_id":"cj7x4xxsk001sog9w7022mfzb"}],"Tag":[{"name":"Other","_id":"cj7x4xxp30004og9wd4igmwa5"},{"name":"JS","_id":"cj7x4xxpz000dog9wu3v8r9vw"},{"name":"Vue","_id":"cj7x4xxqu000rog9w1mbi4eng"},{"name":"HTML","_id":"cj7x4xxs5001gog9wd7dcuhd3"},{"name":"CSS JS","_id":"cj7x4xxs5001mog9wy89ztvk6"}]}}